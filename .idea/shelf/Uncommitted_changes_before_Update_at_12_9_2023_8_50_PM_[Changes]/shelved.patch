Index: src/main/java/com/example/watch_it/MainPageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.stage.Stage;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.Button;\r\n\r\npublic class MainPageController {\r\n    private Stage stage;\r\n\r\n    @FXML\r\n    private Label Action;\r\n    @FXML\r\n    private Label Comedy;\r\n    @FXML\r\n    private Label Drama;\r\n    @FXML\r\n    private Label Horror;\r\n    @FXML\r\n    private Label All;\r\n    @FXML\r\n    private Button Search;\r\n\r\n    private final ArrayList<Movie> movies = new ArrayList<>();\r\n    @FXML\r\n    HBox allMovies;\r\n    @FXML\r\n    HBox allMovies2;\r\n\r\n\r\n    private void getData(){\r\n        Movie movie = new Movie(),movie2=new Movie(),movie3=new Movie();\r\n        movie.setTitle(\"Spider Man\");\r\n        movie.setPoster_path(\"C:\\\\Users\\\\Youssef Mohsen\\\\IdeaProjects\\\\Watch_It\\\\src\\\\main\\\\resources\\\\com\\\\example\\\\watch_it\\\\assets\\\\Amazing_SpiderMan.png\");\r\n\r\n        movie2.setTitle(\"Spider Man2\");\r\n        movie2.setPoster_path(\"C:\\\\Users\\\\Youssef Mohsen\\\\IdeaProjects\\\\Watch_It\\\\src\\\\main\\\\resources\\\\com\\\\example\\\\watch_it\\\\assets\\\\Amazing_SpiderMan.png\");\r\n\r\n        movie3.setTitle(\"Gravity\");\r\n        movie3.setPoster_path(\"C:\\\\Users\\\\Youssef Mohsen\\\\IdeaProjects\\\\Watch_It\\\\src\\\\main\\\\resources\\\\com\\\\example\\\\watch_it\\\\assets\\\\DefaultImage.jpg\");\r\n        movies.add(movie);\r\n        movies.add(movie2);\r\n        movies.add(movie3);\r\n        movies.add(movie);\r\n        movies.add(movie);\r\n        movies.add(movie);\r\n\r\n    }\r\n\r\n    @FXML\r\n    private void initialize(){\r\n        getData();\r\n        for(Movie movie:movies){\r\n            addToGUI(movie);\r\n            addToGUI2(movie);\r\n        }\r\n    }\r\n\r\n    private void addToGUI(Movie movie){\r\n\r\n        VBox movieContainer = new VBox(10);\r\n        movieContainer.setPrefWidth(200);\r\n        movieContainer.setPrefHeight(200);\r\n        Image image = new Image(movie.getPoster_path());\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitHeight(237);\r\n        imageView.setFitWidth(200);\r\n        Label label = new Label(movie.getTitle());\r\n        label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        movieContainer.setAlignment(Pos.CENTER);\r\n        movieContainer.getChildren().addAll(imageView, label);\r\n        movieContainer.setOnMouseClicked(event -> onMouseClickedVBox(image));\r\n        allMovies.getChildren().addAll(movieContainer);\r\n\r\n    }\r\n    private void addToGUI2(Movie movie){\r\n\r\n        VBox movieContainer = new VBox(10);\r\n        movieContainer.setPrefWidth(200);\r\n        movieContainer.setPrefHeight(200);\r\n        Image image = new Image(movie.getPoster_path());\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitHeight(237);\r\n        imageView.setFitWidth(200);\r\n        Label label = new Label(movie.getTitle());\r\n        label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        movieContainer.setAlignment(Pos.CENTER);\r\n        movieContainer.getChildren().addAll(imageView, label);\r\n        movieContainer.setOnMouseClicked(event -> onMouseClickedVBox(image));\r\n        allMovies2.getChildren().addAll(movieContainer);\r\n\r\n    }\r\n\r\n    public void onMouseClicked() {\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"movie-view.fxml\"));\r\n        Parent root;\r\n        try {\r\n            root = loader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        MovieController controller = loader.getController();\r\n        controller.setStage(stage);\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(\"Movie\");\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        Image image = new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"@assets/Amazing_SpiderMan.png\")));\r\n        controller.refreshLabels(\"Watch Movie Amazing SpiderMan(2023)\",\"Amazing SpiderMan\",\r\n                \"Amazing SpiderMan Translated\",\"Action\",\"Amazing SpiderMan film.\",\r\n                \"120 minutes\",image);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n\r\n    }\r\n    public void onMouseClickedVBox(Image image) {\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"movie-view.fxml\"));\r\n        Parent root;\r\n        try {\r\n            root = loader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        MovieController controller = loader.getController();\r\n        controller.setStage(stage);\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(\"Movie\");\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n\r\n        controller.refreshLabels(\"Watch Movie Amazing SpiderMan(2023)\", \"Amazing SpiderMan\",\r\n                \"Amazing SpiderMan Translated\", \"Action\", \"Amazing SpiderMan film.\",\r\n                \"120 minutes\", image);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n\r\n    }\r\n\r\n    public void onMouseEntered() {\r\n        Action.setOnMouseEntered(event -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #FFC107;\"));\r\n        Comedy.setOnMouseEntered(event -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #FFC107;\"));\r\n        Drama.setOnMouseEntered(event -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #FFC107;\"));\r\n        Horror.setOnMouseEntered(event -> Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #FFC107;\"));\r\n        All.setOnMouseEntered(event -> All.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        Search.setOnMouseEntered(event -> Search.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n\r\n    public void onMouseExit() {\r\n        // Handle mouse exit event\r\n        Action.setOnMouseExited(event -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n        Comedy.setOnMouseExited(event -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n        Drama.setOnMouseExited(event -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n        Horror.setOnMouseExited(event -> Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n        All.setOnMouseExited(event -> All.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        Search.setOnMouseExited(event -> Search.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n    ////////////////////////////\r\n\r\n\r\n    ///////////////////////////\r\n\r\n    public void setStage(Stage stage) {\r\n        this.stage = stage;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/MainPageController.java b/src/main/java/com/example/watch_it/MainPageController.java
--- a/src/main/java/com/example/watch_it/MainPageController.java	(revision 65a0ef5fe6bce6215c76638a2263ce7e3b39cea3)
+++ b/src/main/java/com/example/watch_it/MainPageController.java	(date 1702137662530)
@@ -43,13 +43,13 @@
     private void getData(){
         Movie movie = new Movie(),movie2=new Movie(),movie3=new Movie();
         movie.setTitle("Spider Man");
-        movie.setPoster_path("C:\\Users\\Youssef Mohsen\\IdeaProjects\\Watch_It\\src\\main\\resources\\com\\example\\watch_it\\assets\\Amazing_SpiderMan.png");
+        movie.setPoster_path("file:/C:/programming/java/Watch_It/src/main/resources/com/example/watch_it/assets/Amazing_SpiderMan.png");
 
         movie2.setTitle("Spider Man2");
-        movie2.setPoster_path("C:\\Users\\Youssef Mohsen\\IdeaProjects\\Watch_It\\src\\main\\resources\\com\\example\\watch_it\\assets\\Amazing_SpiderMan.png");
+        movie2.setPoster_path("file:/C:/programming/java/Watch_It/src/main/resources/com/example/watch_it/assets/Amazing_SpiderMan.png");
 
         movie3.setTitle("Gravity");
-        movie3.setPoster_path("C:\\Users\\Youssef Mohsen\\IdeaProjects\\Watch_It\\src\\main\\resources\\com\\example\\watch_it\\assets\\DefaultImage.jpg");
+        movie3.setPoster_path("Amazing_SpiderMan.png");
         movies.add(movie);
         movies.add(movie2);
         movies.add(movie3);
@@ -73,7 +73,7 @@
         VBox movieContainer = new VBox(10);
         movieContainer.setPrefWidth(200);
         movieContainer.setPrefHeight(200);
-        Image image = new Image(movie.getPoster_path());
+        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));
         ImageView imageView = new ImageView(image);
         imageView.setFitHeight(237);
         imageView.setFitWidth(200);
Index: src/main/java/com/example/watch_it/Admin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.io.*;\r\nimport java.time.Month;\r\nimport java.time.Period;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.time.LocalDate;\r\nimport java.util.Map;\r\n\r\npublic class Admin {\r\n    //gonna fix the try/catch/finally later --------\r\n    //there's more work after the User class ------- maybe ?\r\n\r\n    private String username;\r\n    private int password;\r\n    //counters gonna be pairs ,key for the enum class value for repentance -- javafx???\r\n    public static int basicPlanCounter;\r\n    public static int standardPlanCounter;\r\n    public static int premiumPlanCounter;\r\n    private  static int MONTHSNUMBER = 12;\r\n    private static short PLANINDEX = 7;\r\n    private static final short USERNAMEINDEX = 1;\r\n    private static final short TYPEINDEX = 0;\r\n    private static short STARTDATEINDEX;\r\n    public static ArrayList<String> movies;\r\n    public static ArrayList<String> directors;\r\n    public static ArrayList<String> casts;\r\n    public static ArrayList<String> admins;\r\n    public static ArrayList<String> users;\r\n\r\n\r\n    //    public static ArrayList<String> readFile(File file) {\r\n//        ArrayList<String> arrayList = new ArrayList<String>();\r\n//        try {\r\n//            String line = \"\";\r\n//            BufferedReader b = new BufferedReader(new FileReader(file));\r\n//            while ((line = b.readLine()) != null) {\r\n//                arrayList.add(line);\r\n//            }\r\n//            b.close();\r\n//        } catch (IOException e) {\r\n//            throw new RuntimeException(e);\r\n//        }\r\n//        return arrayList;\r\n//    }\r\n    public static void readFile(File file) {\r\n        ArrayList<String> arrayList = new ArrayList<String>();\r\n        try {\r\n            String line = \"\";\r\n            BufferedReader b = new BufferedReader(new FileReader(file));\r\n            while ((line = b.readLine()) != null) {\r\n                String [] row = line.split(\",\");\r\n                if(row[TYPEINDEX].equals(\"user\"))\r\n                    users.add(line);\r\n                else if (row[TYPEINDEX].equals(\"cast\"))\r\n                    casts.add(line);\r\n                else if (row[TYPEINDEX].equals(\"movie\"))\r\n                    movies.add(line);\r\n                else if(row[TYPEINDEX].equals(\"director\"))\r\n                    directors.add(line);\r\n            }\r\n            b.close();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    public static void writeOnFile(File file){\r\n        try {\r\n            BufferedWriter b = new BufferedWriter(new FileWriter(file));\r\n            for(String index:users){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:movies){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:casts){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:directors){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:admins){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            b.close();\r\n        }\r\n        catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    //if the record exists in database >> gonna return the whole record[don't forget to split it]\r\n    //otherwise gonna return null [make sure to check before dealing with return val].\r\n\r\n    //returned string isn't splitted\r\n    public static String existsInFile(ArrayList<String> arrayList, String username){\r\n        boolean exist = false;\r\n        String[] eachLine;\r\n        for (String index: arrayList){\r\n            eachLine = index.split(\",\");\r\n            if(eachLine[USERNAMEINDEX].equals(username)){\r\n                return index;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //record to be deleted is not splitted\r\n    public static void deleteOneRecord(ArrayList<String> arrayList, String record){\r\n        arrayList.remove(record);\r\n    }\r\n    public static void changeCell(ArrayList<String> arrayList, String username, String oldCell, String newCell){\r\n        String recuiredLine = existsInFile(arrayList, username);\r\n        if(recuiredLine != null) {\r\n            String[] row = recuiredLine.split(\",\");\r\n            try {\r\n                for (int index = 0; index < row.length; index++) {\r\n                    if (row[index].equals(username))\r\n                        row[index] = newCell;\r\n                }\r\n            }catch (ArrayIndexOutOfBoundsException e){\r\n            }\r\n            arrayList.set(arrayList.indexOf(recuiredLine), String.join(\",\", row));\r\n        }\r\n    }\r\n    //enum ----------------\r\n    public static String getSpecificCellForUser(ArrayList<String> arrayList, String username, int index){\r\n        String wantedRecord = existsInFile(arrayList, username);\r\n        String []row = wantedRecord.split(\",\");\r\n        return row[index];\r\n    }\r\n    //working just fine ^^^\r\n    public static Subscription.Plans getMostSubscripedPlan(ArrayList<String> arrayList){\r\n        Subscription.Plans plan = null;\r\n        for (String index:arrayList){\r\n            String []line = index.split(\",\");\r\n            HashMap<Integer,Subscription.Plans> map = new HashMap<>();\r\n            if(line[PLANINDEX].equals(\"basic\"))\r\n                basicPlanCounter++;\r\n            else if (line[PLANINDEX].equals(\"standard\"))\r\n                standardPlanCounter++;\r\n            else\r\n                premiumPlanCounter++;\r\n            int max = Math.max(standardPlanCounter,Math.max(basicPlanCounter,premiumPlanCounter));\r\n\r\n            map.put(basicPlanCounter,Subscription.Plans.BASIC);\r\n            map.put(standardPlanCounter,Subscription.Plans.STANDARD);\r\n            map.put(premiumPlanCounter,Subscription.Plans.PREMIUM);\r\n\r\n            plan = map.get(max);\r\n        }\r\n        return plan;\r\n    }\r\n    //    public static Month getMonthWithMostRevenue(ArrayList<String> arrayList){\r\n//        Month month = null;\r\n//        int[] months = new int [12];\r\n//        for (String index: arrayList){\r\n//            String []line = index.split(\",\");\r\n//\r\n//            if(line[PLANINDEX].equals(\"basic\"))\r\n//        }\r\n//        return month;\r\n//    }\r\n    //all as strings\r\n\r\n    //assuming all dates are valid and users still subscribed.\r\n\r\n    public static int getMonth(Month month){\r\n        return switch (month) {\r\n            case JANUARY -> 1;\r\n            case FEBRUARY -> 2;\r\n            case MARCH -> 3;\r\n            case APRIL -> 4;\r\n            case MAY -> 5;\r\n            case JUNE -> 6;\r\n            case JULY -> 7;\r\n            case AUGUST -> 8;\r\n            case SEPTEMBER -> 9;\r\n            case OCTOBER -> 10;\r\n            case NOVEMBER -> 11;\r\n            case DECEMBER -> 12;\r\n        };\r\n    }\r\n    public static Month getMonth(int monthNumber){\r\n        return switch (monthNumber) {\r\n            case 1 -> Month.JANUARY;\r\n            case 2 -> Month.FEBRUARY;\r\n            case 3 -> Month.MARCH;\r\n            case 4 -> Month.APRIL;\r\n            case 5 -> Month.MAY;\r\n            case 6 -> Month.JUNE;\r\n            case 7 -> Month.JULY;\r\n            case 8 -> Month.AUGUST;\r\n            case 9 -> Month.SEPTEMBER;\r\n            case 10 -> Month.OCTOBER;\r\n            case 11 -> Month.NOVEMBER;\r\n            case 12 -> Month.DECEMBER;\r\n            default -> null;\r\n        };\r\n    }\r\n    static Month monthWithMostRevenue(){\r\n         Month month = null;\r\n         int [] monthsRevenue = new int[MONTHSNUMBER];\r\n         for(String user: users){\r\n             String[] data = user.split(\",\");\r\n             String plan = data[PLANINDEX];\r\n             LocalDate startDate = LocalDate.parse(data[STARTDATEINDEX]);\r\n             LocalDate todaysDate = LocalDate.now();\r\n             int startMonth = getMonth(startDate.getMonth());\r\n             int todaysmonth = getMonth(todaysDate.getMonth());\r\n             int differenceMonths = todaysmonth - startMonth;\r\n             if(startDate.getYear() != todaysDate.getYear())\r\n                 differenceMonths = (MONTHSNUMBER - startMonth) + todaysmonth;\r\n\r\n             while(differenceMonths >= 0){\r\n                 if(plan.equals(\"basic\")){\r\n                     monthsRevenue[(startMonth + differenceMonths)] += 10;\r\n                 }\r\n                 else if (plan.equals(\"standard\")) {\r\n                     monthsRevenue[(startMonth + differenceMonths)] += 20;\r\n                 }\r\n                 else{\r\n                     monthsRevenue[(startMonth + differenceMonths)] += 30;\r\n                 }\r\n                 differenceMonths--;\r\n             }\r\n         }\r\n         int []check = new int[MONTHSNUMBER];\r\n         System.arraycopy(monthsRevenue, 0, check, 0, MONTHSNUMBER);\r\n         Arrays.sort(check);\r\n         int recuiredMonth = 0;\r\n         for(int i=0; i<MONTHSNUMBER; i++){\r\n            if(monthsRevenue[i] == check[1])\r\n             {\r\n                 recuiredMonth = i + 1;\r\n                 break;\r\n             }\r\n         }\r\n         return getMonth(recuiredMonth);\r\n    }\r\n    static void getUserMovieLists(String user, ArrayList<String> watched_movies, ArrayList<String> toBeWatched_movies){\r\n        boolean toBeWatched = false;\r\n        boolean watched = false;\r\n        int watchedCounter = -1;\r\n        int toBeWatchedCounter = 0;\r\n        String[] eachLine = user.split(\",\");\r\n        for (String data:eachLine) {\r\n            if(data.equals(\"watched\"))\r\n                watched = true;\r\n            if(data.equals(\"to be watched\")) {\r\n                watched = false;\r\n                toBeWatched = true;\r\n            }\r\n            if(watched) {\r\n                watchedCounter++;\r\n                if(watchedCounter != 0 && watchedCounter%2!=0)\r\n                    watched_movies.add(data);\r\n            }\r\n            if(toBeWatched && toBeWatchedCounter == 1)\r\n                toBeWatched_movies.add(data);\r\n            if (toBeWatched && toBeWatchedCounter == 0)\r\n                toBeWatchedCounter = 1;\r\n        }\r\n    }\r\n    //as objects\r\n    static void getUserMovieLists(String userData,User user,ArrayList<UserWatchRecord> watched_movies, ArrayList<Movie> toBeWatched_movies){\r\n        if(userData != null)\r\n        {\r\n            boolean toBeWatched = false;\r\n            boolean watched = false;\r\n            int watchedCounter = -1;\r\n            int toBeWatchedCounter = 0;\r\n            Movie movie_to_watch = new Movie();\r\n            String[] eachLine = userData.split(\",\");\r\n            for (int i=0; i<eachLine.length; i++) {\r\n                if (eachLine[i].equals(\"watched\"))\r\n                    watched = true;\r\n                if (eachLine[i].equals(\"to be watched\")) {\r\n                    watched = false;\r\n                    toBeWatched = true;\r\n                }\r\n                if (watched){\r\n                    watchedCounter++;\r\n                    if(watchedCounter != 0 && watchedCounter % 2 != 0 )\r\n                    {\r\n                        for (String oneMovie : movies) {\r\n                            String[] arr = oneMovie.split(\",\");\r\n                            if (arr[1].equals(eachLine[i]))\r\n                                watched_movies.add(getWatchedMovie(arr[i], Integer.parseInt(arr[i+1])));\r\n                        }\r\n                    }\r\n                }\r\n                if (toBeWatched && toBeWatchedCounter == 1)\r\n                    toBeWatched_movies.add(getMovie(eachLine[i]));\r\n                if (toBeWatched && toBeWatchedCounter == 0)\r\n                    toBeWatchedCounter = 1;\r\n            }\r\n        }\r\n        user.Watched_Movies.addAll(watched_movies);\r\n        user.Movies_For_Later.addAll(toBeWatched_movies);\r\n    }\r\n    static UserWatchRecord getWatchedMovie(String title, int rate){\r\n        UserWatchRecord movie = new UserWatchRecord();\r\n        for (String oneMovie: movies){\r\n            String []arr = oneMovie.split(\",\");\r\n            if(arr[1].equals(title))\r\n            {\r\n                movie.movie.setTitle(arr[1]);\r\n                movie.movie.setId(Integer.parseInt(arr[2]));\r\n                movie.movie.setRelease_date(LocalDate.parse(arr[3]));\r\n                // movie.setDuration(Integer.parseInt(arr[4]));\r\n                //director,case lazm hykono strings msh obj ,wel class bta3hom hykon el movie string msh obj.\r\n                //movie.setDirector(arr[7]);\r\n                movie.movie.setBudget(Double.parseDouble(arr[11]));\r\n                movie.movie.setCountry(arr[10]);\r\n                movie.setRating(rate);\r\n                //movie.setDirector(getDirector());\r\n            }\r\n        }\r\n        return movie;\r\n    }\r\n    static Movie getMovie (String title){\r\n        Movie movie = new Movie();\r\n        for (String oneMovie: movies){\r\n            String []arr = oneMovie.split(\",\");\r\n            if(arr[1].equals(title))\r\n            {\r\n                movie.setTitle(arr[1]);\r\n                movie.setId(Integer.parseInt(arr[2]));\r\n                movie.setRelease_date(LocalDate.parse(arr[3]));\r\n                // movie.setDuration(Integer.parseInt(arr[4]));\r\n                //director,cast ykono strings msh obj ,wel class bta3hom hykon el movie string msh obj.\r\n                //movie.setDirector(arr[7]);\r\n                movie.setBudget(Double.parseDouble(arr[11]));\r\n                movie.setCountry(arr[10]);\r\n                movie.setLanguage(arr[8]);\r\n                movie.setImdb_score(Float.parseFloat(arr[9]));\r\n                movie.setRevenue(Double.parseDouble(arr[12]));\r\n                movie.setPoster_path(arr[13]);\r\n                //movie.setDirector(getDirector());\r\n            }\r\n        }\r\n        return movie;\r\n    }\r\n    static Director getDirector(String directorName){\r\n        Director director = new Director();\r\n        String[] name = directorName.split(\" \");\r\n        for (String oneDirector:directors){\r\n            String[] data = oneDirector.split(\",\");\r\n            if(data[1].equals(name[0]) && data[2].equals(name[1])){\r\n                director.setFirst_Name(data[1]);\r\n                director.setSecond_Name(data[2]);\r\n                director.setAge(Integer.parseInt(data[3]));\r\n                director.setGender(data[4]);\r\n                director.setNationality(data[5]);\r\n                //movies\r\n            }\r\n        }\r\n        return director;\r\n    }\r\n    static Cast getCast(String name){\r\n        //ArrayList<Cast> cast = new ArrayList<Cast>();\r\n        Cast eachCast = new Cast();\r\n        String[] castName = name.split(\" \");\r\n        for (String oneCast: casts){\r\n            String[] data = oneCast.split(\",\");\r\n            if(data[1].equals(castName[0]) && data[2].equals(castName[1])){\r\n                eachCast.setFirst_Name(data[1]);\r\n                eachCast.setSecond_Name(data[2]);\r\n                eachCast.setGender(data[4]);\r\n                eachCast.setAge(Integer.parseInt(data[3]));\r\n                eachCast.setNationality(data[5]);\r\n                //movies\r\n                //cast.add(eachCast);\r\n            }\r\n        }\r\n        return eachCast;\r\n    }\r\n    //name on getMovies is full name >> first and last combined.\r\n    static ArrayList<String> getMovies(String name, ArrayList<String> allMovies){\r\n        ArrayList<String> requiredMovies = new ArrayList<String>();\r\n        for (String data: allMovies){\r\n            String []arr = data.split(\",\");\r\n            for(String index: arr)\r\n                //if cast/director is on this specific movie, then i'm gonna add name of the movie to the list.\r\n                if(index.equals(name))\r\n                    requiredMovies.add(arr[1]);\r\n        }\r\n        return requiredMovies;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Admin.java b/src/main/java/com/example/watch_it/Admin.java
--- a/src/main/java/com/example/watch_it/Admin.java	(revision 65a0ef5fe6bce6215c76638a2263ce7e3b39cea3)
+++ b/src/main/java/com/example/watch_it/Admin.java	(date 1702142216461)
@@ -14,6 +14,23 @@
 
     private String username;
     private int password;
+
+    public String getUsername() {
+        return username;
+    }
+
+    public void setUsername(String username) {
+        this.username = username;
+    }
+
+    public int getPassword() {
+        return password;
+    }
+
+    public void setPassword(int password) {
+        this.password = password;
+    }
+
     //counters gonna be pairs ,key for the enum class value for repentance -- javafx???
     public static int basicPlanCounter;
     public static int standardPlanCounter;
@@ -22,13 +39,14 @@
     private static short PLANINDEX = 7;
     private static final short USERNAMEINDEX = 1;
     private static final short TYPEINDEX = 0;
+    private static final short PASSWORDINDEX = 3;
     private static short STARTDATEINDEX;
     public static ArrayList<String> movies;
     public static ArrayList<String> directors;
     public static ArrayList<String> casts;
     public static ArrayList<String> admins;
     public static ArrayList<String> users;
-
+    public static ArrayList<String> topRatedMovies;
 
     //    public static ArrayList<String> readFile(File file) {
 //        ArrayList<String> arrayList = new ArrayList<String>();
@@ -109,6 +127,16 @@
         }
         return null;
     }
+    public static boolean existsInFile(String username){;
+        String[] eachLine;
+        for (String index: users){
+            eachLine = index.split(",");
+            if(eachLine[USERNAMEINDEX].equals(username)){
+                return  true;
+            }
+        }
+        return false;
+    }
 
     //record to be deleted is not splitted
     public static void deleteOneRecord(ArrayList<String> arrayList, String record){
@@ -135,9 +163,23 @@
         return row[index];
     }
     //working just fine ^^^
-    public static Subscription.Plans getMostSubscripedPlan(ArrayList<String> arrayList){
+    static Subscription.Plans getMostSubscripedPlan(){
         Subscription.Plans plan = null;
-        for (String index:arrayList){
+        HashMap<Integer,Subscription.Plans> map = new HashMap<>();
+        getUsersInEachPlan();
+
+        map.put(basicPlanCounter,Subscription.Plans.BASIC);
+        map.put(standardPlanCounter,Subscription.Plans.STANDARD);
+        map.put(premiumPlanCounter,Subscription.Plans.PREMIUM);
+
+        int max = Math.max(standardPlanCounter,Math.max(basicPlanCounter,premiumPlanCounter));
+
+        plan = map.get(max);
+
+        return plan;
+    }
+    static void getUsersInEachPlan(){
+        for (String index: users){
             String []line = index.split(",");
             HashMap<Integer,Subscription.Plans> map = new HashMap<>();
             if(line[PLANINDEX].equals("basic"))
@@ -146,16 +188,9 @@
                 standardPlanCounter++;
             else
                 premiumPlanCounter++;
-            int max = Math.max(standardPlanCounter,Math.max(basicPlanCounter,premiumPlanCounter));
-
-            map.put(basicPlanCounter,Subscription.Plans.BASIC);
-            map.put(standardPlanCounter,Subscription.Plans.STANDARD);
-            map.put(premiumPlanCounter,Subscription.Plans.PREMIUM);
-
-            plan = map.get(max);
         }
-        return plan;
     }
+
     //    public static Month getMonthWithMostRevenue(ArrayList<String> arrayList){
 //        Month month = null;
 //        int[] months = new int [12];
@@ -296,7 +331,7 @@
                     }
                 }
                 if (toBeWatched && toBeWatchedCounter == 1)
-                    toBeWatched_movies.add(getMovie(eachLine[i]));
+                    toBeWatched_movies.add(getOneMovie(eachLine[i]));
                 if (toBeWatched && toBeWatchedCounter == 0)
                     toBeWatchedCounter = 1;
             }
@@ -324,12 +359,11 @@
         }
         return movie;
     }
-    static Movie getMovie (String title){
+    static Movie getOneMovie (String title){
         Movie movie = new Movie();
-        for (String oneMovie: movies){
-            String []arr = oneMovie.split(",");
-            if(arr[1].equals(title))
-            {
+        for (String oneMovie : movies) {
+            String[] arr = oneMovie.split(",");
+            if (arr[1].equals(title)) {
                 movie.setTitle(arr[1]);
                 movie.setId(Integer.parseInt(arr[2]));
                 movie.setRelease_date(LocalDate.parse(arr[3]));
@@ -345,6 +379,7 @@
                 //movie.setDirector(getDirector());
             }
         }
+
         return movie;
     }
     static Director getDirector(String directorName){
Index: src/main/java/Main.java
===================================================================
diff --git a/src/main/java/Main.java b/src/main/java/Main.java
deleted file mode 100644
--- a/src/main/java/Main.java	(revision 65a0ef5fe6bce6215c76638a2263ce7e3b39cea3)
+++ /dev/null	(revision 65a0ef5fe6bce6215c76638a2263ce7e3b39cea3)
@@ -1,14 +0,0 @@
-import com.example.watch_it.*;
-
-import java.io.File;
-
-
-/*public class Main {
-
-    public static void main(String[] args) {
- File file = new File("data.txt");
-        Admin.readFile(file);
-
-    }
-
-}*/
Index: src/main/java/com/example/watch_it/PlansController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/PlansController.java b/src/main/java/com/example/watch_it/PlansController.java
new file mode 100644
--- /dev/null	(date 1702136535560)
+++ b/src/main/java/com/example/watch_it/PlansController.java	(date 1702136535560)
@@ -0,0 +1,206 @@
+package com.example.watch_it;
+
+import javafx.fxml.FXML;
+import javafx.scene.control.Button;
+import javafx.scene.control.Label;
+import javafx.scene.control.ScrollPane;
+import javafx.scene.image.Image;
+import javafx.scene.image.ImageView;
+
+
+public class PlansController {
+    //----------------NOTE----------------------
+    //add the month with most revenue
+    //-----------------------------------
+    @FXML
+    private Label basicMovieNo;
+
+    @FXML
+    private Label basicPrice;
+
+    @FXML
+    private Label basicResolution;
+
+    @FXML
+    private Label basicRevenue;
+
+    @FXML
+    private Label basicTotalUser;
+    @FXML
+    private ImageView basicImage;
+
+    @FXML
+    private ScrollPane plansPane;
+
+    @FXML
+    private Label premiumMovieNo;
+
+    @FXML
+    private Label premiumPrice;
+
+    @FXML
+    private Label premiumResolution;
+
+    @FXML
+    private Label premiumRevenue;
+
+    @FXML
+    private Label premiumtotalUser;
+    @FXML
+    private ImageView premiumImage;
+
+    @FXML
+    private Label standardMovieNo;
+
+    @FXML
+    private Label standardPrice;
+
+    @FXML
+    private Label standardResolution;
+
+    @FXML
+    private Label standardRevenue;
+
+    @FXML
+    private Label standardTotalUser;
+    @FXML
+    private ImageView standardImage;
+
+    private final int PRICE = 0;
+    private final int USERNUMBER = 1;
+    private final int REVENUE = 2;
+    private final int MOVIENUMBER = 3;
+    private final int RESOLUTION = 4;
+    private final int STYLEDIMAGE = 5;
+    private final int NORMALIMAGE = 6;
+
+    private String[] basic = {"10 EGP","0", "0","5","720p","file:/C:/programming/java/Watch_It/src/main/resources/com/example/watch_it/assets/basicPressed.png","file:/C:/programming/java/Watch_It/src/main/resources/com/example/watch_it/assets/basicNormal.png"};
+    private String[] standard = {"20 EGP","0", "0","10","1080p","file:/C:/programming/java/Watch_It/src/main/resources/com/example/watch_it/assets/standardPressed.png","file:/C:/programming/java/Watch_It/src/main/resources/com/example/watch_it/assets/standardNormal.png"};
+    private String[] premium = {"30 EGP","0", "0","30","4K+HDR","file:/C:/programming/java/Watch_It/src/main/resources/com/example/watch_it/assets/premiumPressed.png","file:/C:/programming/java/Watch_It/src/main/resources/com/example/watch_it/assets/premiumNormal.png"};
+    @FXML
+    private void initialize(){
+        setNormalStyle(basicPrice,basicTotalUser,basicMovieNo,basicResolution,basicRevenue,basicImage,"basic");
+        setNormalStyle(standardPrice,standardTotalUser,standardMovieNo,standardResolution,standardRevenue,standardImage,"standard");
+        setNormalStyle(premiumPrice,premiumtotalUser,premiumMovieNo,premiumResolution,premiumRevenue,premiumImage,"premium");
+        basicImage.setFitWidth(270);
+        standardImage.setFitWidth(270);
+        premiumImage.setFitWidth(270);
+        basicImage.setFitHeight(170);
+        standardImage.setFitHeight(170);
+        premiumImage.setFitHeight(170);
+    }
+    @FXML
+    private void basicPlanActive(){
+        setStyle("basic");
+    }
+    @FXML
+    private void basicPlanInactive(){
+        setStyle("none");
+    }
+    @FXML
+    private void standardPlanActive(){
+        setStyle("standard");
+    }
+    @FXML
+    private void standardPlanInactive(){
+        setStyle("none");
+    }
+
+    @FXML
+    private void premiumPlanActive(){
+        setStyle("premium");
+    }
+    @FXML
+    private void premiumPlanInactive(){
+        setStyle("none");
+    }
+    private void setStyle(String plan){
+        if(plan.equals("basic")){
+            setStyle(basicPrice,basicTotalUser,basicMovieNo,basicResolution,basicRevenue,basicImage,"basic");
+            setNormalStyle(standardPrice,standardTotalUser,standardMovieNo,standardResolution,standardRevenue,standardImage,"standard");
+            setNormalStyle(premiumPrice,premiumtotalUser,premiumMovieNo,premiumResolution,premiumRevenue,premiumImage,"premium");
+        }
+        else if(plan.equals("standard")){
+            setStyle(standardPrice,standardTotalUser,standardMovieNo,standardResolution,standardRevenue,standardImage,"standard");
+            setNormalStyle(premiumPrice,premiumtotalUser,premiumMovieNo,premiumResolution,premiumRevenue,premiumImage,"premium");
+            setNormalStyle(basicPrice,basicTotalUser,basicMovieNo,basicResolution,basicRevenue,basicImage,"basic");
+        }
+        else if(plan.equals("premium")){
+            setStyle(premiumPrice,premiumtotalUser,premiumMovieNo,premiumResolution,premiumRevenue,premiumImage,"premium");
+            setNormalStyle(standardPrice,standardTotalUser,standardMovieNo,standardResolution,standardRevenue,standardImage,"standard");
+            setNormalStyle(basicPrice,basicTotalUser,basicMovieNo,basicResolution,basicRevenue,basicImage,"basic");
+
+        }
+        else{
+            setNormalStyle(basicPrice,basicTotalUser,basicMovieNo,basicResolution,basicRevenue,basicImage,"basic");
+            setNormalStyle(standardPrice,standardTotalUser,standardMovieNo,standardResolution,standardRevenue,standardImage,"standard");
+            setNormalStyle(premiumPrice,premiumtotalUser,premiumMovieNo,premiumResolution,premiumRevenue,premiumImage,"premium");
+        }
+    }
+    private void setNormalStyle(Label price, Label users, Label movie, Label resolution, Label revenue, ImageView image, String plan){
+        labelNormalStyle(price);
+        labelNormalStyle(users);
+        labelNormalStyle(movie);
+        labelNormalStyle(resolution);
+        labelNormalStyle(revenue);
+        if(plan.equals("basic"))
+        {
+            Image image1 = new Image(basic[NORMALIMAGE]);
+            image.setImage(image1);
+        } else if (plan.equals("standard")) {
+            Image image1 = new Image(standard[NORMALIMAGE]);
+            image.setImage(image1);
+        }else{
+            Image image1 = new Image(premium[NORMALIMAGE]);
+            image.setImage(image1);
+        }
+        setData();
+    }
+    private void setStyle(Label price, Label users, Label movie, Label resolution, Label revenue, ImageView image, String plan){
+        labelStyled(price);
+        labelStyled(users);
+        labelStyled(movie);
+        labelStyled(resolution);
+        labelStyled(revenue);
+        if(plan.equals("basic"))
+        {
+            Image image1 = new Image(basic[STYLEDIMAGE]);
+            image.setImage(image1);
+        } else if (plan.equals("standard")) {
+            Image image1 = new Image(standard[STYLEDIMAGE]);
+            image.setImage(image1);
+        }else{
+            Image image1 = new Image(premium[STYLEDIMAGE]);
+            image.setImage(image1);
+        }
+        setData();
+    }
+
+    private void labelNormalStyle(Label label){
+        label.setStyle("-fx-text-fill:WHITE; -fx-font-size: 30;");
+    }
+    private void labelStyled(Label label){
+        label.setStyle("-fx-text-fill:#FFC107; -fx-font-size: 30;");
+
+    }
+
+    private void setData() {
+        basicPrice.setText(basic[PRICE]);
+        basicMovieNo.setText(basic[MOVIENUMBER]);
+        basicResolution.setText(basic[RESOLUTION]);
+        basicRevenue.setText(basic[REVENUE]);
+        basicTotalUser.setText(basic[USERNUMBER]);
+
+        standardPrice.setText(standard[PRICE]);
+        standardMovieNo.setText(standard[MOVIENUMBER]);
+        standardResolution.setText(standard[RESOLUTION]);
+        standardRevenue.setText(standard[REVENUE]);
+        standardTotalUser.setText(standard[USERNUMBER]);
+
+        premiumPrice.setText(premium[PRICE]);
+        premiumMovieNo.setText(premium[MOVIENUMBER]);
+        premiumResolution.setText(premium[RESOLUTION]);
+        premiumRevenue.setText(premium[REVENUE]);
+        premiumtotalUser.setText(premium[USERNUMBER]);
+    }
+}
Index: src/main/java/com/example/watch_it/Artist.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic abstract class Artist {\r\n    private String First_Name;\r\n    private String Second_Name;\r\n    private String Gender;\r\n    private String Nationality;\r\n    private int Age;\r\n    ArrayList<Movie> Movies = new ArrayList<Movie>();\r\n\r\n    public String getFirst_Name() {\r\n        return First_Name;\r\n    }\r\n\r\n    public String getSecond_Name() {\r\n        return Second_Name;\r\n    }\r\n\r\n    public String getNationality() {\r\n        return Nationality;\r\n    }\r\n\r\n    public String getGender() {\r\n        return Gender;\r\n    }\r\n\r\n    public int getAge() {\r\n        return Age;\r\n    }\r\n\r\n    public ArrayList<Movie> getMovies() {\r\n        return Movies;\r\n    }\r\n\r\n\r\n    public void setFirst_Name(String first_Name) {\r\n        First_Name = first_Name;\r\n    }\r\n\r\n    public void setSecond_Name(String second_Name) {\r\n        Second_Name = second_Name;\r\n    }\r\n\r\n    public void setNationality(String nationality) {\r\n        Nationality = nationality;\r\n    }\r\n\r\n    public void setGender(String gender) {\r\n        Gender = gender;\r\n    }\r\n\r\n    public void setAge(int age) {\r\n        Age = age;\r\n    }\r\n\r\n    public void setMovies(ArrayList<Movie> movies) {\r\n        Movies = movies;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Artist.java b/src/main/java/com/example/watch_it/Artist.java
--- a/src/main/java/com/example/watch_it/Artist.java	(revision 65a0ef5fe6bce6215c76638a2263ce7e3b39cea3)
+++ b/src/main/java/com/example/watch_it/Artist.java	(date 1701913539765)
@@ -1,6 +1,7 @@
 package com.example.watch_it;
-
+import java.time.LocalDate;
 import java.util.ArrayList;
+import java.util.Scanner;
 
 public abstract class Artist {
     private String First_Name;
@@ -8,33 +9,12 @@
     private String Gender;
     private String Nationality;
     private int Age;
-    ArrayList<Movie> Movies = new ArrayList<Movie>();
+    ArrayList<String>Movies=new ArrayList<String>();
 
     public String getFirst_Name() {
         return First_Name;
     }
 
-    public String getSecond_Name() {
-        return Second_Name;
-    }
-
-    public String getNationality() {
-        return Nationality;
-    }
-
-    public String getGender() {
-        return Gender;
-    }
-
-    public int getAge() {
-        return Age;
-    }
-
-    public ArrayList<Movie> getMovies() {
-        return Movies;
-    }
-
-
     public void setFirst_Name(String first_Name) {
         First_Name = first_Name;
     }
@@ -43,19 +23,38 @@
         Second_Name = second_Name;
     }
 
+    public String getSecond_Name() {
+        return Second_Name;
+    }
+
+    public String getNationality() {
+        return Nationality;
+    }
+
     public void setNationality(String nationality) {
         Nationality = nationality;
     }
 
+    public String getGender() {
+        return Gender;
+    }
+
     public void setGender(String gender) {
         Gender = gender;
     }
 
+    public int getAge() {
+        return Age;
+    }
+
     public void setAge(int age) {
         Age = age;
     }
+    public ArrayList<String> getMovies() {
+        return Movies;
+    }
 
-    public void setMovies(ArrayList<Movie> movies) {
-        Movies = movies;
+    public void setMovies(String movies) {
+        Movies.add( movies);
     }
 }
\ No newline at end of file
Index: src/main/java/com/example/watch_it/Director.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.util.ArrayList;\r\n\r\npublic class Director extends Artist {\r\n\r\n    public void Add_Director( ArrayList<Director>directors,String first_name,String second_name,int age,String gender,String Nationality,int num,ArrayList<Movie>movies){\r\n        Director d=new Director();\r\n        d.setFirst_Name(first_name);\r\n        d.setSecond_Name(second_name);\r\n        d.setAge(age);\r\n        d.setGender(gender);\r\n        d.setNationality(Nationality);\r\n        d.setMovies(movies);\r\n        directors.add(d);\r\n    }\r\n    public void Update_Director(int index, ArrayList<Director>directors,int num,Movie movie){\r\n        for(int i=0;i<num;i++)\r\n        {\r\n            directors.get(index).Movies.add(movie);\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Director.java b/src/main/java/com/example/watch_it/Director.java
--- a/src/main/java/com/example/watch_it/Director.java	(revision 65a0ef5fe6bce6215c76638a2263ce7e3b39cea3)
+++ b/src/main/java/com/example/watch_it/Director.java	(date 1701913539774)
@@ -1,23 +1,89 @@
 package com.example.watch_it;
+import java.time.LocalDate;
 import java.util.ArrayList;
+import java.util.Scanner;
 
 public class Director extends Artist {
+    public void Read_File(ArrayList<String>s,ArrayList<Cast> cast){
+        for (String i:s) {
+            String[]row=i.split(",");
+            Cast c=new Cast();
+            c.setFirst_Name(row[0]);
+            c.setSecond_Name(row[1]);
+            c.setAge(Integer.parseInt(row[2]));
+            c.setGender(row[3]);
+            c.setNationality(row[4]);
+            for(int j=5;j<row.length;j++){
+                c.Movies.add(row[j]);
+            }
+            cast.add(c);
+        }
+    }
 
-    public void Add_Director( ArrayList<Director>directors,String first_name,String second_name,int age,String gender,String Nationality,int num,ArrayList<Movie>movies){
+    public void Add_Director( ArrayList<Director>directors,String first_name,String second_name,int age,String gender,String Nationality,int num,String movie){
         Director d=new Director();
         d.setFirst_Name(first_name);
         d.setSecond_Name(second_name);
         d.setAge(age);
         d.setGender(gender);
         d.setNationality(Nationality);
-        d.setMovies(movies);
+        d.setMovies(movie);
         directors.add(d);
     }
-    public void Update_Director(int index, ArrayList<Director>directors,int num,Movie movie){
-        for(int i=0;i<num;i++)
-        {
-            directors.get(index).Movies.add(movie);
-        }
-    }
+    public void Update_Director(int index, ArrayList<Director>directors,String movie){
+
+        directors.get(index).Movies.add(movie);
+    }
+    public Director  Search_director(String first_name,String second_name,ArrayList<Director> directors) {
+        for (Director m : directors) {
+
+            if (m.getFirst_Name().equals(first_name) && m.getSecond_Name().equals(second_name)) {
+
+                return m;
+            }
+
+        }
+        return null;
+    }
+    public boolean  Check(String first_name,String second_name,ArrayList<Director> directors) {
+        for (Director m : directors) {
+
+            if (m.getFirst_Name().equals(first_name) && m.getSecond_Name().equals(second_name)) {
+                return true;
+            }
+        }
+        return false;
+    }
+    public void Delete(ArrayList<Director> directors,String first_name,String second_name)
+    {
+        for (Director d:directors) {
+            if(d.getFirst_Name().equals(first_name)&&d.getSecond_Name().equals(second_name))
+                directors.remove(d);
+            break;
+        }
+    }
+    public void change_arraydirectr(ArrayList<Director>directors,ArrayList<String>movies,ArrayList<String>arrayList)
+    {
+        String line=null;
+        for(Director d:directors)
+        {
+            String []row=new String[5+movies.size()];
+            String s=String.valueOf(d.getAge());
+            int i=5;
+            row[0]=d.getFirst_Name();
+            row[1]=d.getSecond_Name();
+            row[2]=s;
+            row[3]=d.getGender();
+            row[4]=d.getNationality();
+            for(String m:movies)
+            {
+                row[i]=m;
+                i++;
+            }
+            line=String.join(",",row);
+            arrayList.add(line);
+            System.out.println(line);
+        }
 
+    }
 }
\ No newline at end of file
Index: data.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>user,ahmad,123,456789,ahmad,hossam,basic,ahmad@gmail.com,to be watched,titanic,watched,red 3,null, red 2,3.2\r\nmovie,titanic,description......,123,2004-12-05,2:30,romance,drama,hossam,english,4.3,america,2M,3M,titanic.png,ahmad salama,sara momen,hossam ismail\r\ndirector,hossam,ahmad,545,male,american,titanic,red 3,haha\r\ncast,ahmad,salama,45,male,american,titanic,haha 2
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data.txt b/data.txt
--- a/data.txt	(revision 65a0ef5fe6bce6215c76638a2263ce7e3b39cea3)
+++ b/data.txt	(date 1702142243652)
@@ -1,4 +1,3 @@
-user,ahmad,123,456789,ahmad,hossam,basic,ahmad@gmail.com,to be watched,titanic,watched,red 3,null, red 2,3.2
-movie,titanic,description......,123,2004-12-05,2:30,romance,drama,hossam,english,4.3,america,2M,3M,titanic.png,ahmad salama,sara momen,hossam ismail
+user,ahmad,456789,123,ahmad,hossam,basic,ahmad@gmail.com,to be watched,titanic,watched,red 3,null, red 2,3.2
 director,hossam,ahmad,545,male,american,titanic,red 3,haha
-cast,ahmad,salama,45,male,american,titanic,haha 2
\ No newline at end of file
+cast,ahmad,salama,45,male,american,titanic,haha 2
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_20\" default=\"true\" project-jdk-name=\"20\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 65a0ef5fe6bce6215c76638a2263ce7e3b39cea3)
+++ b/.idea/misc.xml	(date 1701913560626)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" default="true" project-jdk-name="20" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="20" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/com/example/watch_it/Cast.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.util.ArrayList;\r\n\r\npublic class Cast extends Artist{\r\n\r\n    public void Add_Cast( ArrayList<Cast>cast,String first_name,String second_name,int age,String gender,String Nationality,int num,ArrayList<Movie>movies){\r\n        Cast c=new Cast();\r\n        c.setFirst_Name(first_name);\r\n        c.setSecond_Name(second_name);\r\n        c.setAge(age);\r\n        c.setGender(gender);\r\n        c.setNationality(Nationality);\r\n        c.setMovies(movies);\r\n        cast.add(c);\r\n    }\r\n    public void Update_cast(int index, ArrayList<Cast>cast,int num,Movie movie){\r\n        for(int i=0;i<num;i++)\r\n        {\r\n            cast.get(index).Movies.add(movie);\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Cast.java b/src/main/java/com/example/watch_it/Cast.java
--- a/src/main/java/com/example/watch_it/Cast.java	(revision 65a0ef5fe6bce6215c76638a2263ce7e3b39cea3)
+++ b/src/main/java/com/example/watch_it/Cast.java	(date 1701914839000)
@@ -1,23 +1,89 @@
 package com.example.watch_it;
+import java.time.LocalDate;
+import java.util.Locale;
+import java.util.Scanner;
 import java.util.ArrayList;
-
 public class Cast extends Artist{
 
-    public void Add_Cast( ArrayList<Cast>cast,String first_name,String second_name,int age,String gender,String Nationality,int num,ArrayList<Movie>movies){
+    public void Add_Cast( ArrayList<Cast>cast,String first_name,String second_name,int age,String gender,String Nationality,String movie){
         Cast c=new Cast();
         c.setFirst_Name(first_name);
         c.setSecond_Name(second_name);
         c.setAge(age);
         c.setGender(gender);
         c.setNationality(Nationality);
-        c.setMovies(movies);
+        c.setMovies(movie);
         cast.add(c);
+    }
+    public static void Read_file(ArrayList<String> s,ArrayList<Cast> cast){
+        for (String i:s) {
+            String[]row=i.split(",");
+            Cast c=new Cast();
+            c.setFirst_Name(row[0]);
+            c.setSecond_Name(row[1]);
+            c.setAge(Integer.parseInt(row[2]));
+            c.setGender(row[3]);
+            c.setNationality(row[4]);
+            for(int j=5;j<row.length;j++){
+                c.Movies.add(row[j]);
+            }
+            cast.add(c);
+        }
+
     }
-    public void Update_cast(int index, ArrayList<Cast>cast,int num,Movie movie){
-        for(int i=0;i<num;i++)
-        {
-            cast.get(index).Movies.add(movie);
+    public void Update_cast(int index,int num,String movie,ArrayList<Cast> cast){
+
+        cast.get(index).Movies.add(movie);
+    }
+    public Cast  Search_Cast(String first_name,String second_name,ArrayList<Cast> cast) {
+        for (Cast m : cast) {
+
+            if (m.getFirst_Name().equals(first_name) && m.getSecond_Name().equals(second_name)) {
+                return m;
+            }
         }
+        return null;
     }
+    public boolean  Check(String first_name,String second_name,ArrayList<Cast> cast) {
+        for (Cast m : cast) {
 
+            if (m.getFirst_Name().equals(first_name) && m.getSecond_Name().equals(second_name)) {
+                return true;
+            }
+        }
+        return false;
+    }
+    public void Delete(ArrayList<Cast> cast,String first_name,String second_name)
+    {
+        for (Cast c:cast) {
+            if(c.getFirst_Name().equals(first_name)&&c.getSecond_Name().equals(second_name)) {
+                cast.remove(c);
+                break;
+            }
+        }
+    }
+    public void change_arraycast(ArrayList<Cast>cast,ArrayList<String>movies,ArrayList<String>arrayList)
+    {
+        String line=null;
+        for(Cast c:cast)
+        {
+            String []row=new String[5+movies.size()];
+            String s=String.valueOf(c.getAge());
+            int i=5;
+            row[0]=c.getFirst_Name();
+            row[1]=c.getSecond_Name();
+            row[2]=s;
+            row[3]=c.getGender();
+            row[4]=c.getNationality();
+            for(String m:movies)
+            {
+                row[i]=m;
+                i++;
+            }
+            line=String.join(",",row);
+            arrayList.add(line);
+           // System.out.println(line);
+        }
+
+    }
 }
\ No newline at end of file
Index: src/main/resources/com/example/watch_it/plans.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/com/example/watch_it/plans.fxml b/src/main/resources/com/example/watch_it/plans.fxml
new file mode 100644
--- /dev/null	(date 1702135901371)
+++ b/src/main/resources/com/example/watch_it/plans.fxml	(date 1702135901371)
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.Label?>
+<?import javafx.scene.control.ScrollPane?>
+<?import javafx.scene.image.ImageView?>
+<?import javafx.scene.layout.AnchorPane?>
+<?import javafx.scene.layout.Pane?>
+<?import javafx.scene.text.Font?>
+
+<ScrollPane fx:id="plansPane" hbarPolicy="NEVER" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="764.0" prefWidth="1318.0" styleClass="scrollPane" stylesheets="file:/C:/programming/java/test-7/src/style.css" fx:controller="com.example.watch_it.PlansController" vbarPolicy="NEVER" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1">
+    <content>
+        <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="761.0" prefWidth="1176.0">
+            <children>
+                <Pane layoutX="366.0" layoutY="217.0" prefHeight="200.0" prefWidth="200.0" styleClass="image" stylesheets="file:/C:/programming/java/test-7/src/style.css" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
+                    <children>
+                        <Label fx:id="basicPrice" layoutX="145.0" layoutY="226.0" textFill="#fffdfd">
+                            <font>
+                                <Font size="25.0" />
+                            </font>
+                        </Label>
+                        <Label fx:id="standardPrice" layoutX="540.0" layoutY="226.0" textFill="#fffdfd">
+                            <font>
+                                <Font size="25.0" />
+                            </font>
+                        </Label>
+                        <Label fx:id="premiumPrice" layoutX="940.0" layoutY="226.0" textFill="#fffdfd">
+                            <font>
+                                <Font size="25.0" />
+                            </font>
+                        </Label>
+                        <Label fx:id="basicTotalUser" layoutX="169.0" layoutY="335.0" />
+                        <Label fx:id="standardTotalUser" layoutX="575.0" layoutY="335.0" />
+                        <Label fx:id="premiumtotalUser" layoutX="991.0" layoutY="335.0" />
+                        <ImageView onMouseEntered="#standardPlanActive" onMouseExited="#standardPlanInactive" fx:id="standardImage"  layoutX="470.0" layoutY="5.0" pickOnBounds="true" preserveRatio="true" />
+                        <ImageView onMouseEntered="#premiumPlanActive" onMouseExited="#premiumPlanInactive"  fx:id="premiumImage" layoutX="881.0" layoutY="5.0" pickOnBounds="true" preserveRatio="true" />
+                        <ImageView onMouseEntered="#basicPlanActive" onMouseExited="#basicPlanInactive" fx:id="basicImage" layoutX="90.0" layoutY="5.0" pickOnBounds="true" preserveRatio="true" />
+                        <Label fx:id="basicRevenue" layoutX="169.0" layoutY="450.0" prefHeight="17.0" prefWidth="4.0" />
+                        <Label fx:id="standardRevenue" layoutX="575.0" layoutY="450.0" />
+                        <Label fx:id="premiumRevenue" layoutX="991.0" layoutY="450.0" />
+                        <Label fx:id="basicMovieNo" layoutX="169.0" layoutY="570.0" prefHeight="17.0" prefWidth="6.0" />
+                        <Label fx:id="standardMovieNo" layoutX="575.0" layoutY="570.0" />
+                        <Label fx:id="premiumMovieNo" layoutX="991.0" layoutY="570.0" />
+                        <Label fx:id="basicResolution" layoutX="150.0" layoutY="680.0"  />
+                        <Label fx:id="standardResolution" layoutX="545.0" layoutY="680.0" />
+                        <Label fx:id="premiumResolution" layoutX="940.0" layoutY="680.0" />
+                    </children></Pane>
+            </children></AnchorPane>
+    </content>
+</ScrollPane>
