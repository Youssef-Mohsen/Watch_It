Index: src/main/java/com/example/watch_it/MovieController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.Pane;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\n\r\npublic class MovieController {\r\n    private Stage stage;\r\n    @FXML\r\n    private Label titleMovie;\r\n    @FXML\r\n    public Pane pane;\r\n    @FXML\r\n    private HBox starsRow;\r\n    @FXML\r\n    private Label movieName;\r\n    @FXML\r\n    private Label Film;\r\n    @FXML\r\n    private Label Genre;\r\n    @FXML\r\n    private Label duration;\r\n    @FXML\r\n    private Label description;\r\n    @FXML\r\n    private Label Director;\r\n    @FXML\r\n    private Label Cast;\r\n    @FXML\r\n    private ImageView imagePreview;\r\n    @FXML\r\n    private Button Back;\r\n    @FXML\r\n    public Button Watch;\r\n    @FXML\r\n    public Button watchLater;\r\n    @FXML\r\n    private ImageView star1;\r\n\r\n    @FXML\r\n    private ImageView star2;\r\n\r\n    @FXML\r\n    private ImageView star3;\r\n\r\n    @FXML\r\n    private ImageView star4;\r\n\r\n    @FXML\r\n    private ImageView star5;\r\n\r\n    private ImageView[] stars;\r\n\r\n    private Movie movie;\r\n    private UserWatchRecord movie_watched;\r\n    public int page5=0;\r\n    private User user;\r\n    double Max_Rating;\r\n    private boolean isAdmin = false;\r\n    private Parent root;\r\n    private Scene scene;\r\n\r\n    Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\r\n    // Other fields and methods...\r\n\r\n    // Method to update the text of the first label\r\n\r\n    @FXML\r\n    private void initialize() {\r\n        stars = new ImageView[]{star1, star2, star3, star4, star5};\r\n        // Set empty star images\r\n        for (ImageView star : stars) {\r\n            star.setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/emptyStar.png\"))));\r\n        }\r\n\r\n        watchMovie(movie);\r\n        onMouseEntered();\r\n        onMouseExit();\r\n        alert.setTitle(\"\");\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(\"You Reached Your Limit\");\r\n    }\r\n    public void disableButtons(){\r\n        watchLater.setDisable(true);\r\n    }\r\n    @FXML\r\n    private boolean handleStarClick(MouseEvent event) {\r\n        ImageView clickedStar = (ImageView) event.getSource();\r\n        int rating = Integer.parseInt(clickedStar.getId().substring(4)); // Extract the rating from the star's ID\r\n        for (int i = 0; i < rating; i++) {\r\n            int finalI1 = i;\r\n            stars[i].setOnMouseClicked(event1 -> {\r\n                ImageView clickedStar2 = (ImageView) event1.getSource();\r\n                int rating2 = Integer.parseInt(clickedStar2.getId().substring(4)); // Extract the rating from the star's ID\r\n                stars[finalI1].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/fullStar.png\"))));\r\n                for (int j = 0; j < rating2 + (4 - rating2); j++) {\r\n                    int finalJ = j;\r\n                    stars[j].setOnMouseExited(event2 ->\r\n                            stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/fullStar.png\")))));\r\n                }\r\n                for (int h = rating2 + (4 - rating2); h > rating2; h--) {\r\n                    int finalJ = h;\r\n                    stars[h].setOnMouseExited(event2 ->\r\n                            stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/emptyStar.png\")))));\r\n                }\r\n                Max_Rating=rating2;\r\n                movie.userRate=rating2;\r\n\r\n                for (int p = movie.userRate+(4-movie.userRate); p >= movie.userRate; p--){\r\n                    int finalJ = p;\r\n                    stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/emptyStar.png\"))));\r\n                    stars[p].setOnMouseExited(event2 ->\r\n                            stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/emptyStar.png\")))));\r\n                }\r\n                for (int j = 0; j <  movie.userRate; j++) {\r\n                    int finalJ = j;\r\n                    stars[j].setOnMouseExited(event2 ->\r\n                            stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/fullStar.png\")))));\r\n                }\r\n            });\r\n\r\n        }\r\n        // You can perform additional actions here, such as saving the rating to a database.\r\n        return false;\r\n    }\r\n\r\n    @FXML\r\n    private void handleStarHover(MouseEvent event) {\r\n        ImageView hoveredStar = (ImageView) event.getSource();\r\n        int rating = Integer.parseInt(hoveredStar.getId().substring(4)); // Extract the rating from the star's ID\r\n        // Highlight stars\r\n\r\n        for (int i = 0; i < rating; i++) {\r\n            stars[i].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/fullStar.png\"))));\r\n        }\r\n\r\n    }\r\n\r\n    @FXML\r\n    private void resetStars() {\r\n        for (ImageView star : stars) {\r\n            star.setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/emptyStar.png\"))));\r\n        }\r\n\r\n    }\r\n    public void refreshScreen(String filmTitle, String newMovieName, String newFilm, ArrayList<String> filmGenre,\r\n                              String filmDescription, String filmDuration, Image image,String director,ArrayList<String> cast) {\r\n        String genres = \"\";\r\n        for(String genre: filmGenre){\r\n            genres = genres.concat(genre+ \" \");\r\n        }\r\n        String casts = \"\";\r\n        for (String cast1 : cast) {\r\n            casts = casts.concat(cast1 + \",\");\r\n        }\r\n        titleMovie.setText(filmTitle);\r\n        movieName.setText(newMovieName);\r\n        Film.setText(newFilm);\r\n        Genre.setText(genres);\r\n        description.setText(filmDescription);\r\n        duration.setText(filmDuration);\r\n        imagePreview.setImage(image);\r\n        Director.setText(director);\r\n        Cast.setText(casts);\r\n    }\r\n\r\n    public void disableWatch(){\r\n        Watch.setOnMouseClicked(event -> Watch.setDisable(true));\r\n    }\r\n    public void watchMovie(Movie movie){\r\n        if(SignIn.user5.Watched_Movies.contains(movie)){\r\n            watchLater.setDisable(true);\r\n        }\r\n        if(SignIn.user5.Movies_For_Later.contains(movie)){\r\n            watchLater.setDisable(true);\r\n        }\r\n        Watch.setOnMouseClicked(event -> {\r\n            watchLater.setDisable(true);\r\n            UserWatchRecord u = new UserWatchRecord(movie,0.0);\r\n            user.getSubscription().setMoviesWatched(user.getSubscription().getMoviesWatched()+1);\r\n            if (!WatchRecord.watchedMovies.contains(movie)) {\r\n                if(user.getPlan().equals(\"basic\") && SignIn.user5.Movies_For_Later.size()<5) {\r\n                    SignIn.user5.Watched_Movies.add(u);\r\n                    if (SignIn.user5.Movies_For_Later.contains(movie)) {\r\n                        SignIn.user5.Movies_For_Later.remove(movie);\r\n                    }\r\n                }\r\n                else if(user.getPlan().equals(\"standard\") && WatchRecord.watchedMovies.size()<10){\r\n\r\n                    SignIn.user5.Watched_Movies.add(u);\r\n                    if (SignIn.user5.toWatchMovies.contains(movie)) {\r\n                        SignIn.user5.toWatchMovies.remove(movie);\r\n                    }\r\n\r\n                }\r\n                else if(user.getPlan().equals(\"premium\") && WatchRecord.watchedMovies.size()<30){\r\n\r\n                    SignIn.user5.Watched_Movies.add(u);\r\n                    if ( SignIn.user5.toWatchMovies.contains(movie)) {\r\n                        SignIn.user5.toWatchMovies.remove(movie);\r\n                    }\r\n                }\r\n                else {\r\n                    alert.showAndWait();\r\n                }\r\n            }\r\n\r\n            Watch.setDisable(true);\r\n        });\r\n        watchLater.setOnMouseClicked(event -> {\r\n            MainPageController.movie5=movie;\r\n            if(!SignIn.user5.Movies_For_Later.contains(movie)) {\r\n                SignIn.user5.Movies_For_Later.add(movie);\r\n            }\r\n            watchLater.setDisable(true);\r\n        });\r\n\r\n    }\r\n    public void watchMovie(UserWatchRecord movie){\r\n        if(SignIn.user5.Watched_Movies.contains(movie)){\r\n            watchLater.setDisable(true);\r\n        }\r\n        if(SignIn.user5.Movies_For_Later.contains(movie.getMovie())){\r\n            watchLater.setDisable(true);\r\n        }\r\n        Watch.setOnMouseClicked(event -> {\r\n            watchLater.setDisable(true);\r\n            movie.setRating(Max_Rating);\r\n            SignIn.user5.getSubscription().setMoviesWatched(SignIn.user5.getSubscription().getMoviesWatched()+1);\r\n            if (!SignIn.user5.Watched_Movies.contains(movie)) {\r\n                if( SignIn.user5.getPlan().equals(\"basic\") && SignIn.user5.Watched_Movies.size()<5) {\r\n                    SignIn.user5.Watched_Movies.add(movie);\r\n                    if (SignIn.user5.Movies_For_Later.contains(movie.getMovie())) {\r\n                        SignIn.user5.Movies_For_Later.remove(movie.getMovie());\r\n                    }\r\n                }\r\n                else if( SignIn.user5.getPlan().equals(\"standard\") &&SignIn.user5.Watched_Movies.size()<10){\r\n                    SignIn.user5.Watched_Movies.add(movie);\r\n                    if ( SignIn.user5.Movies_For_Later.contains(movie.getMovie())) {\r\n                        SignIn.user5.Movies_For_Later.remove(movie.getMovie());\r\n                    }\r\n\r\n                }\r\n                else if( SignIn.user5.getPlan().equals(\"premium\") && SignIn.user5.Watched_Movies.size()<30){\r\n\r\n                    SignIn.user5.Watched_Movies.add(movie);\r\n                    if ( SignIn.user5.Movies_For_Later.contains(movie.getMovie())) {\r\n                        SignIn.user5.Movies_For_Later.remove(movie.getMovie());\r\n                    }\r\n                }\r\n                else {\r\n                    alert.showAndWait();\r\n                }\r\n            }\r\n            Watch.setDisable(true);\r\n        });\r\n        watchLater.setOnMouseClicked(event -> {\r\n            MainPageController.movie5_watched=movie;\r\n            if(!SignIn.user5.Movies_For_Later.contains(movie.getMovie()))\r\n                SignIn.user5.Movies_For_Later.add(movie.getMovie());\r\n            watchLater.setDisable(true);\r\n        });\r\n\r\n    }\r\n    public void Admin(Movie movie){\r\n        isAdmin = true;\r\n        watchLater.setVisible(false);\r\n        Watch.setVisible(false);\r\n        starsRow.setVisible(false);\r\n        Button edit = new Button(\"Edit\");\r\n        edit.setStyle(\"-fx-background-color: black;-fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\");\r\n        edit.setPrefWidth(73.0);\r\n        edit.setPrefHeight(30.0);\r\n        edit.setLayoutX(1443.0);\r\n        edit.setLayoutY(770.0);\r\n        edit.setTextFill(Color.WHITE);\r\n        pane.getChildren().add(edit);\r\n        edit.setOnMouseEntered(event -> edit.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        edit.setOnMouseExited(event -> edit.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        edit.setOnMouseClicked(event -> {\r\n            try {\r\n                ToEditMovie(event, movie);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n    }\r\n    private void ToEditMovie(MouseEvent event, Movie movie) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(getClass().getResource(\"movie-edit.fxml\"));\r\n        root = loader.load();\r\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n        MoveEdit controller=loader.getController();\r\n        controller.setStage(stage);\r\n        controller.setUpPromptText(movie);\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    public void backScenes(ActionEvent event) throws IOException {\r\n        Parent root = null;\r\n\r\n        if (isAdmin) {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"all-movies.fxml\"));\r\n            root = loader.load();\r\n            AllMoviesController controller = loader.getController();\r\n            controller.setStage(stage);\r\n        }\r\n        if(page5==0) {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"main-page.fxml\"));\r\n            root = loader.load();\r\n            MainPageController controller = loader.getController();\r\n            controller.setStage(stage);\r\n            controller.setUser(SignIn.user5);\r\n        }\r\n        else if(page5==1){\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"watch-record.fxml\"));\r\n            root = loader.load();\r\n            WatchRecord controller = loader.getController();\r\n            controller.setStage(stage);\r\n            controller.initializeItems();\r\n        }\r\n        else {\r\n            FXMLLoader loader=new FXMLLoader(getClass().getResource(\"profile-page.fxml\"));\r\n            root = loader.load();\r\n            stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n            profilePageController controller=loader.getController();\r\n            controller.setStage(stage);\r\n            controller.setdata();\r\n            controller.setUser(SignIn.user5);\r\n        }\r\n        stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(\"Movie\");\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    public void setStars(){\r\n\r\n        if(movie!=null || WatchRecord.watchedMovies.contains(movie)) {\r\n            for (int i = 0; i < movie.userRate; i++) {\r\n                stars[i].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/fullStar.png\"))));\r\n            }\r\n            for (int j = 0; j < movie.userRate; j++){\r\n                int finalJ = j;\r\n                stars[j].setOnMouseExited(event2 ->\r\n                        stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/fullStar.png\")))));\r\n            }\r\n            for (int h = movie.userRate; h > movie.userRate+(5-movie.userRate); h++){\r\n                int finalJ = h;\r\n                stars[h].setOnMouseExited(event2 ->\r\n                        stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/emptyStar.png\")))));\r\n            }\r\n\r\n        }\r\n    }\r\n    public void onMouseEntered() {\r\n        Back.setOnMouseEntered(event -> Back.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        Watch.setOnMouseEntered(event -> Watch.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        watchLater.setOnMouseEntered(event -> watchLater.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n\r\n    public void onMouseExit() {\r\n        Back.setOnMouseExited(event -> Back.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        Watch.setOnMouseExited(event -> Watch.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        watchLater.setOnMouseExited(event -> watchLater.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n    //////////////////////////\r\n\r\n    //////////////////////////\r\n    public void setStage(Stage stage) {\r\n        this.stage = stage;\r\n    }\r\n    public void setMovie(Movie movie){\r\n        this.movie=movie;\r\n    }\r\n    public void setMovie(UserWatchRecord movie){\r\n        this.movie_watched=movie;\r\n    }\r\n    public void setUser(User user){\r\n        this.user = user;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/MovieController.java b/src/main/java/com/example/watch_it/MovieController.java
--- a/src/main/java/com/example/watch_it/MovieController.java	(revision 3f9dbb5e25cd290b421dd3427c78139bd97bd6d8)
+++ b/src/main/java/com/example/watch_it/MovieController.java	(date 1703027295804)
@@ -123,7 +123,6 @@
                 }
                 Max_Rating=rating2;
                 movie.userRate=rating2;
-
                 for (int p = movie.userRate+(4-movie.userRate); p >= movie.userRate; p--){
                     int finalJ = p;
                     stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream("assets/emptyStar.png"))));
Index: src/main/java/com/example/watch_it/SignUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Objects;\r\n\r\npublic class SignUp {\r\n    private Stage stage;\r\n    private Scene scene;\r\n\r\n    private Parent root;\r\n    @FXML\r\n    private TextField CTextPassword;\r\n\r\n    @FXML\r\n    private CheckBox CheckBox;\r\n\r\n    @FXML\r\n    private PasswordField CreateConfirmPassword;\r\n\r\n    @FXML\r\n    private PasswordField CreatePassword;\r\n\r\n    @FXML\r\n    private TextField CreateUserName;\r\n\r\n    @FXML\r\n    private TextField Email;\r\n\r\n    @FXML\r\n    private TextField FisrtName;\r\n\r\n    @FXML\r\n    private TextField LastName;\r\n\r\n    @FXML\r\n    private TextField TextPassword;\r\n    @FXML\r\n    private Button Back;\r\n    @FXML\r\n    RadioButton button1;\r\n    @FXML\r\n    RadioButton button2;\r\n    @FXML\r\n    RadioButton button3;\r\n    @FXML\r\n    RadioButton button4;\r\n    @FXML\r\n    RadioButton button5;\r\n    @FXML\r\n    RadioButton button6;\r\n    private String profilepath;\r\n    ToggleGroup group = new ToggleGroup();\r\n    @FXML\r\n    private void initialize(){\r\n        button1.setToggleGroup(group);\r\n        button2.setToggleGroup(group);\r\n        button3.setToggleGroup(group);\r\n        button4.setToggleGroup(group);\r\n        button5.setToggleGroup(group);\r\n        button6.setToggleGroup(group);\r\n    }\r\n    @FXML\r\n    private void showAlert(String message) {\r\n        showAlert(message, Alert.AlertType.INFORMATION);\r\n    }\r\n\r\n    @FXML\r\n    private void showErrorAlert(String title, String message) {\r\n        showAlert(title, message, Alert.AlertType.ERROR);\r\n    }\r\n    @FXML\r\n    private void showAlert(String message, Alert.AlertType alertType) {\r\n        Alert alert = new Alert(alertType);\r\n        alert.setTitle(\"Login Result\");\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(message);\r\n        alert.showAndWait();\r\n    }\r\n    @FXML\r\n    private void showAlert(String title, String message, Alert.AlertType alertType) {\r\n        Alert alert = new Alert(alertType);\r\n        alert.setTitle(title);\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(message);\r\n        alert.showAndWait();\r\n    }\r\n\r\n    @FXML\r\n    public void GoToSignIn(ActionEvent event) throws IOException {\r\n        root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(\"sign-in.fxml\")));\r\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    public void GoToChoosePlan(ActionEvent event, User user) throws IOException {\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"choose-plan.fxml\"));\r\n        Parent root;\r\n        try {\r\n            root = loader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        ChoosePlanController controller = loader.getController();\r\n        controller.setUser(user);\r\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n        controller.setStage(stage);\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n\r\n    }\r\n    @FXML\r\n    public void SignUP(ActionEvent event) throws IOException {\r\n        String username = CreateUserName.getText();\r\n        String firstname = FisrtName.getText();\r\n        String lastname = LastName.getText();\r\n        String email = Email.getText();\r\n        String password = CreatePassword.getText();\r\n        String confirmpassword = CreateConfirmPassword.getText();\r\n        RadioButton selectedbutton = (RadioButton) group.getSelectedToggle();\r\n\r\n        if (selectedbutton.equals(button1))\r\n            profilepath = \"assets/batbot-01.png\";\r\n        else if (selectedbutton.equals(button2))\r\n            profilepath = \"assets/batbot-02.png\";\r\n        else if (selectedbutton.equals(button3))\r\n            profilepath = \"assets/batbot-03.png\";\r\n        else if (selectedbutton.equals(button4))\r\n            profilepath = \"assets/batbot-04.png\";\r\n        else if (selectedbutton.equals(button5))\r\n            profilepath = \"assets/batbot-05.png\";\r\n        else if (selectedbutton.equals(button6))\r\n            profilepath = \"assets/batbot-06.png\";\r\n\r\n        if (username.isEmpty() || firstname.isEmpty() || lastname.isEmpty() || password.isEmpty() || email.isEmpty() || confirmpassword.isEmpty() || selectedbutton == null){\r\n            showErrorAlert(\"Invalid\", \"Enter All Data\");\r\n        }\r\n        else if (!password.equals(confirmpassword))\r\n        {\r\n            showErrorAlert(\"Invalid\", \"Confirm Password Does not match, Try again!\");\r\n            CreateConfirmPassword.clear();\r\n        }\r\n        else if (User.Userexist(username))\r\n        {\r\n            showErrorAlert(\"Invalid\", \"UserName Is already exist , Try again!\");\r\n            CreateUserName.clear();\r\n        }\r\n        else {\r\n            User user = new User(username, lastname, firstname, email, password, profilepath, null);\r\n            GoToChoosePlan(event, user);\r\n        }\r\n    }\r\n    @FXML\r\n    public void The_Password_Visibility(ActionEvent act)\r\n    {\r\n        if(CheckBox.isSelected())\r\n        {\r\n            TextPassword.setText(CreatePassword.getText());\r\n            CTextPassword.setText(CreateConfirmPassword.getText());\r\n            TextPassword.setVisible(true);\r\n            CreatePassword.setVisible(false);\r\n            CTextPassword.setVisible(true);\r\n            CreateConfirmPassword.setVisible(false);\r\n        }\r\n        else\r\n        {\r\n            CreatePassword.setText(TextPassword.getText());\r\n            CreateConfirmPassword.setText(CTextPassword.getText());\r\n            TextPassword.setVisible(false);\r\n            CreatePassword.setVisible(true);\r\n            CTextPassword.setVisible(false);\r\n            CreateConfirmPassword.setVisible(true);\r\n        }\r\n    }\r\n    public void onMouseEntered() {\r\n        Back.setOnMouseEntered(event -> Back.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n\r\n    public void onMouseExit() {\r\n        Back.setOnMouseExited(event -> Back.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n\r\n    public void setStage(Stage stage) {\r\n        this.stage = stage;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/SignUp.java b/src/main/java/com/example/watch_it/SignUp.java
--- a/src/main/java/com/example/watch_it/SignUp.java	(revision 3f9dbb5e25cd290b421dd3427c78139bd97bd6d8)
+++ b/src/main/java/com/example/watch_it/SignUp.java	(date 1703043960890)
@@ -158,6 +158,7 @@
         }
         else {
             User user = new User(username, lastname, firstname, email, password, profilepath, null);
+            User.allusers.add(user);
             GoToChoosePlan(event, user);
         }
     }
Index: data.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>user,nada,123456,1,nadod,ayman,basic,nadaAyman@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Insidious: The Red Door,watched,Avengers: Endgame,5.0,Joker,1.0,done,\r\nuser,youssef,456789,1,youssef,mohsen,premium,youssefMohsen@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,-1.0,The Dark Knight,3.0,done,\r\nuser,Mai,123456,1,Mai,Ezz,basic,MaiEzz@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Oppenheimer,watched,Avengers: Endgame,-1.0,Joker,3.0,done,\r\nuser,Basmala,456789,1,Basmala,Tarek,premium,Basmala-Tarek@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,-1.0,The Dark Knight,3.0,done,\r\nuser,Tasneem,123456,1,Tasneem,Mohamed,basic,TasneemMohamed@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Oppenheimer,watched,Avengers: Endgame,-1.0,Joker,3.0,done,\r\nuser,toka,456789,1,toka,karam,premium,tokaKaram@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,-1.0,The Dark Knight,3.0,done,\r\nuser,youssef,456789,1,youssef,ahmad,premium,youssefAhmad@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,-1.0,The Dark Knight,3.0,done,\r\ncast,Patrick,Wilson,50,male,American,Insidious: The Red DoorS,Columbus\r\ncast,Rose,Byrne,44,female,Australian,Insidious: The Red Door\r\ncast,Joaquin,Phoenix,49,male,American,Joker\r\ncast,Robert,DeNiro,80,male,American,Joker\r\ncast,Joe,Pesci,80,male,American,Home Alone\r\ncast,Kate,Winslet,48,female,Titanic\r\ncast,Macaulay,Culkin,43,male,American,Home Alone\r\ncast,Daniel,Stern,66,male,American,Home Alone\r\ncast,Robert,DowneyJr,58,male,American,Oppenheimer,Sherlock Holmes,Avengers: Endgame\r\ncast,Benedict,Cumberbatch,40,male,English,Avengers: Endgame\r\ncast,Chris,Hemsworth,40,male,English,Avengers: Endgame\r\ncast,Mark,Strong,60,male,British,Sherlock Holmes\r\ncast,Jude,Law,50,male,English,Sherlock Holmes\r\ncast,Cillian,Murphy,50,male,Irish,The Dark Knight,Oppenheimer\r\ncast,Matt,Damon,53,male,American,The Dark Knight\r\ncast,Christian,Bale,49,male,American,The Dark Knight\r\ncast,Morgan,Freeman,86,male,American,The Dark Knight\r\ncast,Tom,Holland,27,male,England,Spider-Man: No Way Home\r\ncast,Zendaya,Coleman,27,female,America,Dune,Spider-Man: No Way Home\r\ncast,Jason,Momoa,44,male,America,Aquaman and the Lost Kingdom\r\ncast,Ben,Affleck,51,male,America,Aquaman and the Lost Kingdom\r\ncast,TimothÃe,Chalamet,28,male,America,Wonka\r\ncast,Paul,Raymond,34,male,England,Wonka\r\ncast,Murray,McArthur,57,male,England,Wonka\r\ncast,Leonardo,DiCaprio,49,male,Inception,Titanic\r\ndirector,Christopher,Nolan,53,male,british,Oppenheimer,The Dark Knight\r\ndirector,Guy,Ritchie,55,male,british,Sherlock Holmes\r\ndirector,Anthony,Russo,53,male,American,Avengers: Endgame\r\ndirector,Chris,Columbus,65,male,Italian,Home Alone\r\ndirector,Todd,Phillips,52,male,American,Joker\r\ndirector,Patrick,Wilson,50,male,American,Insidious: The Red Door\r\ndirector,James,Cameron,69,male,Canadian,Titanic\r\nadmin,nada,123456\r\nadmin,mai,123456\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data.txt b/data.txt
--- a/data.txt	(revision 3f9dbb5e25cd290b421dd3427c78139bd97bd6d8)
+++ b/data.txt	(date 1703043296406)
@@ -1,11 +1,11 @@
-user,nada,123456,1,nadod,ayman,basic,nadaAyman@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Insidious: The Red Door,watched,Avengers: Endgame,5.0,Joker,1.0,done,
+user,nada,123456,1,nadod,ayman,basic,nadaAyman@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Insidious: The Red Door,The Dark Knight,Sherlock Holmes,Avengers: Endgame,Inception,watched,Avengers: Endgame,5.0,Joker,1.0,done,
 user,youssef,456789,1,youssef,mohsen,premium,youssefMohsen@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,-1.0,The Dark Knight,3.0,done,
 user,Mai,123456,1,Mai,Ezz,basic,MaiEzz@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Oppenheimer,watched,Avengers: Endgame,-1.0,Joker,3.0,done,
 user,Basmala,456789,1,Basmala,Tarek,premium,Basmala-Tarek@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,-1.0,The Dark Knight,3.0,done,
 user,Tasneem,123456,1,Tasneem,Mohamed,basic,TasneemMohamed@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Oppenheimer,watched,Avengers: Endgame,-1.0,Joker,3.0,done,
 user,toka,456789,1,toka,karam,premium,tokaKaram@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,-1.0,The Dark Knight,3.0,done,
 user,youssef,456789,1,youssef,ahmad,premium,youssefAhmad@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,-1.0,The Dark Knight,3.0,done,
-cast,Patrick,Wilson,50,male,American,Insidious: The Red DoorS,Columbus
+cast,Patrick,Wilson,50,male,American,Columbus,Insidious: The Red DoorS
 cast,Rose,Byrne,44,female,Australian,Insidious: The Red Door
 cast,Joaquin,Phoenix,49,male,American,Joker
 cast,Robert,DeNiro,80,male,American,Joker
@@ -13,24 +13,24 @@
 cast,Kate,Winslet,48,female,Titanic
 cast,Macaulay,Culkin,43,male,American,Home Alone
 cast,Daniel,Stern,66,male,American,Home Alone
-cast,Robert,DowneyJr,58,male,American,Oppenheimer,Sherlock Holmes,Avengers: Endgame
+cast,Robert,DowneyJr,58,male,American,Avengers: Endgame,Sherlock Holmes,Oppenheimer
 cast,Benedict,Cumberbatch,40,male,English,Avengers: Endgame
 cast,Chris,Hemsworth,40,male,English,Avengers: Endgame
 cast,Mark,Strong,60,male,British,Sherlock Holmes
 cast,Jude,Law,50,male,English,Sherlock Holmes
-cast,Cillian,Murphy,50,male,Irish,The Dark Knight,Oppenheimer
+cast,Cillian,Murphy,50,male,Irish,Oppenheimer,The Dark Knight
 cast,Matt,Damon,53,male,American,The Dark Knight
 cast,Christian,Bale,49,male,American,The Dark Knight
 cast,Morgan,Freeman,86,male,American,The Dark Knight
 cast,Tom,Holland,27,male,England,Spider-Man: No Way Home
-cast,Zendaya,Coleman,27,female,America,Dune,Spider-Man: No Way Home
+cast,Zendaya,Coleman,27,female,America,Spider-Man: No Way Home,Dune
 cast,Jason,Momoa,44,male,America,Aquaman and the Lost Kingdom
 cast,Ben,Affleck,51,male,America,Aquaman and the Lost Kingdom
 cast,TimothÃe,Chalamet,28,male,America,Wonka
 cast,Paul,Raymond,34,male,England,Wonka
 cast,Murray,McArthur,57,male,England,Wonka
 cast,Leonardo,DiCaprio,49,male,Inception,Titanic
-director,Christopher,Nolan,53,male,british,Oppenheimer,The Dark Knight
+director,Christopher,Nolan,53,male,british,The Dark Knight,Oppenheimer
 director,Guy,Ritchie,55,male,british,Sherlock Holmes
 director,Anthony,Russo,53,male,American,Avengers: Endgame
 director,Chris,Columbus,65,male,Italian,Home Alone
Index: src/main/java/com/example/watch_it/Admin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.io.*;\r\nimport java.time.Month;\r\nimport java.time.Period;\r\nimport java.util.*;\r\nimport java.time.LocalDate;\r\n\r\npublic class Admin {\r\n    private String username;\r\n    private String password;\r\n    public static int basicPlanCounter;\r\n    public static int standardPlanCounter;\r\n    public static int premiumPlanCounter;\r\n    private  static final int MONTHSNUMBER = 12;\r\n    static final short PLANINDEX = 6;\r\n    static final short USERNAMEINDEX = 1;\r\n    static final short TYPEINDEX = 0;\r\n    static final short PASSWORDINDEX = 2;\r\n    static final short FIRSTNAMEINDEX = 4;\r\n    static final short LASTNAMEINDEX = 5;\r\n    static final short PROFILEPICINDEX = 9;\r\n    static final short EMAILINDEX = 7;\r\n    static final short IDINDEX = 3;\r\n    private static short STARTDATEINDEX = 8;\r\n    public static ArrayList<Admin> allAdmins = new ArrayList<Admin>();\r\n\r\n    public static ArrayList<String> movies = new ArrayList<String>();\r\n    public static ArrayList<String> directors = new ArrayList<String>();\r\n    public static ArrayList<String> casts = new ArrayList<String>();\r\n    public static ArrayList<String> admins = new ArrayList<String>();\r\n    public static ArrayList<String> users = new ArrayList<String>();\r\n    public Admin(String username, String password ){\r\n        this.password = password;\r\n        this.username = username;\r\n    }\r\n    public Admin(){\r\n        this.username = null;\r\n        this.password = null;\r\n    }\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n    public static void readFile(File file) {\r\n        ArrayList<String> arrayList = new ArrayList<String>();\r\n        try {\r\n            String line = \"\";\r\n            BufferedReader b = new BufferedReader(new FileReader(file));\r\n            while ((line = b.readLine()) != null) {\r\n                String [] row = line.split(\",\");\r\n                if(row[TYPEINDEX].equals(\"user\"))\r\n                    users.add(line);\r\n                else if (row[TYPEINDEX].equals(\"cast\"))\r\n                    casts.add(line);\r\n                else if(row[TYPEINDEX].equals(\"director\"))\r\n                    directors.add(line);\r\n                else\r\n                    admins.add(line);\r\n            }\r\n            b.close();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    public static void readMovies(File file) {\r\n        ArrayList<String> arrayList = new ArrayList<String>();\r\n        try {\r\n            String line = \"\";\r\n            BufferedReader b = new BufferedReader(new FileReader(file));\r\n            while ((line = b.readLine()) != null) {\r\n                movies.add(line);\r\n            }\r\n            b.close();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    public static void writeOnFile(File file){\r\n        try {\r\n            BufferedWriter b = new BufferedWriter(new FileWriter(file));\r\n            for (User user : User.allusers){\r\n                b.write(user.toString());\r\n                b.newLine();\r\n            }\r\n            for (Artist cast: Cast.allCast){\r\n                b.write(cast.toString());\r\n                b.newLine();\r\n            }\r\n            for (Director director: Director.allDirectors){\r\n                b.write(director.toString());\r\n                b.newLine();\r\n            }\r\n            for (Admin admin: allAdmins){\r\n                b.write(admin.toString());\r\n                b.newLine();\r\n            }\r\n            b.close();\r\n        }\r\n        catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    //returned string isn't splitted\r\n    public static String existsInFile(String username){\r\n        boolean exist = false;\r\n        String[] eachLine;\r\n        for (String index: users){\r\n            eachLine = index.split(\",\");\r\n            if(eachLine[USERNAMEINDEX].equals(username)){\r\n                return index;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    //record to be deleted is not splitted\r\n    //working just fine ^^^\r\n    static Subscription.Plans getMostSubscripedPlan(){\r\n        Subscription.Plans plan = null;\r\n        HashMap<Integer,Subscription.Plans> map = new HashMap<>();\r\n\r\n        map.put(basicPlanCounter,Subscription.Plans.BASIC);\r\n        map.put(standardPlanCounter,Subscription.Plans.STANDARD);\r\n        map.put(premiumPlanCounter,Subscription.Plans.PREMIUM);\r\n\r\n        int max = Math.max(standardPlanCounter,Math.max(basicPlanCounter,premiumPlanCounter));\r\n\r\n        plan = map.get(max);\r\n\r\n        return plan;\r\n    }\r\n    static void getUsersInEachPlan(){\r\n        basicPlanCounter = 0;\r\n        standardPlanCounter = 0;\r\n        premiumPlanCounter = 0;\r\n        for (String index: users){\r\n            String []line = index.split(\",\");\r\n            HashMap<Integer,Subscription.Plans> map = new HashMap<>();\r\n            if(line[PLANINDEX].equals(\"basic\"))\r\n                basicPlanCounter++;\r\n            else if (line[PLANINDEX].equals(\"standard\"))\r\n                standardPlanCounter++;\r\n            else\r\n                premiumPlanCounter++;\r\n        }\r\n    }\r\n    //assuming all dates are valid and users still subscribed.\r\n    public static int getMonth(Month month){\r\n        return switch (month) {\r\n            case JANUARY -> 1;\r\n            case FEBRUARY -> 2;\r\n            case MARCH -> 3;\r\n            case APRIL -> 4;\r\n            case MAY -> 5;\r\n            case JUNE -> 6;\r\n            case JULY -> 7;\r\n            case AUGUST -> 8;\r\n            case SEPTEMBER -> 9;\r\n            case OCTOBER -> 10;\r\n            case NOVEMBER -> 11;\r\n            case DECEMBER -> 12;\r\n        };\r\n    }\r\n    public static Month getMonth(int monthNumber){\r\n        return switch (monthNumber) {\r\n            case 1 -> Month.JANUARY;\r\n            case 2 -> Month.FEBRUARY;\r\n            case 3 -> Month.MARCH;\r\n            case 4 -> Month.APRIL;\r\n            case 5 -> Month.MAY;\r\n            case 6 -> Month.JUNE;\r\n            case 7 -> Month.JULY;\r\n            case 8 -> Month.AUGUST;\r\n            case 9 -> Month.SEPTEMBER;\r\n            case 10 -> Month.OCTOBER;\r\n            case 11 -> Month.NOVEMBER;\r\n            case 12 -> Month.DECEMBER;\r\n            default -> null;\r\n        };\r\n    }\r\n    static Month monthWithMostRevenue(){\r\n        Month month = null;\r\n        int [] monthsRevenue = new int[MONTHSNUMBER];\r\n        for(String user: users){\r\n            String[] data = user.split(\",\");\r\n            String plan = data[PLANINDEX];\r\n            LocalDate startDate = LocalDate.parse(data[STARTDATEINDEX]);\r\n            LocalDate todaysDate = LocalDate.now();\r\n            int startMonth = getMonth(startDate.getMonth());\r\n            int todaysmonth = getMonth(todaysDate.getMonth());\r\n            int differenceMonths = todaysmonth - startMonth;\r\n            if(startDate.getYear() != todaysDate.getYear())\r\n                differenceMonths = (MONTHSNUMBER - startMonth) + todaysmonth;\r\n\r\n            while(differenceMonths >= 0){\r\n                if(plan.equals(\"basic\")){\r\n                    monthsRevenue[(startMonth + differenceMonths)] += 10;\r\n                }\r\n                else if (plan.equals(\"standard\")) {\r\n                    monthsRevenue[(startMonth + differenceMonths)] += 20;\r\n                }\r\n                else{\r\n                    monthsRevenue[(startMonth + differenceMonths)] += 30;\r\n                }\r\n                differenceMonths--;\r\n            }\r\n        }\r\n        int []check = new int[MONTHSNUMBER];\r\n        System.arraycopy(monthsRevenue, 0, check, 0, MONTHSNUMBER);\r\n        Arrays.sort(check);\r\n        int recuiredMonth = 0;\r\n        for(int i=0; i<MONTHSNUMBER; i++){\r\n            if(monthsRevenue[i] == check[1])\r\n            {\r\n                recuiredMonth = i + 1;\r\n                break;\r\n            }\r\n        }\r\n        return getMonth(recuiredMonth);\r\n    }\r\n    //******************************************************************\r\n    static void getUserMovieLists(User user){\r\n\r\n        boolean toBeWatched = false;\r\n        boolean watched = false;\r\n        int watchedCounter = 0;\r\n        int toBeWatchedCounter = 0;\r\n        String allData = existsInFile(user.getUser_Name());\r\n        String[] eachLine = allData.split(\",\");\r\n        for (String data:eachLine) {\r\n            if(data.equals(\"done\"))\r\n                break;\r\n            if(data.equals(\"watched\")) {\r\n                watched = true;\r\n                toBeWatched = false;\r\n            }\r\n            if(data.equals(\"to be watched\")) {\r\n                toBeWatched = true;\r\n                watched = false;\r\n            }\r\n            if(watched) {\r\n                if(watchedCounter != 0) {\r\n                    user.watchedMovies.add(data);\r\n                }\r\n                watchedCounter++;\r\n            }\r\n            if(toBeWatched && toBeWatchedCounter == 1) {\r\n                user.toWatchMovies.add(data);\r\n            }\r\n            if (toBeWatched && toBeWatchedCounter == 0)\r\n                toBeWatchedCounter = 1;\r\n        }\r\n    }\r\n    //as objects-------------------\r\n    static void getUserMovieLists_obj(User user){\r\n        getUserMovieLists(user);\r\n        for(String movie: user.toWatchMovies){\r\n            user.Movies_For_Later.add(getUnkownMovie(movie));\r\n        }\r\n        for(int i=0; i<user.watchedMovies.size(); i++){\r\n            if(i%2 == 0){\r\n                Movie movie;\r\n                movie = getUnkownMovie(user.watchedMovies.get(i));\r\n                Double rate = Double.parseDouble(user.watchedMovies.get(i+1));\r\n                UserWatchRecord u = new UserWatchRecord(movie,rate);\r\n                user.Watched_Movies.add(u);\r\n            }\r\n        }\r\n    }\r\n    //returning every movie as obj in the DB.\r\n    static ArrayList<Movie> getMoviesObjs(){\r\n        ArrayList<Movie> arrayList = new ArrayList<Movie>();\r\n        for(String s: movies){\r\n            arrayList.add(getOneMovie(s));\r\n        }\r\n        return arrayList;\r\n    }\r\n    //returning one movie obj based on a string containing all data.\r\n    static Movie getOneMovie(String movieString){\r\n\r\n        Movie movie = new Movie();\r\n        String[] arr = movieString.split(\",\");\r\n        movie.setTitle(arr[1]);\r\n        movie.setId(Integer.parseInt(arr[0]));\r\n        movie.setRelease_date(LocalDate.parse(arr[3]));\r\n        movie.setDescription(arr[2]);\r\n        movie.setRunning_time(arr[4]);\r\n        movie.setBudget(arr[9]);\r\n        movie.setCountry(arr[8]);\r\n        movie.setLanguage(arr[6]);\r\n        movie.setImdb_score(Integer.parseInt(arr[7]));\r\n        movie.setRevenue(arr[10]);\r\n        movie.setPoster_path(arr[11]);\r\n        movie.setDirector(getDirector(arr[5]));\r\n        movie.setDirectorName(arr[5]);\r\n        movie.setAvarage_rating(Double.parseDouble(arr[12]));\r\n        movie.setViews(Integer.parseInt(arr[13]));\r\n        ArrayList<String> cast = new ArrayList<String>();\r\n        ArrayList<String> genres = new ArrayList<String>();\r\n        castAndGenres(movieString,cast,genres);\r\n        movie.setCastNames(cast);\r\n        movie.setGenre(genres);\r\n        ArrayList<Cast> movieCast = new ArrayList<Cast>();\r\n        for (String castString: cast){\r\n            movieCast.add(getCast(castString));\r\n        }\r\n        movie.setCast(movieCast);\r\n        return movie;\r\n    }\r\n    //returning one move obj based on its title.\r\n    static Movie getUnkownMovie(String title){\r\n        Movie movie = new Movie();\r\n        for (String oneMovie : movies) {\r\n            String[] arr = oneMovie.split(\",\");\r\n            if (arr[1].equals(title)) {\r\n                movie.setTitle(arr[1]);\r\n                movie.setId(Integer.parseInt(arr[0]));\r\n                movie.setRelease_date(LocalDate.parse(arr[3]));\r\n                movie.setDescription(arr[2]);\r\n                movie.setRunning_time(arr[4]);\r\n                movie.setBudget(arr[9]);\r\n                movie.setCountry(arr[8]);\r\n                movie.setLanguage(arr[6]);\r\n                movie.setImdb_score(Integer.parseInt(arr[7]));\r\n                movie.setRevenue(arr[10]);\r\n                movie.setPoster_path(arr[11]);\r\n                movie.setDirector(getDirector(arr[5]));\r\n                movie.setTotalRating(Double.parseDouble(arr[12]));\r\n                movie.setViews(Integer.parseInt(arr[13]));\r\n                ArrayList<String> cast = new ArrayList<String>();\r\n                ArrayList<String> genres = new ArrayList<String>();\r\n                movie.setGenre(genres);\r\n                castAndGenres(oneMovie,cast,genres);\r\n                movie.setCastNames(cast);\r\n                ArrayList<Cast> cast_obj = new ArrayList<Cast>();\r\n                for(String casts: cast){\r\n                    cast_obj.add(getCast(casts));\r\n                }\r\n                movie.setCast(cast_obj);\r\n            }\r\n        }\r\n        return movie;\r\n    }\r\n    //returning strings with the names of the cast and genres in the movie.\r\n    public static void castAndGenres(String Movie, ArrayList<String> cast_, ArrayList<String> genres){\r\n        //cast first then genres\r\n        boolean cast = false;\r\n        boolean genre = false;\r\n        int castCounter = -1;\r\n        int genreCounter = -1;\r\n        String[] eachLine = Movie.split(\",\");\r\n        for (String data:eachLine) {\r\n            if(data.equals(\"cast\"))\r\n                cast = true;\r\n            else if(data.equals(\"genres\")) {\r\n                cast = false;\r\n                genre = true;\r\n            }\r\n            if(cast) {\r\n                castCounter++;\r\n                if(castCounter != 0)\r\n                    cast_.add(data);\r\n            }\r\n            else if(genre) {\r\n                genreCounter ++;\r\n                if(genreCounter != 0)\r\n                    genres.add(data);\r\n            }\r\n        }\r\n    }\r\n    static ArrayList<Director> getAllDirectors(){\r\n        ArrayList<Director> arrayList = new ArrayList<Director>();\r\n        for(String oneDirector: directors){\r\n            String[] arr = oneDirector.split(\",\");\r\n            String name =\"\";\r\n            name = name.concat(arr[1]).concat(\" \").concat(arr[2]);\r\n            arrayList.add(getDirector(name));\r\n        }\r\n        return arrayList;\r\n    }\r\n    static Director getDirector(String directorName){\r\n        Director director = new Director();\r\n        String[] name = directorName.split(\" \");\r\n        for (String oneDirector:directors){\r\n            String[] data = oneDirector.split(\",\");\r\n            if(data[1].equals(name[0]) && data[2].equals(name[1])){\r\n                director.setFirst_Name(data[1]);\r\n                director.setSecond_Name(data[2]);\r\n                director.setAge(Integer.parseInt(data[3]));\r\n                director.setGender(data[4]);\r\n                director.setNationality(data[5]);\r\n                ArrayList<String> arrayList = new ArrayList<String>();\r\n                for(int i=data.length - 1; i>5; i--){\r\n                    arrayList.add(data[i]);\r\n                }\r\n                director.setMovies(arrayList);\r\n            }\r\n        }\r\n        return director;\r\n    }\r\n    static ArrayList<Cast> getAllCast(){\r\n        ArrayList<Cast> allcast = new ArrayList<Cast>();\r\n        for(String oneCast: casts){\r\n            String[] arr = oneCast.split(\",\");\r\n            String name =\"\";\r\n            name = name.concat(arr[1]).concat(\" \").concat(arr[2]);\r\n            allcast.add(getCast(name));\r\n        }\r\n        return allcast;\r\n    }\r\n    static Cast getCast(String name){\r\n        //ArrayList<Cast> cast = new ArrayList<Cast>();\r\n        Cast eachCast = new Cast();\r\n        String[] castName = name.split(\" \");\r\n        for (String oneCast: casts){\r\n            String[] data = oneCast.split(\",\");\r\n            if(data[1].equals(castName[0]) && data[2].equals(castName[1])){\r\n                eachCast.setFirst_Name(data[1]);\r\n                eachCast.setSecond_Name(data[2]);\r\n                eachCast.setGender(data[4]);\r\n                eachCast.setAge(Integer.parseInt(data[3]));\r\n                eachCast.setNationality(data[5]);\r\n                ArrayList<String> arrayList = new ArrayList<String>();\r\n                for(int i=data.length - 1; i>5; i--){\r\n                    arrayList.add(data[i]);\r\n                }\r\n                eachCast.setMovies(arrayList);\r\n            }\r\n        }\r\n        return eachCast;\r\n    }\r\n    //name on getMovies is full name >> first and last combined.\r\n    static ArrayList<User> getAllUsers(){\r\n        ArrayList<User> userArrayList = new ArrayList<User>();\r\n        for(int i=0; i<users.size(); i++){\r\n            String[] data =users.get(i).split(\",\");\r\n            Subscription.Plans plan = null;\r\n            double price = 0;\r\n            if(data[PLANINDEX].equals(\"basic\")) {\r\n                plan = Subscription.Plans.BASIC;\r\n                price = 100;\r\n            }\r\n            if(data[PLANINDEX].equals(\"standard\")) {\r\n                plan = Subscription.Plans.STANDARD;\r\n                price = 200;\r\n            }\r\n            if(data[PLANINDEX].equals(\"premium\")) {\r\n                plan = Subscription.Plans.PREMIUM;\r\n                price = 300;\r\n            }\r\n            Subscription subscription = new Subscription(User.allusers.size()+1,plan);\r\n            System.out.println();\r\n            User user = new User(User.allusers.size()+1,data[USERNAMEINDEX], data[LASTNAMEINDEX],data[FIRSTNAMEINDEX],data[EMAILINDEX],data[PASSWORDINDEX],data[PROFILEPICINDEX], subscription, data[STARTDATEINDEX]);\r\n            getUserMovieLists_obj(user);\r\n            user.getSubscription().setPlan(plan);\r\n            user.setPlan(data[PLANINDEX]);\r\n            user.getSubscription().setPrice(price);\r\n            user.getSubscription().setStartDate(LocalDate.parse(data[STARTDATEINDEX]));\r\n            int moviesCounter = 0;\r\n            for (UserWatchRecord movie: user.Watched_Movies){\r\n                moviesCounter++;\r\n            }\r\n            user.getSubscription().setMoviesWatched(moviesCounter);\r\n            userArrayList.add(user);\r\n        }\r\n        getUsersInEachPlan();\r\n        return userArrayList;\r\n    }\r\n    static ArrayList<Admin> getAllAdmins(){\r\n        ArrayList<Admin> adminArrayList = new ArrayList<Admin>();\r\n        for(String oneAdmin : admins){\r\n            String []data = oneAdmin.split(\",\");\r\n            Admin admin = new Admin(data[USERNAMEINDEX], data[PASSWORDINDEX]);\r\n            adminArrayList.add(admin);\r\n        }\r\n        return adminArrayList;\r\n    }\r\n    @Override\r\n    public String toString(){\r\n        String data =\"\";\r\n        data = data.concat(\"admin\").concat(\",\").concat(getUsername()).concat(\",\").concat(getPassword());\r\n        return data;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Admin.java b/src/main/java/com/example/watch_it/Admin.java
--- a/src/main/java/com/example/watch_it/Admin.java	(revision 3f9dbb5e25cd290b421dd3427c78139bd97bd6d8)
+++ b/src/main/java/com/example/watch_it/Admin.java	(date 1703035027239)
@@ -50,7 +50,6 @@
         this.password = password;
     }
     public static void readFile(File file) {
-        ArrayList<String> arrayList = new ArrayList<String>();
         try {
             String line = "";
             BufferedReader b = new BufferedReader(new FileReader(file));
@@ -284,7 +283,6 @@
     }
     //returning one movie obj based on a string containing all data.
     static Movie getOneMovie(String movieString){
-
         Movie movie = new Movie();
         String[] arr = movieString.split(",");
         movie.setTitle(arr[1]);
@@ -336,8 +334,8 @@
                 movie.setViews(Integer.parseInt(arr[13]));
                 ArrayList<String> cast = new ArrayList<String>();
                 ArrayList<String> genres = new ArrayList<String>();
+                castAndGenres(oneMovie,cast,genres);
                 movie.setGenre(genres);
-                castAndGenres(oneMovie,cast,genres);
                 movie.setCastNames(cast);
                 ArrayList<Cast> cast_obj = new ArrayList<Cast>();
                 for(String casts: cast){
Index: src/main/java/com/example/watch_it/profilePageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.*;\r\n\r\npublic class profilePageController implements Initializable {\r\n    private Stage stage;\r\n    private Scene scene;\r\n    private Parent root;\r\n    @FXML\r\n    private Label username;\r\n    @FXML\r\n    private Label email;\r\n    private String firstname;\r\n    private String lastname;\r\n    @FXML\r\n    private Label fullname;\r\n    @FXML\r\n    private Label plan;\r\n    @FXML\r\n    private Button Back;\r\n    @FXML\r\n    private ImageView profilePictue;\r\n    @FXML\r\n    private AnchorPane mainpane;\r\n    @FXML\r\n    private TextField newEmail;\r\n    @FXML\r\n    private TextField newFirstname;\r\n    @FXML\r\n    private TextField newLastname;\r\n    @FXML\r\n    private Button updateButton;\r\n    private boolean isAdmin;\r\n    private User user;\r\n    String UserName ;\r\n    public static boolean updatePlan = false;\r\n    @FXML\r\n    private HBox watchedHbox;\r\n    @FXML\r\n    private HBox toWatchHbox;\r\n    ButtonType buttonTypeYes = new ButtonType(\"Yes\");\r\n    ButtonType buttonTypeNo = new ButtonType(\"No\");\r\n    Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\r\n    @FXML\r\n    private ChoiceBox<String> Select_List;\r\n    @FXML\r\n    private BorderPane mainPane;\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle)\r\n    {\r\n        Select_List.getItems().addAll(\"Edit Profile\" , \"Log Out\" , \"Delete Account\", \"Delete Movies List\");\r\n\r\n        for (UserWatchRecord movie : SignIn.user5.Watched_Movies) {\r\n            addWatchedList(movie);\r\n        }\r\n        for (Movie movie : SignIn.user5.Movies_For_Later) {\r\n            addToWatchedList(movie);\r\n        }\r\n        onMouseExit();\r\n        onMouseEntered();\r\n        if (updatePlan) {\r\n            try {\r\n                toPlans();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n    }\r\n    @FXML\r\n    public void choose(MouseEvent event) throws IOException {\r\n\r\n        Select_List.setOnMouseClicked(mouseEvent -> {\r\n            try {\r\n                Select(event);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n    }\r\n    public void Select (MouseEvent event) throws IOException {\r\n        String choice = Select_List.getSelectionModel().getSelectedItem();\r\n        if(choice.equals(\"Log Out\"))\r\n        {\r\n            alert.getButtonTypes().setAll(buttonTypeYes, buttonTypeNo);\r\n            Optional<ButtonType> result = alert.showAndWait();\r\n            if (result.isPresent() && result.get() == buttonTypeYes)\r\n            {\r\n                FXMLLoader loader=new FXMLLoader(getClass().getResource(\"first-page.fxml\"));\r\n                root = loader.load();\r\n                stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n                First controller=loader.getController();\r\n                controller.setStage(stage);\r\n                Scene scene = new Scene(root);\r\n                stage.setResizable(false);\r\n                stage.setX(-7);\r\n                stage.setY(0);\r\n                stage.setScene(scene);\r\n                stage.show();\r\n\r\n            }\r\n        }\r\n        else if(choice.equals(\"Delete Account\"))\r\n        {\r\n            alert.getButtonTypes().setAll(buttonTypeYes, buttonTypeNo);\r\n            Optional<ButtonType> result = alert.showAndWait();\r\n            if ((result.isPresent() && result.get() == buttonTypeYes)) {\r\n                User.allusers.remove(SignIn.user5);\r\n                FXMLLoader loader=new FXMLLoader(getClass().getResource(\"first-page.fxml\"));\r\n                root = loader.load();\r\n                stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n                First controller=loader.getController();\r\n                controller.setStage(stage);\r\n                Scene scene = new Scene(root);\r\n                stage.setResizable(false);\r\n                stage.setX(-7);\r\n                stage.setY(0);\r\n                stage.setScene(scene);\r\n                stage.show();\r\n            }\r\n        }\r\n        else if(choice.equals(\"Edit Profile\"))\r\n        {\r\n            newEmail.setVisible(true);\r\n            newEmail.setPromptText(this.email.getText());\r\n            newFirstname.setVisible(true);\r\n            newFirstname.setPromptText(this.firstname);\r\n            newLastname.setVisible(true);\r\n            newLastname.setPromptText(this.lastname);\r\n            updateButton.setVisible(true);\r\n            String email = newEmail.getText();\r\n            String fname = newFirstname.getText();\r\n            String lname = newLastname.getText();\r\n            if (!email.isEmpty()) {\r\n                SignIn.user5.setEmail(email);\r\n                this.email.setText(email);\r\n            }\r\n            if (!(fname.isEmpty() || lname.isEmpty())) {\r\n                SignIn.user5.setFirst_Name(fname);\r\n                SignIn.user5.setLast_Name(lname);\r\n                fullname.setText(fname + \" \" + lname);\r\n            }\r\n            else {\r\n                if (fname.isEmpty() && !lname.isEmpty()) {\r\n                    SignIn.user5.setLast_Name(lname);\r\n                    fullname.setText(this.firstname + \" \" + lname);\r\n                }\r\n                else if (!fname.isEmpty() && lname.isEmpty()) {\r\n                    SignIn.user5.setFirst_Name(fname);\r\n                    fullname.setText(fname + \" \" + this.lastname);\r\n                }\r\n            }\r\n            updateButton.setOnAction(event1 -> {\r\n                Alert alert_ = new Alert(Alert.AlertType.CONFIRMATION);\r\n                alert_.setContentText(\"Profile Updated!\");\r\n                alert_.showAndWait();\r\n                try {\r\n                    Select( event);\r\n                    updateButton.setVisible(false);\r\n                    newLastname.setVisible(false);\r\n                    newFirstname.setVisible(false);\r\n                    newEmail.setVisible(false);\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            });\r\n        }\r\n        //Delete_Recorded_Movies\r\n        else\r\n        {\r\n            alert.getButtonTypes().setAll(buttonTypeYes, buttonTypeNo);\r\n            Optional<ButtonType> result = alert.showAndWait();\r\n            if (result.isPresent() && result.get() == buttonTypeYes)\r\n            {\r\n                SignIn.user5.Movies_For_Later.clear();\r\n                toWatchHbox.getChildren().clear();\r\n            }\r\n        }\r\n    }\r\n    @FXML\r\n    private void onMouseEntered(){\r\n        Back.setOnMouseEntered(event -> Back.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n    @FXML\r\n    private void onMouseExit(){\r\n        Back.setOnMouseExited(event -> Back.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n    @FXML\r\n    private void  backScenes(ActionEvent event) throws IOException {\r\n        if (isAdmin) {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"all-movies.fxml\"));\r\n            root = loader.load();\r\n            AllMoviesController controller = loader.getController();\r\n            controller.setStage(stage);\r\n            controller.toAllUsers(event);\r\n        }\r\n        else {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"main-page.fxml\"));\r\n            root = loader.load();\r\n            MainPageController controller = loader.getController();\r\n            controller.setStage(stage);\r\n            controller.setUser(SignIn.user5);\r\n        }\r\n        stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        Scene scene = new Scene(root);\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    private void addWatchedList(UserWatchRecord movie1){\r\n        VBox movieContainer = new VBox(10);\r\n        movieContainer.setPrefWidth(300);\r\n        movieContainer.setPrefHeight(200);\r\n        Image image = new Image(getClass().getResourceAsStream(movie1.getMovie().getPoster_path()));\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitHeight(237);\r\n        imageView.setFitWidth(220);\r\n        Label label = new Label(movie1.getMovie().getTitle());\r\n        label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        label.setOnMouseEntered(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: #FFC107;\"));\r\n        label.setOnMouseExited(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\"));\r\n        movieContainer.setAlignment(Pos.CENTER);\r\n        movieContainer.getChildren().addAll(imageView, label);\r\n        movieContainer.setOnMouseClicked(event -> {\r\n            try {\r\n                onMouseClickedVBox(event,movie1.getMovie());\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        watchedHbox.getChildren().addAll(movieContainer);\r\n    }\r\n    private void addToWatchedList(Movie movie1){\r\n        VBox movieContainer = new VBox(10);\r\n        movieContainer.setPrefWidth(300);\r\n        movieContainer.setPrefHeight(200);\r\n        Image image = new Image(getClass().getResourceAsStream(movie1.getPoster_path()));\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitHeight(237);\r\n        imageView.setFitWidth(220);\r\n        Label label = new Label(movie1.getTitle());\r\n        label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        label.setOnMouseEntered(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: #FFC107;\"));\r\n        label.setOnMouseExited(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\"));\r\n        Label label1 =new Label(\"Rate: \"+movie1.userRate);\r\n        label1.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        label1.setOnMouseEntered(event -> label1.setStyle(\"-fx-text-size: 20; -fx-text-fill: #FFC107;\"));\r\n        label1.setOnMouseExited(event -> label1.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\"));\r\n        Image image1 = new Image(getClass().getResourceAsStream(\"assets/fullStar.png\"));\r\n        ImageView imageView1 = new ImageView(image1);\r\n        imageView1.setFitHeight(18);\r\n        imageView1.setFitWidth(20);\r\n        HBox box =new HBox(label1,imageView1,label);\r\n        box.setAlignment(Pos.CENTER);\r\n        box.setSpacing(6);\r\n        movieContainer.setAlignment(Pos.CENTER);\r\n        movieContainer.getChildren().addAll(imageView,box);\r\n        movieContainer.setOnMouseClicked(event -> {\r\n            try {\r\n                onMouseClickedVBox(event,movie1);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        toWatchHbox.getChildren().addAll(movieContainer);\r\n    }\r\n    public void onMouseClickedVBox(MouseEvent act, Movie movie1) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(getClass().getResource(\"movie-view.fxml\"));\r\n        Parent root = loader.load();\r\n        stage = (Stage)((Node)act.getSource()).getScene().getWindow();\r\n        MovieController controller=loader.getController();\r\n        controller.setStage(stage);\r\n        controller.watchMovie(movie1);\r\n        controller.page5=-1;\r\n        controller.disableButtons();\r\n        Scene scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n\r\n        Image image = new Image(getClass().getResourceAsStream(movie1.getPoster_path()));\r\n        controller.refreshScreen(\"Watch Movie \"+ movie1.getTitle() + \"(\"+movie1.getRelease_date().getYear()+\")\", movie1.getTitle(),\r\n                movie1.getTitle()+\" Translated\",movie1.getGenres(), movie1.getDescription(),\r\n                movie1.getRunning_time(), image,movie1.getDirectorName(),movie1.getCastNames());\r\n        stage.setScene(scene);\r\n        stage.show();\r\n\r\n    }\r\n    public void setStage(Stage stage){\r\n        this.stage = stage;\r\n    }\r\n\r\n    public void setdata(){\r\n        isAdmin = false;\r\n        Image image = new Image(getClass().getResourceAsStream(SignIn.user5.getProfilePath()));\r\n        profilePictue.setImage(image);\r\n        profilePictue.setFitHeight(100);\r\n        profilePictue.setFitWidth(100);\r\n        username.setText(SignIn.user5.getUser_Name());\r\n        email.setText(SignIn.user5.getEmail());\r\n        plan.setText(\"Current Plan :\" + \" \" +  SignIn.user5.getPlan().toUpperCase());\r\n        fullname.setText(SignIn.user5.getFirst_Name() + \" \" + SignIn.user5.getLast_Name());\r\n        firstname = SignIn.user5.getFirst_Name();\r\n        lastname = SignIn.user5.getLast_Name();\r\n    }\r\n    public void setdatatoAdmin(User user){\r\n        isAdmin = true;\r\n        Image image = new Image(getClass().getResourceAsStream(user.getProfilePath()));\r\n        profilePictue.setImage(image);\r\n        profilePictue.setFitHeight(100);\r\n        profilePictue.setFitWidth(100);\r\n        username.setText(user.getUser_Name());\r\n        email.setText(user.getEmail());\r\n        plan.setText(user.getPlan());\r\n        fullname.setText(user.getFirst_Name() + \" \" + user.getLast_Name());\r\n        firstname = user.getFirst_Name();\r\n        lastname = user.getLast_Name();\r\n        setUser(SignIn.user5);\r\n    }\r\n    public void setUser(User user){\r\n        this.user = user;\r\n\r\n    }\r\n    @FXML\r\n    void toMoviesrecord(){\r\n        switchPane(mainpane);\r\n    }\r\n    private void switchPane(AnchorPane anchorPane){\r\n        mainPane.setCenter(anchorPane);\r\n    }\r\n    @FXML\r\n    void toPlans()throws IOException{\r\n        FXMLLoader loader=new FXMLLoader(getClass().getResource(\"recorded-movies.fxml\"));\r\n        Parent root = loader.load();\r\n        switchPane((AnchorPane) root);\r\n        ChoosePlanController controller = loader.getController();\r\n        controller.setUser(SignIn.user5);\r\n    }\r\n    @FXML\r\n    void toMovies()throws IOException{\r\n        switchPane(mainpane);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/profilePageController.java b/src/main/java/com/example/watch_it/profilePageController.java
--- a/src/main/java/com/example/watch_it/profilePageController.java	(revision 3f9dbb5e25cd290b421dd3427c78139bd97bd6d8)
+++ b/src/main/java/com/example/watch_it/profilePageController.java	(date 1703043258284)
@@ -240,9 +240,11 @@
         label.setOnMouseEntered(event -> label.setStyle("-fx-text-size: 20; -fx-text-fill: #FFC107;"));
         label.setOnMouseExited(event -> label.setStyle("-fx-text-size: 20; -fx-text-fill: white;"));
         movieContainer.setAlignment(Pos.CENTER);
+
         movieContainer.getChildren().addAll(imageView, label);
         movieContainer.setOnMouseClicked(event -> {
             try {
+                System.out.println("in userwatch record");
                 onMouseClickedVBox(event,movie1.getMovie());
             } catch (IOException e) {
                 throw new RuntimeException(e);
@@ -277,6 +279,8 @@
         movieContainer.getChildren().addAll(imageView,box);
         movieContainer.setOnMouseClicked(event -> {
             try {
+                System.out.println(movie1.getTitle());
+                System.out.println("in movie record");
                 onMouseClickedVBox(event,movie1);
             } catch (IOException e) {
                 throw new RuntimeException(e);
@@ -284,23 +288,25 @@
         });
         toWatchHbox.getChildren().addAll(movieContainer);
     }
-    public void onMouseClickedVBox(MouseEvent act, Movie movie1) throws IOException {
+    public void onMouseClickedVBox(MouseEvent act, Movie movie) throws IOException {
         FXMLLoader loader=new FXMLLoader(getClass().getResource("movie-view.fxml"));
         Parent root = loader.load();
         stage = (Stage)((Node)act.getSource()).getScene().getWindow();
         MovieController controller=loader.getController();
         controller.setStage(stage);
-        controller.watchMovie(movie1);
-        controller.page5=-1;
         controller.disableButtons();
+        controller.disableWatch();
+        controller.setMovie(movie);
+        controller.watchMovie(movie);
+        controller.page5=-1;
+        controller.setStars();
         Scene scene = new Scene(root);
         stage.setScene(scene);
         stage.show();
-
-        Image image = new Image(getClass().getResourceAsStream(movie1.getPoster_path()));
-        controller.refreshScreen("Watch Movie "+ movie1.getTitle() + "("+movie1.getRelease_date().getYear()+")", movie1.getTitle(),
-                movie1.getTitle()+" Translated",movie1.getGenres(), movie1.getDescription(),
-                movie1.getRunning_time(), image,movie1.getDirectorName(),movie1.getCastNames());
+        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));
+        controller.refreshScreen("Watch Movie "+ movie.getTitle() + "("+movie.getRelease_date().getYear()+")", movie.getTitle(),
+                movie.getTitle()+" Translated",movie.getGenres(), movie.getDescription(),
+                movie.getRunning_time(), image,movie.getDirector().getFirst_Name()+" "+movie.getDirector().getSecond_Name(),movie.getCastNames());
         stage.setScene(scene);
         stage.show();
 
Index: src/main/java/com/example/watch_it/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\npublic class HelloApplication extends Application {\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n        File file = new File(\"data.txt\");\r\n        File movieFile = new File(\"movies-data.txt\");\r\n        Admin.readFile(file);;\r\n        Admin.readMovies(movieFile);\r\n        User.allusers.addAll(Admin.getAllUsers());\r\n        Director.allDirectors.addAll(Admin.getAllDirectors());\r\n        Cast.allCast.addAll(Admin.getAllCast());\r\n        Admin.allAdmins.addAll(Admin.getAllAdmins());\r\n        Movie.allmovies.addAll(Admin.getMoviesObjs());\r\n        Movie.getDiffGenres();\r\n\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"first-page.fxml\"));\r\n        Parent root;\r\n        try {\r\n            root = loader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        First controller = loader.getController();\r\n        controller.setStage(stage);\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(\"Movie\");\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        stage.setScene(scene);\r\n        stage.setOnCloseRequest(windowEvent -> {\r\n            Admin.writeOnFile(file);\r\n        });\r\n        stage.show();\r\n\r\n    }\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/HelloApplication.java b/src/main/java/com/example/watch_it/HelloApplication.java
--- a/src/main/java/com/example/watch_it/HelloApplication.java	(revision 3f9dbb5e25cd290b421dd3427c78139bd97bd6d8)
+++ b/src/main/java/com/example/watch_it/HelloApplication.java	(date 1703042778744)
@@ -38,6 +38,9 @@
         stage.setResizable(false);
         stage.setX(-7);
         stage.setY(0);
+        for(Movie movie: Movie.allmovies){
+            System.out.println(movie.getDirector().getFirst_Name()+" "+movie.getDirectorName());
+        }
         stage.setScene(scene);
         stage.setOnCloseRequest(windowEvent -> {
             Admin.writeOnFile(file);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"236de910-bb88-43c2-a220-e8030a7a2c95\" name=\"Changes\" comment=\"editing user and saving their data\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_11_2023_11_04_PM_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_11_2023_11_04_PM__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_11_2023_5_38_PM_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_11_2023_5_38_PM__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_12_2023_12_40_AM_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_12_2023_12_40_AM__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_12_2023_4_29_AM_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_12_2023_4_29_AM__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/movies-data.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/movies-data.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Artist.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Artist.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Cast.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Cast.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Director.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Director.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Movie.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Movie.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MovieController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MovieController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/User.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/User.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/profilePageController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/profilePageController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/searchViewController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/searchViewController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/admin-page.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/admin-page.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"FxmlFile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Nada-Hany&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"cc5d3d54-1728-462d-8317-3b96966b79fa\" />\r\n        <option name=\"url\" value=\"https://github.com/Youssef-Mohsen/Watch_It.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/com/example/watch_it/WatchRecord.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2YeFVvR1cMbdmzoU0JjHSXbxBBy\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/programming/java/Watch_It/src/main/java/com/example/watch_it&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\\java\\com\\example\\watch_it\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Youssef Mohsen\\IdeaProjects\\Watch_It\\src\\main\\resources\\com\\example\\watch_it\\assets\" />\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\\resources\\com\\example\\watch_it\" />\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\\java\\com\\example\\watch_it\" />\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.watch_it.HelloApplication\" />\r\n      <module name=\"Watch_IT\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.watch_it.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Watch_It\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Watch_It\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.HelloApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"236de910-bb88-43c2-a220-e8030a7a2c95\" name=\"Changes\" comment=\"\" />\r\n      <created>1700878165910</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1700878165910</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"add admin class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700881919077</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700881919077</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"add cast, director and artist classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701195323300</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701195323300</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"integration\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701195620613</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701195620613</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"handling everything in one file\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701306289338</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701306289338</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"getting the month with most revenue\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701479503607</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701479503607</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"main class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701480011804</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701480011804</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"add first page gui\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702240257713</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702240257714</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"reading movies\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702329606254</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702329606254</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Update project finally.....\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702482909178</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702482909178</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Update project finally.....\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702483119306</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702483119306</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Update icons\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702485535182</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702485535182</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"view user\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702601842653</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702601842654</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"add admin class\" />\r\n    <MESSAGE value=\"add cast, director and artist classes\" />\r\n    <MESSAGE value=\"integration\" />\r\n    <MESSAGE value=\"handling everything in one file\" />\r\n    <MESSAGE value=\"getting the month with most revenue\" />\r\n    <MESSAGE value=\"main class\" />\r\n    <MESSAGE value=\"add first page gui\" />\r\n    <MESSAGE value=\"reading movies\" />\r\n    <MESSAGE value=\"Update project finally.....\" />\r\n    <MESSAGE value=\"Update icons\" />\r\n    <MESSAGE value=\"view user\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"view user\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3f9dbb5e25cd290b421dd3427c78139bd97bd6d8)
+++ b/.idea/workspace.xml	(date 1703043960921)
@@ -4,31 +4,14 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="236de910-bb88-43c2-a220-e8030a7a2c95" name="Changes" comment="editing user and saving their data">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_11_2023_11_04_PM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_11_2023_11_04_PM__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_11_2023_5_38_PM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_11_2023_5_38_PM__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_12_2023_12_40_AM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_12_2023_12_40_AM__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_12_2023_4_29_AM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_12_2023_4_29_AM__Changes_.xml" beforeDir="false" />
+    <list default="true" id="236de910-bb88-43c2-a220-e8030a7a2c95" name="Changes" comment="stable version 1">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/data.txt" beforeDir="false" afterPath="$PROJECT_DIR$/data.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/movies-data.txt" beforeDir="false" afterPath="$PROJECT_DIR$/movies-data.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Artist.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Artist.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Cast.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Cast.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Director.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Director.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Movie.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Movie.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MovieController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MovieController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/User.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/SignUp.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/SignUp.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/profilePageController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/profilePageController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/searchViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/searchViewController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/admin-page.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/admin-page.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -233,7 +216,15 @@
       <option name="project" value="LOCAL" />
       <updated>1702601842654</updated>
     </task>
-    <option name="localTasksCounter" value="13" />
+    <task id="LOCAL-00013" summary="stable version 1">
+      <option name="closed" value="true" />
+      <created>1702989201516</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1702989201516</updated>
+    </task>
+    <option name="localTasksCounter" value="14" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -259,7 +250,8 @@
     <MESSAGE value="Update project finally....." />
     <MESSAGE value="Update icons" />
     <MESSAGE value="view user" />
-    <option name="LAST_COMMIT_MESSAGE" value="view user" />
+    <MESSAGE value="stable version 1" />
+    <option name="LAST_COMMIT_MESSAGE" value="stable version 1" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
