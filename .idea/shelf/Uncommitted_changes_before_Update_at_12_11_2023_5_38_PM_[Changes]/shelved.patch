Index: src/main/java/com/example/watch_it/Admin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.io.*;\r\nimport java.time.Month;\r\nimport java.time.Period;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.time.LocalDate;\r\nimport java.util.Map;\r\n\r\npublic class Admin {\r\n    //gonna fix the try/catch/finally later --------\r\n    //there's more work after the User class ------- maybe ?\r\n\r\n    private String username;\r\n    private int password;\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public int getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(int password) {\r\n        this.password = password;\r\n    }\r\n\r\n    //counters gonna be pairs ,key for the enum class value for repentance -- javafx???\r\n    public static int basicPlanCounter;\r\n    public static int standardPlanCounter;\r\n    public static int premiumPlanCounter;\r\n    private  static final int MONTHSNUMBER = 12;\r\n    static final short PLANINDEX = 6;\r\n    static final short USERNAMEINDEX = 1;\r\n    static final short TYPEINDEX = 0;\r\n    static final short PASSWORDINDEX = 2;\r\n    static final short FIRSTNAMEINDEX = 4;\r\n    static final short LASTNAMEINDEX = 5;\r\n    static final short EMAILINDEX = 7;\r\n    static final short IDINDEX = 3;\r\n    private static short STARTDATEINDEX = 8;\r\n\r\n    public static ArrayList<String> movies = new ArrayList<String>();\r\n    public static ArrayList<String> directors = new ArrayList<String>();\r\n    public static ArrayList<String> casts = new ArrayList<String>();\r\n    public static ArrayList<String> admins = new ArrayList<String>();\r\n    public static ArrayList<String> users = new ArrayList<String>();\r\n    public static ArrayList<String> topRatedMovies;\r\n\r\n    //    public static ArrayList<String> readFile(File file) {\r\n//        ArrayList<String> arrayList = new ArrayList<String>();\r\n//        try {\r\n//            String line = \"\";\r\n//            BufferedReader b = new BufferedReader(new FileReader(file));\r\n//            while ((line = b.readLine()) != null) {\r\n//                arrayList.add(line);\r\n//            }\r\n//            b.close();\r\n//        } catch (IOException e) {\r\n//            throw new RuntimeException(e);\r\n//        }\r\n//        return arrayList;\r\n//    }\r\n    public static void readFile(File file) {\r\n        ArrayList<String> arrayList = new ArrayList<String>();\r\n        try {\r\n            String line = \"\";\r\n            BufferedReader b = new BufferedReader(new FileReader(file));\r\n            while ((line = b.readLine()) != null) {\r\n                String [] row = line.split(\",\");\r\n                if(row[TYPEINDEX].equals(\"user\"))\r\n                    users.add(line);\r\n                else if (row[TYPEINDEX].equals(\"cast\"))\r\n                    casts.add(line);\r\n                else if (row[TYPEINDEX].equals(\"movie\"))\r\n                    movies.add(line);\r\n                else if(row[TYPEINDEX].equals(\"director\"))\r\n                    directors.add(line);\r\n                else\r\n                    admins.add(line);\r\n            }\r\n            b.close();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    public static void writeOnFile(File file){\r\n        try {\r\n            BufferedWriter b = new BufferedWriter(new FileWriter(file));\r\n            for(String index:users){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:movies){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:casts){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:directors){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:admins){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            b.close();\r\n        }\r\n        catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    //if the record exists in database >> gonna return the whole record[don't forget to split it]\r\n    //otherwise gonna return null [make sure to check before dealing with return val].\r\n\r\n    //returned string isn't splitted\r\n    public static String existsInFile(ArrayList<String> arrayList, String username){\r\n        boolean exist = false;\r\n        String[] eachLine;\r\n        for (String index: arrayList){\r\n            eachLine = index.split(\",\");\r\n            if(eachLine[USERNAMEINDEX].equals(username)){\r\n                return index;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    public static boolean existsInFile(String username){;\r\n        String[] eachLine;\r\n        for (String index: users){\r\n            eachLine = index.split(\",\");\r\n            if(eachLine[USERNAMEINDEX].equals(username)){\r\n                return  true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //record to be deleted is not splitted\r\n    public static void deleteOneRecord(ArrayList<String> arrayList, String record){\r\n        arrayList.remove(record);\r\n    }\r\n    public static void changeCell(ArrayList<String> arrayList, String username, String oldCell, String newCell){\r\n        String recuiredLine = existsInFile(arrayList, username);\r\n        if(recuiredLine != null) {\r\n            String[] row = recuiredLine.split(\",\");\r\n            try {\r\n                for (int index = 0; index < row.length; index++) {\r\n                    if (row[index].equals(username))\r\n                        row[index] = newCell;\r\n                }\r\n            }catch (ArrayIndexOutOfBoundsException e){\r\n            }\r\n            arrayList.set(arrayList.indexOf(recuiredLine), String.join(\",\", row));\r\n        }\r\n    }\r\n    //enum ----------------\r\n    public static String getSpecificCellForUser(String type, String username, int index){\r\n        if(type.equals(\"user\")){\r\n            String wantedRecord = existsInFile(users, username);\r\n            String []row = wantedRecord.split(\",\");\r\n            return row[index];\r\n        }\r\n        else if(type.equals(\"admin\")){\r\n\r\n        }\r\n        else if(type.equals(\"cast\")){\r\n\r\n        }\r\n        else if (type.equals(\"director\")) {\r\n\r\n        }\r\n        else if (type.equals(\"movie\")) {\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //working just fine ^^^\r\n    static Subscription.Plans getMostSubscripedPlan(){\r\n        Subscription.Plans plan = null;\r\n        HashMap<Integer,Subscription.Plans> map = new HashMap<>();\r\n        getUsersInEachPlan();\r\n\r\n        map.put(basicPlanCounter,Subscription.Plans.BASIC);\r\n        map.put(standardPlanCounter,Subscription.Plans.STANDARD);\r\n        map.put(premiumPlanCounter,Subscription.Plans.PREMIUM);\r\n\r\n        int max = Math.max(standardPlanCounter,Math.max(basicPlanCounter,premiumPlanCounter));\r\n\r\n        plan = map.get(max);\r\n\r\n        return plan;\r\n    }\r\n    static void getUsersInEachPlan(){\r\n        for (String index: users){\r\n            String []line = index.split(\",\");\r\n            HashMap<Integer,Subscription.Plans> map = new HashMap<>();\r\n            if(line[PLANINDEX].equals(\"basic\"))\r\n                basicPlanCounter++;\r\n            else if (line[PLANINDEX].equals(\"standard\"))\r\n                standardPlanCounter++;\r\n            else\r\n                premiumPlanCounter++;\r\n        }\r\n    }\r\n\r\n    //    public static Month getMonthWithMostRevenue(ArrayList<String> arrayList){\r\n//        Month month = null;\r\n//        int[] months = new int [12];\r\n//        for (String index: arrayList){\r\n//            String []line = index.split(\",\");\r\n//\r\n//            if(line[PLANINDEX].equals(\"basic\"))\r\n//        }\r\n//        return month;\r\n//    }\r\n    //all as strings\r\n\r\n    //assuming all dates are valid and users still subscribed.\r\n\r\n    public static int getMonth(Month month){\r\n        return switch (month) {\r\n            case JANUARY -> 1;\r\n            case FEBRUARY -> 2;\r\n            case MARCH -> 3;\r\n            case APRIL -> 4;\r\n            case MAY -> 5;\r\n            case JUNE -> 6;\r\n            case JULY -> 7;\r\n            case AUGUST -> 8;\r\n            case SEPTEMBER -> 9;\r\n            case OCTOBER -> 10;\r\n            case NOVEMBER -> 11;\r\n            case DECEMBER -> 12;\r\n        };\r\n    }\r\n    public static Month getMonth(int monthNumber){\r\n        return switch (monthNumber) {\r\n            case 1 -> Month.JANUARY;\r\n            case 2 -> Month.FEBRUARY;\r\n            case 3 -> Month.MARCH;\r\n            case 4 -> Month.APRIL;\r\n            case 5 -> Month.MAY;\r\n            case 6 -> Month.JUNE;\r\n            case 7 -> Month.JULY;\r\n            case 8 -> Month.AUGUST;\r\n            case 9 -> Month.SEPTEMBER;\r\n            case 10 -> Month.OCTOBER;\r\n            case 11 -> Month.NOVEMBER;\r\n            case 12 -> Month.DECEMBER;\r\n            default -> null;\r\n        };\r\n    }\r\n    static Month monthWithMostRevenue(){\r\n         Month month = null;\r\n         int [] monthsRevenue = new int[MONTHSNUMBER];\r\n         for(String user: users){\r\n             String[] data = user.split(\",\");\r\n             String plan = data[PLANINDEX];\r\n             LocalDate startDate = LocalDate.parse(data[STARTDATEINDEX]);\r\n             LocalDate todaysDate = LocalDate.now();\r\n             int startMonth = getMonth(startDate.getMonth());\r\n             int todaysmonth = getMonth(todaysDate.getMonth());\r\n             int differenceMonths = todaysmonth - startMonth;\r\n             if(startDate.getYear() != todaysDate.getYear())\r\n                 differenceMonths = (MONTHSNUMBER - startMonth) + todaysmonth;\r\n\r\n             while(differenceMonths >= 0){\r\n                 if(plan.equals(\"basic\")){\r\n                     monthsRevenue[(startMonth + differenceMonths)] += 10;\r\n                 }\r\n                 else if (plan.equals(\"standard\")) {\r\n                     monthsRevenue[(startMonth + differenceMonths)] += 20;\r\n                 }\r\n                 else{\r\n                     monthsRevenue[(startMonth + differenceMonths)] += 30;\r\n                 }\r\n                 differenceMonths--;\r\n             }\r\n         }\r\n         int []check = new int[MONTHSNUMBER];\r\n         System.arraycopy(monthsRevenue, 0, check, 0, MONTHSNUMBER);\r\n         Arrays.sort(check);\r\n         int recuiredMonth = 0;\r\n         for(int i=0; i<MONTHSNUMBER; i++){\r\n            if(monthsRevenue[i] == check[1])\r\n             {\r\n                 recuiredMonth = i + 1;\r\n                 break;\r\n             }\r\n         }\r\n         return getMonth(recuiredMonth);\r\n    }\r\n    static void getUserMovieLists(String user, ArrayList<String> watched_movies, ArrayList<String> toBeWatched_movies){\r\n        boolean toBeWatched = false;\r\n        boolean watched = false;\r\n        int watchedCounter = -1;\r\n        int toBeWatchedCounter = 0;\r\n        String[] eachLine = user.split(\",\");\r\n        for (String data:eachLine) {\r\n            if(data.equals(\"watched\"))\r\n                watched = true;\r\n            if(data.equals(\"to be watched\")) {\r\n                watched = false;\r\n                toBeWatched = true;\r\n            }\r\n            if(watched) {\r\n                watchedCounter++;\r\n                if(watchedCounter != 0 && watchedCounter%2!=0)\r\n                    watched_movies.add(data);\r\n            }\r\n            if(toBeWatched && toBeWatchedCounter == 1)\r\n                toBeWatched_movies.add(data);\r\n            if (toBeWatched && toBeWatchedCounter == 0)\r\n                toBeWatchedCounter = 1;\r\n        }\r\n    }\r\n    //as objects\r\n    static void getUserMovieLists(String userData,User user,ArrayList<UserWatchRecord> watched_movies, ArrayList<Movie> toBeWatched_movies){\r\n        if(userData != null)\r\n        {\r\n            boolean toBeWatched = false;\r\n            boolean watched = false;\r\n            int watchedCounter = -1;\r\n            int toBeWatchedCounter = 0;\r\n            Movie movie_to_watch = new Movie();\r\n            String[] eachLine = userData.split(\",\");\r\n            for (int i=0; i<eachLine.length; i++) {\r\n                if (eachLine[i].equals(\"watched\"))\r\n                    watched = true;\r\n                if (eachLine[i].equals(\"to be watched\")) {\r\n                    watched = false;\r\n                    toBeWatched = true;\r\n                }\r\n                if (watched){\r\n                    watchedCounter++;\r\n                    if(watchedCounter != 0 && watchedCounter % 2 != 0 )\r\n                    {\r\n                        for (String oneMovie : movies) {\r\n                            String[] arr = oneMovie.split(\",\");\r\n                            if (arr[1].equals(eachLine[i]))\r\n                                watched_movies.add(getWatchedMovie(arr[i], Integer.parseInt(arr[i+1])));\r\n                        }\r\n                    }\r\n                }\r\n                if (toBeWatched && toBeWatchedCounter == 1)\r\n                    toBeWatched_movies.add(getOneMovie(eachLine[i]));\r\n                if (toBeWatched && toBeWatchedCounter == 0)\r\n                    toBeWatchedCounter = 1;\r\n            }\r\n        }\r\n        user.Watched_Movies.addAll(watched_movies);\r\n        user.Movies_For_Later.addAll(toBeWatched_movies);\r\n    }\r\n    static UserWatchRecord getWatchedMovie(String title, int rate){\r\n        UserWatchRecord movie = new UserWatchRecord();\r\n        for (String oneMovie: movies){\r\n            String []arr = oneMovie.split(\",\");\r\n            if(arr[1].equals(title))\r\n            {\r\n                movie.movie.setTitle(arr[1]);\r\n                movie.movie.setId(Integer.parseInt(arr[2]));\r\n                movie.movie.setRelease_date(LocalDate.parse(arr[3]));\r\n                // movie.setDuration(Integer.parseInt(arr[4]));\r\n                //director,case lazm hykono strings msh obj.\r\n                //movie.setDirector(arr[7]);\r\n                movie.movie.setBudget(Double.parseDouble(arr[11]));\r\n                movie.movie.setCountry(arr[10]);\r\n                movie.setRating(rate);\r\n                //movie.setDirector(getDirector());\r\n            }\r\n        }\r\n        return movie;\r\n    }\r\n    static Movie getOneMovie (String title){\r\n        Movie movie = new Movie();\r\n        for (String oneMovie : movies) {\r\n            String[] arr = oneMovie.split(\",\");\r\n            if (arr[1].equals(title)) {\r\n                movie.setTitle(arr[1]);\r\n                movie.setId(Integer.parseInt(arr[2]));\r\n                movie.setRelease_date(LocalDate.parse(arr[3]));\r\n                // movie.setDuration(Integer.parseInt(arr[4]));\r\n                //director,cast ykono strings msh obj ,wel class bta3hom hykon el movie string msh obj.\r\n                //movie.setDirector(arr[7]);\r\n                movie.setBudget(Double.parseDouble(arr[11]));\r\n                movie.setCountry(arr[10]);\r\n                movie.setLanguage(arr[8]);\r\n                movie.setImdb_score(Float.parseFloat(arr[9]));\r\n                movie.setRevenue(Double.parseDouble(arr[12]));\r\n                movie.setPoster_path(arr[13]);\r\n                //movie.setDirector(getDirector());\r\n            }\r\n        }\r\n\r\n        return movie;\r\n    }\r\n    static Director getDirector(String directorName){\r\n        Director director = new Director();\r\n        String[] name = directorName.split(\" \");\r\n        for (String oneDirector:directors){\r\n            String[] data = oneDirector.split(\",\");\r\n            if(data[1].equals(name[0]) && data[2].equals(name[1])){\r\n                director.setFirst_Name(data[1]);\r\n                director.setSecond_Name(data[2]);\r\n                director.setAge(Integer.parseInt(data[3]));\r\n                director.setGender(data[4]);\r\n                director.setNationality(data[5]);\r\n                //movies\r\n            }\r\n        }\r\n        return director;\r\n    }\r\n    static Cast getCast(String name){\r\n        //ArrayList<Cast> cast = new ArrayList<Cast>();\r\n        Cast eachCast = new Cast();\r\n        String[] castName = name.split(\" \");\r\n        for (String oneCast: casts){\r\n            String[] data = oneCast.split(\",\");\r\n            if(data[1].equals(castName[0]) && data[2].equals(castName[1])){\r\n                eachCast.setFirst_Name(data[1]);\r\n                eachCast.setSecond_Name(data[2]);\r\n                eachCast.setGender(data[4]);\r\n                eachCast.setAge(Integer.parseInt(data[3]));\r\n                eachCast.setNationality(data[5]);\r\n                //movies\r\n                //cast.add(eachCast);\r\n            }\r\n        }\r\n        return eachCast;\r\n    }\r\n    //name on getMovies is full name >> first and last combined.\r\n    static ArrayList<String> getMovies(String name, ArrayList<String> allMovies){\r\n    ArrayList<String> requiredMovies = new ArrayList<String>();\r\n    for (String data: allMovies){\r\n        String []arr = data.split(\",\");\r\n        for(String index: arr)\r\n            //if cast/director is on this specific movie, then i'm gonna add name of the movie to the list.\r\n            if(index.equals(name))\r\n                requiredMovies.add(arr[1]);\r\n    }\r\n    return requiredMovies;\r\n}\r\n    static ArrayList<User> getUsers(){\r\n        ArrayList<User> userArrayList = new ArrayList<User>();\r\n        for(int i=0; i<users.size(); i++){\r\n            String[] data =users.get(i).split(\",\");\r\n            User user = new User(data[USERNAMEINDEX], data[LASTNAMEINDEX],data[FIRSTNAMEINDEX],data[EMAILINDEX],data[PASSWORDINDEX] );\r\n            userArrayList.add(user);\r\n        }\r\n        return userArrayList;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Admin.java b/src/main/java/com/example/watch_it/Admin.java
--- a/src/main/java/com/example/watch_it/Admin.java	(revision c5bf586a38fccec7ce9069524e0ad04f5d9c9d07)
+++ b/src/main/java/com/example/watch_it/Admin.java	(date 1702309085374)
@@ -9,9 +9,6 @@
 import java.util.Map;
 
 public class Admin {
-    //gonna fix the try/catch/finally later --------
-    //there's more work after the User class ------- maybe ?
-
     private String username;
     private int password;
 
@@ -53,20 +50,6 @@
     public static ArrayList<String> users = new ArrayList<String>();
     public static ArrayList<String> topRatedMovies;
 
-    //    public static ArrayList<String> readFile(File file) {
-//        ArrayList<String> arrayList = new ArrayList<String>();
-//        try {
-//            String line = "";
-//            BufferedReader b = new BufferedReader(new FileReader(file));
-//            while ((line = b.readLine()) != null) {
-//                arrayList.add(line);
-//            }
-//            b.close();
-//        } catch (IOException e) {
-//            throw new RuntimeException(e);
-//        }
-//        return arrayList;
-//    }
     public static void readFile(File file) {
         ArrayList<String> arrayList = new ArrayList<String>();
         try {
@@ -78,8 +61,6 @@
                     users.add(line);
                 else if (row[TYPEINDEX].equals("cast"))
                     casts.add(line);
-                else if (row[TYPEINDEX].equals("movie"))
-                    movies.add(line);
                 else if(row[TYPEINDEX].equals("director"))
                     directors.add(line);
                 else
@@ -214,20 +195,7 @@
         }
     }
 
-    //    public static Month getMonthWithMostRevenue(ArrayList<String> arrayList){
-//        Month month = null;
-//        int[] months = new int [12];
-//        for (String index: arrayList){
-//            String []line = index.split(",");
-//
-//            if(line[PLANINDEX].equals("basic"))
-//        }
-//        return month;
-//    }
-    //all as strings
-
     //assuming all dates are valid and users still subscribed.
-
     public static int getMonth(Month month){
         return switch (month) {
             case JANUARY -> 1;
@@ -460,4 +428,39 @@
         }
         return userArrayList;
     }
+    public static void readMovies(File file)  {
+        ArrayList<String> arrayList = new ArrayList<String>();
+        String line = "";
+        String[] firstLine = new String[20];
+        String[] wholeLine = new String[20];
+        try{
+            int i = 0;
+            BufferedReader bufferedReader = new BufferedReader(new FileReader(file));
+            while((line = bufferedReader.readLine()) != null){
+                if(i % 2 == 0){
+                    firstLine = line.split(",");
+                }
+                else {
+                    wholeLine = line.split(",");
+                    //System.arraycopy(wholeLine ,0 ,firstLine ,5,16);
+                    firstLine = Arrays.copyOf(firstLine, firstLine.length + wholeLine.length);
+                    int g = 0 , k = 6;
+                    while(k < firstLine.length && g< wholeLine.length){
+                        System.out.println(g);
+                        firstLine[k] = wholeLine[g];
+                        ++g;
+                        ++k;
+                    }
+                    String eachLine =String.join(",", firstLine);
+                    arrayList.add(eachLine);
+                }
+
+                i++;
+            }
+        }
+        catch (IOException ioException){
+            throw new RuntimeException(ioException);
+        }
+        movies.addAll(arrayList);
+    }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"236de910-bb88-43c2-a220-e8030a7a2c95\" name=\"Changes\" comment=\"add first page gui\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AddUsersController.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/add-users.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AdminPage.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AdminPage.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AllMoviesController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AllMoviesController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AllUsersController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AllUsersController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/FilterPage.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/FilterPage.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/First.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/First.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/ForgotPassword.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/ForgotPassword.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/PlansController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/PlansController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/SignIn.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/SignIn.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/SignUp.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/SignUp.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/User.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/User.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/admin-page.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/admin-page.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/all-movies.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/all-movies.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/filter-page.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/filter-page.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/first-page.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/first-page.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/forgot-pass.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/forgot-pass.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/plans.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/plans.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-in.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-in.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-up.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-up.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/style.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/style.css\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Nada-Hany&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"cc5d3d54-1728-462d-8317-3b96966b79fa\" />\r\n        <option name=\"url\" value=\"https://github.com/Youssef-Mohsen/Watch_It.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2YeFVvR1cMbdmzoU0JjHSXbxBBy\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/programming/java/Watch_It/src/main/java/com/example/watch_it&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\\java\\com\\example\\watch_it\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\\resources\\com\\example\\watch_it\" />\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\\java\\com\\example\\watch_it\" />\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.watch_it.HelloApplication\" />\r\n      <module name=\"Watch_IT\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.watch_it.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Watch_It\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Watch_It\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.HelloApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"236de910-bb88-43c2-a220-e8030a7a2c95\" name=\"Changes\" comment=\"\" />\r\n      <created>1700878165910</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1700878165910</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"add admin class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700881919077</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700881919077</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"add cast, director and artist classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701195323300</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701195323300</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"integration\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701195620613</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701195620613</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"handling everything in one file\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701306289338</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701306289338</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"getting the month with most revenue\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701479503607</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701479503607</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"main class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701480011804</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701480011804</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"add first page gui\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702240257713</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702240257714</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"add admin class\" />\r\n    <MESSAGE value=\"add cast, director and artist classes\" />\r\n    <MESSAGE value=\"integration\" />\r\n    <MESSAGE value=\"handling everything in one file\" />\r\n    <MESSAGE value=\"getting the month with most revenue\" />\r\n    <MESSAGE value=\"main class\" />\r\n    <MESSAGE value=\"add first page gui\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add first page gui\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c5bf586a38fccec7ce9069524e0ad04f5d9c9d07)
+++ b/.idea/workspace.xml	(date 1702304153967)
@@ -4,33 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="236de910-bb88-43c2-a220-e8030a7a2c95" name="Changes" comment="add first page gui">
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AddUsersController.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/add-users.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/data.txt" beforeDir="false" afterPath="$PROJECT_DIR$/data.txt" afterDir="false" />
+    <list default="true" id="236de910-bb88-43c2-a220-e8030a7a2c95" name="Changes" comment="admin view">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AdminPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AdminPage.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AllMoviesController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AllMoviesController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AllUsersController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AllUsersController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/FilterPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/FilterPage.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/First.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/First.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/ForgotPassword.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/ForgotPassword.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/PlansController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/PlansController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/SignIn.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/SignIn.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/SignUp.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/SignUp.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/User.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/admin-page.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/admin-page.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/all-movies.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/all-movies.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/filter-page.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/filter-page.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/first-page.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/first-page.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/forgot-pass.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/forgot-pass.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/plans.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/plans.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-in.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-in.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-up.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-up.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/style.css" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -191,7 +167,15 @@
       <option name="project" value="LOCAL" />
       <updated>1702240257714</updated>
     </task>
-    <option name="localTasksCounter" value="8" />
+    <task id="LOCAL-00008" summary="admin view">
+      <option name="closed" value="true" />
+      <created>1702266312719</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1702266312720</updated>
+    </task>
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -213,7 +197,8 @@
     <MESSAGE value="getting the month with most revenue" />
     <MESSAGE value="main class" />
     <MESSAGE value="add first page gui" />
-    <option name="LAST_COMMIT_MESSAGE" value="add first page gui" />
+    <MESSAGE value="admin view" />
+    <option name="LAST_COMMIT_MESSAGE" value="admin view" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
