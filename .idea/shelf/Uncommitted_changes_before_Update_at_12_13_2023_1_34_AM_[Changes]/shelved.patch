Index: movies-data.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1,The Dark Knight,When the menace known as the Joker wreaks havoc and chaos on the people of Gotham. Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.,2008-07-23,2h:32m,Christopher Nolan,English,9,United States,565.000.000 M,2.437.724.184 B,movies/the dark knight.jpeg,cast,Christian Bale,Morgan Freeman,Cillian MurphyAaron Eckhart,genres,action,crime,drama,thriller
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/movies-data.txt b/movies-data.txt
--- a/movies-data.txt	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/movies-data.txt	(date 1702421654185)
@@ -1,1 +1,4 @@
-1,The Dark Knight,When the menace known as the Joker wreaks havoc and chaos on the people of Gotham. Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.,2008-07-23,2h:32m,Christopher Nolan,English,9,United States,565.000.000 M,2.437.724.184 B,movies/the dark knight.jpeg,cast,Christian Bale,Morgan Freeman,Cillian MurphyAaron Eckhart,genres,action,crime,drama,thriller
\ No newline at end of file
+1,The Dark Knight,When the menace known as the Joker wreaks havoc and chaos on the people of Gotham. Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.,2008-07-23,2h:32m,Christopher Nolan,English,9,United States,565.000.000 M,2.437.724.184 B,movies/the dark knight.jpeg,cast,Christian Bale,Morgan Freeman,Cillian Murphy,genres,action,crime,drama,thriller
+2,Oppenheimer,The story of American scientist. J. Robert Oppenheimer. and his role in the development of the atomic bomb.,2023-11-21,3h,Christopher Nolan,English,8,United States,100.000.000M,2.437.724 M,movies/Oppenheimer.jpeg,cast,Robert Downey Jr.,Matt Damon,Cillian Murphy,genres,drama,history,biography
+3,Sherlock Holmes,Detective Sherlock Holmes and his stalwart partner Watson engage in a battle of wits and brawn with a nemesis whose plot is a threat to all of England.,2009-12-30,2h:8m,Guy Ritchie,English,8,England,90.000.000 M,112.190.000 M,movies/Sherlock Holmes.jpeg,cast,Robert Downey Jr,Mark Strong,Jude Law,genres,action,adventure,mystery
+4,Avengers: Endgame,After the devastating events of Avengers: Infinity War (2018). the universe is in ruins. With the help of remaining allies. the Avengers assemble once more in order to reverse Thanos' actions and restore balance to the universe.,2019-04-26,3h:1m,Anthony Russo,English,8,United States,90.000.000 M,112.190.000 M,movies/endgame.jpeg,cast,Robert Downey Jr,Benedict Cumberbatch,Chris Hemsworth,genres,action,adventure,drama
\ No newline at end of file
Index: src/main/java/com/example/watch_it/MainPageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport javafx.application.Platform;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.input.KeyEvent;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.Pane;\r\nimport javafx.util.Duration;\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.KeyValue;\r\nimport javafx.animation.Timeline;\r\n\r\n\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport javafx.fxml.FXML;\r\n\r\npublic class MainPageController {\r\n    private Parent root;\r\n    private Scene scene;\r\n    private Stage stage;\r\n    private Timeline autoScrollTimeline;\r\n    private Timeline autoScrollTimeline2;\r\n    @FXML\r\n    private BorderPane mainPane;\r\n    @FXML\r\n    private Label Action;\r\n    @FXML\r\n    private Label Comedy;\r\n    @FXML\r\n    private Label Drama;\r\n    @FXML\r\n    private Label Horror;\r\n    @FXML\r\n    private Label All;\r\n    @FXML\r\n    private ImageView profile;\r\n    @FXML\r\n    private Label Recent;\r\n    @FXML\r\n    private Label topMovies;\r\n    @FXML\r\n    private Label watchRecords;\r\n    @FXML\r\n    private Button Search;\r\n    @FXML\r\n    private ScrollPane Scroll1;\r\n    @FXML\r\n    private ScrollPane Scroll2;\r\n    @FXML\r\n    private Pane AllMovies;\r\n    @FXML\r\n    private MenuButton menuButton;\r\n    @FXML\r\n    private  Label counter;\r\n    static int moviePage = 0;\r\n    private final ArrayList<Movie> moviesTop = new ArrayList<>();\r\n    private final ArrayList<Movie> moviesRecent = new ArrayList<>();\r\n    @FXML\r\n    HBox TopMovies;\r\n    @FXML\r\n    HBox RecentMovies;\r\n    @FXML\r\n    private Button Back;\r\n    static ArrayList<Movie> action = new ArrayList<Movie>();\r\n    static ArrayList<Movie> comedy = new ArrayList<Movie>();\r\n    static ArrayList<Movie> horror = new ArrayList<Movie>();\r\n    static ArrayList<Movie> drama = new ArrayList<Movie>();\r\n\r\n\r\n\r\n    private void setObject(Movie movie, String titleMovie, String pathMovie) {\r\n        movie.setTitle(titleMovie);\r\n        movie.setPoster_path(pathMovie);\r\n    }\r\n\r\n    private void getData() {\r\n        Movie movie = new Movie(),\r\n                movie2 = new Movie(),\r\n                movie3 = new Movie(),\r\n                movie4=new Movie(),\r\n                movie5=new Movie(),\r\n                movie6=new Movie(),\r\n                movie7=new Movie();\r\n\r\n        setObject(movie, \"Spider Man\", \"movies/Amazing_SpiderMan.png\");\r\n        setObject(movie2, \"Gravity\", \"movies/Gravity.jpg\");\r\n        setObject(movie3, \"Black Widow\", \"movies/black widow.jpeg\");\r\n        setObject(movie4,\"Home Alone\",\"movies/home alone.jpeg\");\r\n        setObject(movie5,\"Joker\",\"movies/joker.jpeg\");\r\n        setObject(movie6,\"Ready or Not\",\"movies/ready or not.jpeg\");\r\n        setObject(movie7,\"The Dark Knight\",\"movies/the dark knight.jpeg\");\r\n\r\n        moviesTop.add(movie);\r\n        moviesTop.add(movie2);\r\n        moviesTop.add(movie3);\r\n        moviesTop.add(movie4);\r\n        moviesTop.add(movie5);\r\n        moviesTop.add(movie6);\r\n        moviesTop.add(movie7);\r\n        /////////////////////\r\n        moviesRecent.add(movie);\r\n        moviesRecent.add(movie2);\r\n        moviesRecent.add(movie3);\r\n        moviesRecent.add(movie4);\r\n        moviesRecent.add(movie5);\r\n        moviesRecent.add(movie6);\r\n        moviesRecent.add(movie7);\r\n    }\r\n\r\n    @FXML\r\n    private void initialize() {\r\n        getData();\r\n        for (Movie movie : moviesTop) {\r\n            addToGUI(movie);\r\n        }\r\n        for (Movie movie : moviesRecent) {\r\n            addToGUI2(movie);\r\n        }\r\n        setUpFilter();\r\n        onMouseEntered();\r\n        onMouseExit();\r\n        setupAutoScroll();\r\n        profile.setOnMouseClicked(event -> profileOnMouseClicked());\r\n        labelsOnMouseClicked();\r\n        if(!WatchRecord.watchedMovies.isEmpty()) {\r\n            counter.setText(WatchRecord.watchedMovies.size() + \")\");\r\n        }\r\n        else {\r\n            counter.setText(\"0\"+\")\");\r\n        }\r\n    }\r\n\r\n    private void addToGUI(Movie movie) {\r\n        VBox movieContainer = new VBox(10);\r\n        movieContainer.setPrefWidth(300);\r\n        movieContainer.setPrefHeight(200);\r\n        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitHeight(237);\r\n        imageView.setFitWidth(220);\r\n        Label label = new Label(movie.getTitle());\r\n        label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        label.setOnMouseEntered(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: #FFC107;\"));\r\n        label.setOnMouseExited(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\"));\r\n        movieContainer.setAlignment(Pos.CENTER);\r\n        movieContainer.getChildren().addAll(imageView, label);\r\n\r\n        movieContainer.setOnMouseClicked(event -> {\r\n            try {\r\n                onMouseClickedVBox(event,movie);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        TopMovies.getChildren().addAll(movieContainer);\r\n        watchRecords.setOnMouseClicked(event -> onMouseClicked(movie));\r\n    }\r\n\r\n    private void addToGUI2(Movie movie) {\r\n        VBox movieContainer = new VBox(10);\r\n        movieContainer.setPrefWidth(300);\r\n        movieContainer.setPrefHeight(200);\r\n        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitHeight(237);\r\n        imageView.setFitWidth(220);\r\n        Label label = new Label(movie.getTitle());\r\n        label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        label.setOnMouseEntered(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: #FFC107;\"));\r\n        label.setOnMouseExited(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\"));\r\n        movieContainer.setAlignment(Pos.CENTER);\r\n        movieContainer.getChildren().addAll(imageView, label);\r\n        movieContainer.setOnMouseClicked(event -> {\r\n            try {\r\n                onMouseClickedVBox(event,movie);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        RecentMovies.getChildren().addAll(movieContainer);\r\n\r\n    }\r\n    public void setUpFilter(){\r\n        All.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25; \" +\r\n                \"-fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\");\r\n        Horror.setStyle(\"-fx-background-radius: 25;\"+\r\n                \" -fx-background-color:  #565661;\");\r\n        Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n        Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n        Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n        Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #565661;\"));\r\n        Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n        Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n        Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n        All.setOnMouseExited(event1 -> All.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25;\" +\r\n                \" -fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n    }\r\n    public void onMouseClicked(Movie movie) {\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"watch-record.fxml\"));\r\n        Parent root;\r\n        try {\r\n            root = loader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        WatchRecord controller = loader.getController();\r\n        controller.setStage(stage);\r\n        controller.setMovieDetails(movie);\r\n        controller.initializeItems();\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(\"Movie\");\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n\r\n        stage.setScene(scene);\r\n        stage.show();\r\n\r\n    }\r\n    public void profileOnMouseClicked(){\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"watch-record.fxml\"));\r\n        Parent root;\r\n        try {\r\n            root = loader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        /*WatchRecord controller = loader.getController();\r\n        controller.setStage(stage);*/\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(\"Movie\");\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    public void labelsOnMouseClicked(){\r\n        Action.setOnMouseClicked(event -> {\r\n            Action.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #FFC107;\");\r\n            Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            All.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25; \" +\r\n                    \"-fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\");\r\n            Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #FFC107;\"));\r\n            Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            All.setOnMouseExited(event1 -> All.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25;\" +\r\n                    \" -fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\"));\r\n            try {\r\n                toActionMovies();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        Comedy.setOnMouseClicked(event -> {\r\n            Comedy.setStyle(\"-fx-background-radius: 25;\"+\r\n                    \" -fx-background-color:  #FFC107;\");\r\n            Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            All.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25; \" +\r\n                    \"-fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\");\r\n            Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #FFC107;\"));\r\n            Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            All.setOnMouseExited(event1 -> All.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25;\" +\r\n                    \" -fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\"));\r\n            try {\r\n                toComedyMovies();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        Drama.setOnMouseClicked(event -> {\r\n            Drama.setStyle(\"-fx-background-radius: 25;\"+\r\n                    \" -fx-background-color:  #FFC107;\");\r\n            Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            All.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25; \" +\r\n                    \"-fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\");\r\n            Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #FFC107;\"));\r\n            Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            All.setOnMouseExited(event1 -> All.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25;\" +\r\n                    \" -fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\"));\r\n            try {\r\n                toDramaMovies();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n\r\n        Horror.setOnMouseClicked(event -> {\r\n            Horror.setStyle(\"-fx-background-radius: 25;\"+\r\n                    \" -fx-background-color:  #FFC107;\");\r\n            Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            All.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25; \" +\r\n                    \"-fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\");\r\n            Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #FFC107;\"));\r\n            Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            All.setOnMouseExited(event1 -> All.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25;\" +\r\n                    \" -fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\"));\r\n            try {\r\n                toHorrorMovies();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        All.setOnMouseClicked(event -> {\r\n            All.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                    \" -fx-background-radius: 25; \" +\r\n                    \"-fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\");\r\n            Horror.setStyle(\"-fx-background-radius: 25;\"+\r\n                    \" -fx-background-color:  #565661;\");\r\n            Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #565661;\"));\r\n            Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            All.setOnMouseExited(event1 -> All.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                    \" -fx-background-radius: 25;\" +\r\n                    \" -fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\"));\r\n            toAllMovies();\r\n        });\r\n    }\r\n    public void onMouseClickedVBox(MouseEvent act,Movie movie) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(getClass().getResource(\"movie-view.fxml\"));\r\n        root = loader.load();\r\n        stage = (Stage)((Node)act.getSource()).getScene().getWindow();\r\n        MovieController controller=loader.getController();\r\n        Movie movie2=new Movie(movie.getTitle(),movie.getRelease_date(),movie.getRunning_time(),movie.getGenres(),movie.getLanguage(),movie.getCountry(),movie.getPoster_path(),movie.getBudget(),\"50\",movie.getImdb_score());\r\n        controller.setStage(stage);\r\n        controller.setMovie(movie2);\r\n        controller.watchMovie(movie2);\r\n        controller.initialize();\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));\r\n        controller.refreshScreen(\"Watch Movie Amazing SpiderMan(2023)\", movie.getTitle(),\r\n                \"Amazing SpiderMan Translated\", \"Action\", \"Amazing SpiderMan film.\",\r\n                \"120 minutes\", image);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n\r\n    }\r\n\r\n    public void onMouseEntered() {\r\n        onMouseEnteredLabels(Action);\r\n        onMouseEnteredLabels(Comedy);\r\n        onMouseEnteredLabels(Drama);\r\n        onMouseEnteredLabels(Horror);\r\n        Back.setOnMouseEntered(event -> Back.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25; \" +\r\n                \"-fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n        All.setOnMouseEntered(event -> All.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25; \" +\r\n                \"-fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n        Search.setOnMouseEntered(event -> Search.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25;\" +\r\n                \" -fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n        Recent.setOnMouseEntered(event -> underlineLabel(Recent, true));\r\n        topMovies.setOnMouseEntered(event -> underlineLabel(topMovies, true));\r\n        watchRecords.setOnMouseEntered(event -> {\r\n            watchRecords.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 10; -fx-text-fill: black;\");\r\n            counter.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 10; -fx-text-fill: black;\");\r\n        });\r\n\r\n    }\r\n\r\n    public void onMouseExit() {\r\n        // Handle mouse exit event\r\n        onMouseExitLabels(Action);\r\n        onMouseExitLabels(Comedy);\r\n        onMouseExitLabels(Drama);\r\n        onMouseExitLabels(Horror);\r\n        Back.setOnMouseExited(event -> Back.setStyle(\"-fx-background-color: black;\" +\r\n                \" -fx-background-radius: 25;\" +\r\n                \" -fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n        All.setOnMouseExited(event -> All.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25;\" +\r\n                \" -fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n        Search.setOnMouseExited(event -> Search.setStyle(\"-fx-background-color: black;\" +\r\n                \" -fx-background-radius: 25;\" +\r\n                \" -fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n        Recent.setOnMouseExited(event -> underlineLabel(Recent, false));\r\n        topMovies.setOnMouseExited(event -> underlineLabel(topMovies, false));\r\n        watchRecords.setOnMouseExited(event -> {\r\n            watchRecords.setStyle(\"-fx-background-color: #001f2f; -fx-background-radius: 10;\");\r\n            counter.setStyle(\"-fx-background-color: #001f2f; -fx-background-radius: 10;\");\r\n        });\r\n\r\n    }\r\n\r\n    private void underlineLabel(Label label, boolean underline) {\r\n        label.setUnderline(underline);\r\n    }\r\n\r\n    private void onMouseEnteredLabels(Label label) {\r\n        label.setOnMouseEntered(event -> label.setStyle(\"-fx-background-radius: 25;\" +\r\n                \" -fx-background-color:  #FFC107;\"));\r\n    }\r\n\r\n    private void onMouseExitLabels(Label label) {\r\n        label.setOnMouseExited(event -> label.setStyle(\"-fx-background-radius: 25;\" +\r\n                \" -fx-background-color:  #565661;\"));\r\n    }\r\n    private void setupAutoScroll() {\r\n        double scrollDuration = 14; // Adjust the duration of the auto-scrolling\r\n\r\n        // Create a timeline for the auto-scrolling animation\r\n        autoScrollTimeline = new Timeline(\r\n                new KeyFrame(Duration.ZERO, new KeyValue(Scroll1.hvalueProperty(), 0)),\r\n                new KeyFrame(Duration.seconds(scrollDuration), new KeyValue(Scroll1.hvalueProperty(), 1))\r\n        );\r\n        autoScrollTimeline2 = new Timeline(\r\n                new KeyFrame(Duration.ZERO, new KeyValue(Scroll2.hvalueProperty(), 0)),\r\n                new KeyFrame(Duration.seconds(scrollDuration), new KeyValue(Scroll2.hvalueProperty(), 1))\r\n        );\r\n\r\n        // Set the cycle count to indefinite for continuous scrolling\r\n        autoScrollTimeline.setCycleCount(Timeline.INDEFINITE);\r\n        startAutoScroll();\r\n        Scroll1.setOnMouseEntered(event ->  stopAutoScroll());\r\n        Scroll1.setOnMouseExited(event -> startAutoScroll());\r\n        ///////////////////////////////////////////////////////\r\n        // Set the cycle count to indefinite for continuous scrolling\r\n        autoScrollTimeline2.setCycleCount(Timeline.INDEFINITE);\r\n        startAutoScroll2();\r\n        Scroll2.setOnMouseEntered(event ->  stopAutoScroll2());\r\n        Scroll2.setOnMouseExited(event -> startAutoScroll2());\r\n    }\r\n    @FXML\r\n    private void startAutoScroll() {\r\n        autoScrollTimeline.play();\r\n    }\r\n\r\n    @FXML\r\n    private void stopAutoScroll() {\r\n        // Stop auto-scrolling when user interacts with the ScrollPane\r\n        autoScrollTimeline.pause();\r\n    }\r\n    ///////////////////////////////\r\n\r\n    ///////////////////////////////\r\n    @FXML\r\n    private void startAutoScroll2() {\r\n        autoScrollTimeline2.play();\r\n    }\r\n\r\n    @FXML\r\n    private void stopAutoScroll2() {\r\n        // Stop auto-scrolling when user interacts with the ScrollPane\r\n        autoScrollTimeline2.pause();\r\n    }\r\n    ///////////////////////////\r\n\r\n    public void handleKeyPressed(KeyEvent event) {\r\n        if (event.getCode().toString().equals(\"ESCAPE\")) {\r\n            Platform.exit();\r\n        }\r\n    }\r\n    private void switchPane(Pane pane){\r\n        mainPane.setCenter(pane);\r\n    }\r\n    ///////////////////////////\r\n\r\n    private void toAllMovies(){\r\n        switchPane(this.AllMovies);\r\n    }\r\n\r\n    private void toActionMovies() throws IOException {\r\n        moviePage = 1;\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"filter-page.fxml\"));\r\n        switchPane((Pane)fxml);\r\n    }\r\n\r\n    private void toComedyMovies() throws IOException{\r\n        moviePage = 2;\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"filter-page.fxml\"));\r\n        switchPane((Pane)fxml);\r\n    }\r\n\r\n    private void toDramaMovies() throws IOException{\r\n        moviePage = 3;\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"filter-page.fxml\"));\r\n        switchPane((Pane)fxml);\r\n    }\r\n\r\n    private void toHorrorMovies() throws IOException{\r\n        moviePage = 4;\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"filter-page.fxml\"));\r\n        switchPane((Pane)fxml);\r\n    }\r\n    @FXML\r\n    private void handleMenuItemClick(ActionEvent event) {\r\n        MenuItem selectedItem = (MenuItem) event.getSource();\r\n        String selectedValue = selectedItem.getText();\r\n\r\n        // Do something with the selected value, e.g., set it as the text of the MenuButton\r\n        menuButton.setText(selectedValue);\r\n\r\n        // You can also perform other actions based on the selected value\r\n        // For example, show/hide different UI elements or update other parts of your application\r\n    }\r\n\r\n    public void setStage(Stage stage) {\r\n        this.stage = stage;\r\n    }\r\n    @FXML\r\n    private void goToProgilePage (ActionEvent event) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(getClass().getResource(\"profile-page.fxml\"));\r\n        root = loader.load();\r\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n        profilePageController controller=loader.getController();\r\n        controller.setStage(stage);\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    @FXML\r\n    private void backScenes(ActionEvent event) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(getClass().getResource(\"sign-in.fxml\"));\r\n        root = loader.load();\r\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n        SignIn controller=loader.getController();\r\n        controller.setStage(stage);\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/MainPageController.java b/src/main/java/com/example/watch_it/MainPageController.java
--- a/src/main/java/com/example/watch_it/MainPageController.java	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/src/main/java/com/example/watch_it/MainPageController.java	(date 1702423387057)
@@ -84,44 +84,12 @@
     static ArrayList<Movie> drama = new ArrayList<Movie>();
 
 
-
-    private void setObject(Movie movie, String titleMovie, String pathMovie) {
-        movie.setTitle(titleMovie);
-        movie.setPoster_path(pathMovie);
-    }
-
     private void getData() {
-        Movie movie = new Movie(),
-                movie2 = new Movie(),
-                movie3 = new Movie(),
-                movie4=new Movie(),
-                movie5=new Movie(),
-                movie6=new Movie(),
-                movie7=new Movie();
-
-        setObject(movie, "Spider Man", "movies/Amazing_SpiderMan.png");
-        setObject(movie2, "Gravity", "movies/Gravity.jpg");
-        setObject(movie3, "Black Widow", "movies/black widow.jpeg");
-        setObject(movie4,"Home Alone","movies/home alone.jpeg");
-        setObject(movie5,"Joker","movies/joker.jpeg");
-        setObject(movie6,"Ready or Not","movies/ready or not.jpeg");
-        setObject(movie7,"The Dark Knight","movies/the dark knight.jpeg");
-
-        moviesTop.add(movie);
-        moviesTop.add(movie2);
-        moviesTop.add(movie3);
-        moviesTop.add(movie4);
-        moviesTop.add(movie5);
-        moviesTop.add(movie6);
-        moviesTop.add(movie7);
-        /////////////////////
-        moviesRecent.add(movie);
-        moviesRecent.add(movie2);
-        moviesRecent.add(movie3);
-        moviesRecent.add(movie4);
-        moviesRecent.add(movie5);
-        moviesRecent.add(movie6);
-        moviesRecent.add(movie7);
+        for(Movie movie : Movie.allmovies){
+            moviesTop.add(movie);
+            moviesRecent.add(movie);
+        }
+
     }
 
     @FXML
@@ -228,6 +196,7 @@
         controller.setStage(stage);
         controller.setMovieDetails(movie);
         controller.initializeItems();
+        controller.aBoolean=true;
         Scene scene = new Scene(root);
         stage.setTitle("Movie");
         stage.setResizable(false);
@@ -239,15 +208,15 @@
 
     }
     public void profileOnMouseClicked(){
-        FXMLLoader loader = new FXMLLoader(getClass().getResource("watch-record.fxml"));
+        FXMLLoader loader = new FXMLLoader(getClass().getResource("profile-page.fxml"));
         Parent root;
         try {
             root = loader.load();
         } catch (IOException e) {
             throw new RuntimeException(e);
         }
-        /*WatchRecord controller = loader.getController();
-        controller.setStage(stage);*/
+        profilePageController controller = loader.getController();
+        controller.setStage(stage);
         Scene scene = new Scene(root);
         stage.setTitle("Movie");
         stage.setResizable(false);
@@ -379,7 +348,7 @@
         root = loader.load();
         stage = (Stage)((Node)act.getSource()).getScene().getWindow();
         MovieController controller=loader.getController();
-        Movie movie2=new Movie(movie.getTitle(),movie.getRelease_date(),movie.getRunning_time(),movie.getGenres(),movie.getLanguage(),movie.getCountry(),movie.getPoster_path(),movie.getBudget(),"50",movie.getImdb_score());
+        Movie movie2=new Movie(movie.getTitle(),movie.getRelease_date(),movie.getRunning_time(),movie.getGenres(),movie.getLanguage(),movie.getCountry(),movie.getPoster_path(),movie.getBudget(),"50",movie.getImdb_score(),movie.getDescription());
         controller.setStage(stage);
         controller.setMovie(movie2);
         controller.watchMovie(movie2);
@@ -387,10 +356,12 @@
         scene = new Scene(root);
         stage.setScene(scene);
         stage.show();
+        //movie.getRelease_date().getYear()
+        //movie.getGenres().toString()
         Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));
-        controller.refreshScreen("Watch Movie Amazing SpiderMan(2023)", movie.getTitle(),
-                "Amazing SpiderMan Translated", "Action", "Amazing SpiderMan film.",
-                "120 minutes", image);
+        controller.refreshScreen("Watch Movie "+ movie.getTitle() + "("+movie.getRelease_date().getYear()+")", movie.getTitle(),
+                movie.getTitle()+" Translated",movie.getGenres().toString(), movie.getDescription(),
+                movie.getRunning_time(), image,movie.getDirectorName(),movie.getCast().toString());
         stage.setScene(scene);
         stage.show();
 
Index: src/main/java/com/example/watch_it/Movie.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.Comparator;\r\nimport java.util.List;\r\n\r\npublic class Movie {\r\n\r\n    public static ArrayList<Movie> allmovies = new ArrayList<>();\r\n    public static ArrayList<Movie> action = new ArrayList<>();\r\n    public static ArrayList<Movie> drama = new ArrayList<>();\r\n    public static ArrayList<Movie> horror = new ArrayList<>();\r\n    public static ArrayList<Movie> comedy = new ArrayList<>();\r\n    private static int counter = 0;\r\n    private int id;\r\n    private int views = 0;\r\n    private String title;\r\n    private LocalDate release_date;\r\n    private String running_time;\r\n    private ArrayList<String> genres;\r\n    private String language;\r\n    private String country;\r\n    private String poster_path;\r\n    private String budget;\r\n    private String revenue;\r\n    private int imdb_score;\r\n    private String description;\r\n    private float avarage_rating = 0f;\r\n    private float total_rating = 0f;\r\n    private int users_rated = 0;\r\n\r\n    private Director director;\r\n    private List<Cast> cast;\r\n\r\n    public Movie(){\r\n        counter++;\r\n        this.id = counter;\r\n        this.director = new Director();\r\n        this.cast = new ArrayList<>();\r\n    }\r\n\r\n    public Movie(String title, LocalDate release_date, String running_time, ArrayList<String> genre, String language, String country, String poster_path, String budget, String revenue, int imdb_score) {\r\n        counter++;\r\n        this.id = counter;\r\n        this.title = title;\r\n        this.release_date = release_date;\r\n        this.running_time = running_time;\r\n        this.genres = genre;\r\n        this.language = language;\r\n        this.country = country;\r\n        this.poster_path = poster_path;\r\n        this.budget = budget;\r\n        this.revenue = revenue;\r\n        this.imdb_score = imdb_score;\r\n        this.director = new Director();\r\n        this.cast = new ArrayList<>();\r\n    }\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public int getViews() {\r\n        return views;\r\n    }\r\n\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n\r\n    public LocalDate getRelease_date() {\r\n        return release_date;\r\n    }\r\n\r\n    public String getRunning_time() {\r\n        return running_time;\r\n    }\r\n\r\n    public ArrayList<String> getGenres() {\r\n        return genres;\r\n    }\r\n\r\n    public String getLanguage() {\r\n        return language;\r\n    }\r\n\r\n    public String getCountry() {\r\n        return country;\r\n    }\r\n\r\n    public String getPoster_path() {\r\n        return poster_path;\r\n    }\r\n\r\n    public String getBudget() {\r\n        return budget;\r\n    }\r\n\r\n    public int getImdb_score() {\r\n        return imdb_score;\r\n    }\r\n    public float getAverage_rating() {\r\n        return avarage_rating;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public void setTitle(String title) {\r\n        this.title = title;\r\n    }\r\n\r\n    public void setRelease_date(LocalDate release_date) {\r\n        this.release_date = release_date;\r\n    }\r\n\r\n    public void setRunning_time(String running_time) {\r\n        this.running_time = running_time;\r\n    }\r\n\r\n    public void setGenre(ArrayList<String> genres) {\r\n        this.genres = genres;\r\n    }\r\n\r\n    public void setLanguage(String language) {\r\n        this.language = language;\r\n    }\r\n\r\n    public void setCountry(String country) {\r\n        this.country = country;\r\n    }\r\n\r\n    public void setPoster_path(String poster_path) {\r\n        this.poster_path = poster_path;\r\n    }\r\n\r\n    public void setBudget(String budget) {\r\n        this.budget = budget;\r\n    }\r\n\r\n    public void setRevenue(String revenue) {\r\n        this.revenue = revenue;\r\n    }\r\n\r\n    public void setImdb_score(int imdb_score) {\r\n        this.imdb_score = imdb_score;\r\n    }\r\n    public String getDescription() {\r\n        return description;\r\n    }\r\n\r\n    public void setDescription(String description) {\r\n        this.description = description;\r\n    }\r\n\r\n    public void inc_views(){\r\n        this.views++;\r\n    }\r\n\r\n    public void addMovie (Movie movie){\r\n        allmovies.add(movie);\r\n    }\r\n\r\n    public List<Cast> getCast() {\r\n        return cast;\r\n    }\r\n\r\n    public void addActor(Cast actor) {\r\n        cast.add(actor);\r\n    }\r\n\r\n    public void setCast(List<Cast> cast) {\r\n        this.cast = cast;\r\n    }\r\n\r\n    public void setDirector(Director director) {\r\n        this.director = director;\r\n    }\r\n    public void UpdateRating(float rating){\r\n\r\n        total_rating += rating;\r\n\r\n        if (rating >= 0) {\r\n            users_rated++;\r\n            avarage_rating = total_rating / users_rated;\r\n        }\r\n        else {\r\n            users_rated --;\r\n            if (users_rated > 0) {\r\n                avarage_rating = total_rating / users_rated;\r\n            }\r\n            else\r\n                avarage_rating = 0.0f;\r\n        }\r\n\r\n    }\r\n\r\n    public static Movie getMovie (String movie_title) {\r\n        if (!(allmovies.isEmpty())) {\r\n            for (Movie movie : allmovies) {\r\n                if (movie.title.equals(movie_title))\r\n                    return movie;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    public static List<Movie> RecentMovies(List<Movie> movie) {\r\n        List<Movie> recent_movies = new ArrayList<>();\r\n        for (Movie m : movie) {\r\n            LocalDate release_date = m.getRelease_date();\r\n\r\n            if (release_date.isAfter(LocalDate.now().minusMonths(1))) {\r\n                recent_movies.add(m);\r\n            }\r\n        }\r\n        if (!(recent_movies.isEmpty())) {\r\n            recent_movies.sort(Comparator.comparing(Movie::getRelease_date).reversed());\r\n            return recent_movies;\r\n        }\r\n        return null;\r\n    }\r\n    public static List<Movie> TopRatedMovies(List<Movie> movie) {\r\n        movie.sort(Comparator.comparing(Movie::getAverage_rating).reversed());\r\n        return movie;\r\n    }\r\n    public static List<Movie> MostViewedMovies(List<Movie> movie) {\r\n        movie.sort(Comparator.comparing(Movie::getViews).reversed());\r\n        return movie;\r\n    }\r\n    public static void getDiffGenres(){\r\n\r\n        for(Movie eachMovie: allmovies){\r\n            for(int i=0; i<eachMovie.getGenres().size(); i++){\r\n                for(String eachGenre:eachMovie.getGenres()){\r\n                    if(eachGenre.equals(\"action\"))\r\n                        action.add(eachMovie);\r\n                    else if (eachGenre.equals(\"comedy\"))\r\n                        comedy.add(eachMovie);\r\n                    else if (eachGenre.equals(\"drama\"))\r\n                        drama.add(eachMovie);\r\n                    else if (eachGenre.equals(\"horror\"))\r\n                        horror.add(eachMovie);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Movie.java b/src/main/java/com/example/watch_it/Movie.java
--- a/src/main/java/com/example/watch_it/Movie.java	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/src/main/java/com/example/watch_it/Movie.java	(date 1702423728223)
@@ -11,6 +11,8 @@
     public static ArrayList<Movie> drama = new ArrayList<>();
     public static ArrayList<Movie> horror = new ArrayList<>();
     public static ArrayList<Movie> comedy = new ArrayList<>();
+    private String directorName;
+    private ArrayList<String> castNames;
     private static int counter = 0;
     private int id;
     private int views = 0;
@@ -39,7 +41,7 @@
         this.cast = new ArrayList<>();
     }
 
-    public Movie(String title, LocalDate release_date, String running_time, ArrayList<String> genre, String language, String country, String poster_path, String budget, String revenue, int imdb_score) {
+    public Movie(String title, LocalDate release_date, String running_time, ArrayList<String> genre, String language, String country, String poster_path, String budget, String revenue, int imdb_score,String description) {
         counter++;
         this.id = counter;
         this.title = title;
@@ -52,6 +54,7 @@
         this.budget = budget;
         this.revenue = revenue;
         this.imdb_score = imdb_score;
+        this.description=description;
         this.director = new Director();
         this.cast = new ArrayList<>();
     }
@@ -244,6 +247,33 @@
             }
         }
     }
+    public String getDirectorName() {
+        return directorName;
+    }
+
+    public void setDirectorName(String directorName) {
+        this.directorName = directorName;
+    }
+
+    public ArrayList<String> getCastNames() {
+        return castNames;
+    }
+
+    public void setCastNames(ArrayList<String> castNames) {
+        this.castNames = castNames;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null || getClass() != obj.getClass()) {
+            return false;
+        }
+        Movie otherMovie = (Movie) obj;
+        return title.equals(otherMovie.title);
+    }
 
 }
 
Index: src/main/java/com/example/watch_it/SignUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Objects;\r\n\r\npublic class SignUp {\r\n    private Stage stage;\r\n    private Scene scene;\r\n\r\n    private Parent root;\r\n    @FXML\r\n    private TextField CTextPassword;\r\n\r\n    @FXML\r\n    private CheckBox CheckBox;\r\n\r\n    @FXML\r\n    private PasswordField CreateConfirmPassword;\r\n\r\n    @FXML\r\n    private PasswordField CreatePassword;\r\n\r\n    @FXML\r\n    private TextField CreateUserName;\r\n\r\n    @FXML\r\n    private TextField Email;\r\n\r\n    @FXML\r\n    private TextField FisrtName;\r\n\r\n    @FXML\r\n    private TextField LastName;\r\n\r\n    @FXML\r\n    private TextField TextPassword;\r\n    @FXML\r\n    private Button Back;\r\n    @FXML\r\n    private void showAlert(String message) {\r\n        showAlert(message, Alert.AlertType.INFORMATION);\r\n    }\r\n\r\n    @FXML\r\n    private void showErrorAlert(String title, String message) {\r\n        showAlert(title, message, Alert.AlertType.ERROR);\r\n    }\r\n    @FXML\r\n    private void showAlert(String message, Alert.AlertType alertType) {\r\n        Alert alert = new Alert(alertType);\r\n        alert.setTitle(\"Login Result\");\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(message);\r\n        alert.showAndWait();\r\n    }\r\n    @FXML\r\n    private void showAlert(String title, String message, Alert.AlertType alertType) {\r\n        Alert alert = new Alert(alertType);\r\n        alert.setTitle(title);\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(message);\r\n        alert.showAndWait();\r\n    }\r\n\r\n    @FXML\r\n    public void GoToSignIn(ActionEvent event) throws IOException {\r\n        root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(\"sign-in.fxml\")));\r\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    /*@FXML\r\n    public void SignUP()\r\n    {\r\n        String username = CreateUserName.getText();\r\n        while(Admin.existsInFile(username))\r\n        {\r\n            showErrorAlert(\"Invalid\", \"UserName Is already exist , Try again!\");\r\n            CreateUserName.clear();\r\n        }\r\n        String firstname = FisrtName.getText();\r\n        String lastname = LastName.getText();\r\n        String email = Email.getText();\r\n        String password = CreatePassword.getText();\r\n        String confirmpassword = CreateConfirmPassword.getText();\r\n        while(!password.equals(confirmpassword))\r\n        {\r\n            showErrorAlert(\"Invalid\", \"Confirm Password Does not match, Try again!\");\r\n            CreateConfirmPassword.clear();\r\n        }\r\n        showAlert(\"Sign Up is completed Successful!\");\r\n    }*/\r\n    @FXML\r\n    public void The_Password_Visibility(ActionEvent act)\r\n    {\r\n        if(CheckBox.isSelected())\r\n        {\r\n            TextPassword.setText(CreatePassword.getText());\r\n            CTextPassword.setText(CreateConfirmPassword.getText());\r\n            TextPassword.setVisible(true);\r\n            CreatePassword.setVisible(false);\r\n            CTextPassword.setVisible(true);\r\n            CreateConfirmPassword.setVisible(false);\r\n        }\r\n        else\r\n        {\r\n            CreatePassword.setText(TextPassword.getText());\r\n            CreateConfirmPassword.setText(CTextPassword.getText());\r\n            TextPassword.setVisible(false);\r\n            CreatePassword.setVisible(true);\r\n            CTextPassword.setVisible(false);\r\n            CreateConfirmPassword.setVisible(true);\r\n        }\r\n    }\r\n    public void onMouseEntered() {\r\n        Back.setOnMouseEntered(event -> Back.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n\r\n    public void onMouseExit() {\r\n        Back.setOnMouseExited(event -> Back.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/SignUp.java b/src/main/java/com/example/watch_it/SignUp.java
--- a/src/main/java/com/example/watch_it/SignUp.java	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/src/main/java/com/example/watch_it/SignUp.java	(date 1702419443330)
@@ -44,6 +44,28 @@
     private TextField TextPassword;
     @FXML
     private Button Back;
+    @FXML
+    RadioButton button1;
+    @FXML
+    RadioButton button2;
+    @FXML
+    RadioButton button3;
+    @FXML
+    RadioButton button4;
+    @FXML
+    RadioButton button5;
+    @FXML
+    RadioButton button6;
+    ToggleGroup group = new ToggleGroup();
+    @FXML
+    private void initialize(){
+        button1.setToggleGroup(group);
+        button2.setToggleGroup(group);
+        button3.setToggleGroup(group);
+        button4.setToggleGroup(group);
+        button5.setToggleGroup(group);
+        button6.setToggleGroup(group);
+    }
     @FXML
     private void showAlert(String message) {
         showAlert(message, Alert.AlertType.INFORMATION);
@@ -78,27 +100,52 @@
         stage.setScene(scene);
         stage.show();
     }
-    /*@FXML
-    public void SignUP()
-    {
+    public void GoToChoosePlan(ActionEvent event, User user) throws IOException {
+        FXMLLoader loader = new FXMLLoader(getClass().getResource("choose-plan.fxml"));
+        Parent root;
+        try {
+            root = loader.load();
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+        ChoosePlanController controller = loader.getController();
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        controller.setStage(stage);
+        controller.setUser(user);
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+        stage.setX(-7);
+        stage.setY(0);
+    }
+    @FXML
+    public void SignUP(ActionEvent event) throws IOException {
         String username = CreateUserName.getText();
-        while(Admin.existsInFile(username))
-        {
-            showErrorAlert("Invalid", "UserName Is already exist , Try again!");
-            CreateUserName.clear();
-        }
         String firstname = FisrtName.getText();
         String lastname = LastName.getText();
         String email = Email.getText();
         String password = CreatePassword.getText();
         String confirmpassword = CreateConfirmPassword.getText();
-        while(!password.equals(confirmpassword))
+        RadioButton selectedbutton = (RadioButton) group.getSelectedToggle();
+
+        if (username.isEmpty() || firstname.isEmpty() || lastname.isEmpty() || password.isEmpty() || email.isEmpty() || confirmpassword.isEmpty() || selectedbutton == null){
+            showErrorAlert("Invalid", "Enter All Data");
+        }
+        else if (!password.equals(confirmpassword))
         {
             showErrorAlert("Invalid", "Confirm Password Does not match, Try again!");
             CreateConfirmPassword.clear();
         }
-        showAlert("Sign Up is completed Successful!");
-    }*/
+        else if (User.Userexist(username))
+        {
+            showErrorAlert("Invalid", "UserName Is already exist , Try again!");
+            CreateUserName.clear();
+        }
+        else {
+            User user = new User(User.allusers.size(),username, lastname, firstname, email, password);
+            GoToChoosePlan(event, user);
+        }
+    }
     @FXML
     public void The_Password_Visibility(ActionEvent act)
     {
@@ -126,6 +173,10 @@
     }
 
     public void onMouseExit() {
-        Back.setOnMouseExited(event -> Back.setStyle("-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;"));
+        Back.setOnMouseExited(event -> Back.setStyle("-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;"));
+    }
+
+    public void setStage(Stage stage) {
+        this.stage = stage;
     }
 }
\ No newline at end of file
Index: src/main/resources/com/example/watch_it/choose-plan.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/com/example/watch_it/choose-plan.fxml b/src/main/resources/com/example/watch_it/choose-plan.fxml
new file mode 100644
--- /dev/null	(date 1702381004710)
+++ b/src/main/resources/com/example/watch_it/choose-plan.fxml	(date 1702381004710)
@@ -0,0 +1,112 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.*?>
+<?import javafx.scene.layout.*?>
+<?import javafx.scene.text.*?>
+
+<AnchorPane maxHeight="864.0" maxWidth="1536.0" minHeight="-Infinity" minWidth="-Infinity" prefHeight="864.0" prefWidth="1536.0" style="-fx-background-color: black;" xmlns="http://javafx.com/javafx/17.0.2-ea" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.watch_it.ChoosePlanController">
+    <children>
+        <Pane prefHeight="100.0" prefWidth="1536.0" style="-fx-background-color: black;">
+            <children>
+                <Label alignment="CENTER" layoutX="42.0" layoutY="23.0" prefHeight="43.0" prefWidth="143.0" style="-fx-background-color: FFC107; -fx-background-radius: 20; " text="Watch" textFill="WHITE">
+                    <font>
+                        <Font name="Arial Narrow Bold" size="27.0" />
+                    </font>
+                </Label>
+                <Label alignment="CENTER" contentDisplay="CENTER" layoutX="158.0" layoutY="23.0" prefHeight="43.0" prefWidth="68.0" style="-fx-background-color: black; -fx-background-radius: 25;" text="IT" textFill="WHITE">
+                    <font>
+                        <Font name="Arial Narrow Bold" size="27.0" />
+                    </font>
+                </Label>
+                <Button fx:id="Back" layoutX="1448.0" layoutY="15.0" mnemonicParsing="false" prefHeight="27.0" prefWidth="56.0" style="-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;" text="Back" textFill="WHITE" />
+                <!--onAction="#GoToSignIn" onMouseEntered="#onMouseEntered" onMouseExited="#onMouseExit"-->
+            </children>
+        </Pane>
+        <Pane layoutY="100.0" prefHeight="764.0" prefWidth="1536.0">
+            <children>
+                <Label alignment="CENTER" prefHeight="134.0" prefWidth="1536.0" text="Pick Your Favourite Plan" textFill="WHITE">
+                    <font>
+                        <Font name="System Bold" size="48.0" />
+                    </font>
+                </Label>
+                <Button fx:id="basic" layoutX="229.0" layoutY="150.0" mnemonicParsing="false" onMouseClicked="#Basic" prefHeight="202.0" prefWidth="263.0" />
+                <Label layoutX="304.0" layoutY="165.0" text="BASIC" textFill="WHITE">
+                    <font>
+                        <Font name="System Bold" size="40.0" />
+                    </font>
+                </Label>
+                <Label layoutX="270.0" layoutY="350.0">
+                    <font>
+                        <Font size="64.0" />
+                    </font>
+                </Label>
+                <Label layoutX="266.0" layoutY="240.0" text="5 Movies/Month" textFill="WHITE">
+                    <font>
+                        <Font name="System Bold" size="24.0" />
+                    </font>
+                </Label>
+                <Label layoutX="314.0" layoutY="285.0" text="100 EGP" textFill="WHITE">
+                    <font>
+                        <Font name="System Bold" size="24.0" />
+                    </font>
+                </Label>
+                <Button fx:id="standard" layoutX="630.0" layoutY="147.0" mnemonicParsing="false" onMouseClicked="#Standard" prefHeight="202.0" prefWidth="263.0" />
+                <Label layoutX="659.0" layoutY="165.0" text="STANDARD" textFill="WHITE">
+                    <font>
+                        <Font name="System Bold" size="40.0" />
+                    </font>
+                </Label>
+                <Label layoutX="652.0" layoutY="240.0" text="10 Movies/Month" textFill="WHITE">
+                    <font>
+                        <Font name="System Bold" size="24.0" />
+                    </font>
+                </Label>
+                <Label layoutX="722.0" layoutY="285.0" text="200 EGP" textFill="WHITE">
+                    <font>
+                        <Font name="System Bold" size="24.0" />
+                    </font>
+                </Label>
+                <Button fx:id="premium" layoutX="995.0" layoutY="147.0" mnemonicParsing="false" onMouseClicked="#Premium" prefHeight="202.0" prefWidth="263.0" />
+                <Label layoutX="1031.0" layoutY="165.0" text="PREMIUM" textFill="WHITE">
+                    <font>
+                        <Font name="System Bold" size="40.0" />
+                    </font>
+                </Label>
+                <Label layoutX="1025.0" layoutY="240.0" text="30 Movies/Month" textFill="WHITE">
+                    <font>
+                        <Font name="System Bold" size="24.0" />
+                    </font>
+                </Label>
+                <Label layoutX="1080.0" layoutY="285.0" text="400 EGP" textFill="WHITE">
+                    <font>
+                        <Font name="System Bold" size="24.0" />
+                    </font>
+                </Label>
+                <TextField fx:id="cardNumber" layoutX="537.0" layoutY="419.0" prefHeight="49.0" prefWidth="450.0" promptText="Card Number" style="-fx-background-color: black; -fx-border-color: grey; -fx-border-radius: 30;">
+                    <font>
+                        <Font name="System Bold" size="14.0" />
+                    </font></TextField>
+                <TextField fx:id="cardHolderName" layoutX="537.0" layoutY="479.0" prefHeight="49.0" prefWidth="450.0" promptText="Card Holder Name" style="-fx-background-color: black; -fx-border-color: grey; -fx-border-radius: 30;">
+                    <font>
+                        <Font name="System Bold" size="14.0" />
+                    </font>
+                </TextField>
+                <TextField fx:id="MMyy" layoutX="537.0" layoutY="538.0" prefHeight="49.0" prefWidth="216.0" promptText="MM / YY" style="-fx-background-color: black; -fx-border-color: grey; -fx-border-radius: 30;">
+                    <font>
+                        <Font name="System Bold" size="14.0" />
+                    </font>
+                </TextField>
+                <TextField fx:id="Cvv" layoutX="771.0" layoutY="538.0" prefHeight="49.0" prefWidth="216.0" promptText="CVV" style="-fx-background-color: black; -fx-border-color: grey; -fx-border-radius: 30;">
+                    <font>
+                        <Font name="System Bold" size="14.0" />
+                    </font>
+                </TextField>
+                <Button layoutX="537.0" layoutY="604.0" mnemonicParsing="false" onAction="#Pay" prefHeight="49.0" prefWidth="450.0" style="-fx-background-color: FFC107; -fx-background-radius: 30;" text="Pay">
+                    <font>
+                        <Font name="System Bold" size="18.0" />
+                    </font>
+                </Button>
+            </children>
+        </Pane>
+    </children>
+</AnchorPane>
\ No newline at end of file
Index: src/main/resources/com/example/watch_it/sign-up.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.*?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.text.*?>\r\n\r\n<AnchorPane maxHeight=\"864.0\" maxWidth=\"1536.0\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"864.0\" prefWidth=\"1536.0\" style=\"-fx-background-color: black; -fx-border-color: FFC107; -fx-border-width: 3;\" xmlns=\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"com.example.watch_it.SignUp\">\r\n    <children>\r\n        <VBox alignment=\"CENTER\" maxHeight=\"864.0\" maxWidth=\"1536.0\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"864.0\" prefWidth=\"1536.0\" style=\"-fx-background-color: black;\">\r\n            <children>\r\n                <Pane prefHeight=\"100.0\" prefWidth=\"1536.0\" style=\"-fx-background-color: black;\">\r\n                    <children>\r\n                        <Label alignment=\"CENTER\" layoutX=\"42.0\" layoutY=\"23.0\" prefHeight=\"43.0\" prefWidth=\"143.0\" style=\"-fx-background-color: FFC107; -fx-background-radius: 20; \" text=\"Watch\" textFill=\"WHITE\">\r\n                            <font>\r\n                                <Font name=\"Arial Narrow Bold\" size=\"27.0\" />\r\n                            </font>\r\n                        </Label>\r\n                        <Label alignment=\"CENTER\" contentDisplay=\"CENTER\" layoutX=\"158.0\" layoutY=\"23.0\" prefHeight=\"43.0\" prefWidth=\"68.0\" style=\"-fx-background-color: black; -fx-background-radius: 25;\" text=\"IT\" textFill=\"WHITE\">\r\n                            <font>\r\n                                <Font name=\"Arial Narrow Bold\" size=\"27.0\" />\r\n                            </font>\r\n                        </Label>\r\n                        <Button fx:id=\"Back\" layoutX=\"1448.0\" layoutY=\"15.0\" mnemonicParsing=\"false\" onAction=\"#GoToSignIn\" onMouseEntered=\"#onMouseEntered\" onMouseExited=\"#onMouseExit\" prefHeight=\"27.0\" prefWidth=\"56.0\" style=\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\" text=\"Back\" textFill=\"WHITE\" />\r\n                    </children>\r\n                </Pane>\r\n                <Pane prefHeight=\"764.0\" prefWidth=\"1536.0\" style=\"-fx-background-color: black;\">\r\n                    <children>\r\n                        <HBox layoutY=\"152.0\" prefHeight=\"204.0\" prefWidth=\"1318.0\" spacing=\"70.0\">\r\n                            <children>\r\n                                <VBox alignment=\"TOP_CENTER\" prefHeight=\"200.0\" prefWidth=\"100.0\" spacing=\"20.0\">\r\n                                    <children>\r\n                                        <ImageView fitHeight=\"100.0\" fitWidth=\"100.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                                            <Image url=\"@assets/batbot-01.png\" />\r\n                                        </ImageView>\r\n                                        <RadioButton fx:id=\"button1\" mnemonicParsing=\"false\" />\r\n                                    </children>\r\n                                </VBox>\r\n                                <VBox alignment=\"TOP_CENTER\" layoutX=\"110.0\" layoutY=\"50.0\" prefHeight=\"200.0\" prefWidth=\"100.0\" spacing=\"20.0\">\r\n                                    <children>\r\n                                        <ImageView fitHeight=\"100.0\" fitWidth=\"100.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                                            <image>\r\n                                                <Image url=\"@assets/batbot-02.png\" />\r\n                                            </image>\r\n                                        </ImageView>\r\n                                        <RadioButton fx:id=\"button2\" mnemonicParsing=\"false\" />\r\n                                    </children>\r\n                                </VBox>\r\n                                <VBox alignment=\"TOP_CENTER\" layoutX=\"316.0\" layoutY=\"50.0\" prefHeight=\"200.0\" prefWidth=\"100.0\" spacing=\"20.0\">\r\n                                    <children>\r\n                                        <ImageView fitHeight=\"100.0\" fitWidth=\"100.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                                            <image>\r\n                                                <Image url=\"@assets/batbot-03.png\" />\r\n                                            </image>\r\n                                        </ImageView>\r\n                                        <RadioButton fx:id=\"button3\" mnemonicParsing=\"false\" />\r\n                                    </children>\r\n                                </VBox>\r\n                                <VBox alignment=\"TOP_CENTER\" layoutX=\"523.0\" layoutY=\"50.0\" prefHeight=\"200.0\" prefWidth=\"100.0\" spacing=\"20.0\">\r\n                                    <children>\r\n                                        <ImageView fitHeight=\"100.0\" fitWidth=\"100.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                                            <image>\r\n                                                <Image url=\"@assets/batbot-04.png\" />\r\n                                            </image>\r\n                                        </ImageView>\r\n                                        <RadioButton fx:id=\"button4\" mnemonicParsing=\"false\" />\r\n                                    </children>\r\n                                </VBox>\r\n                                <VBox alignment=\"TOP_CENTER\" layoutX=\"729.0\" layoutY=\"50.0\" prefHeight=\"200.0\" prefWidth=\"100.0\" spacing=\"20.0\">\r\n                                    <children>\r\n                                        <ImageView fitHeight=\"100.0\" fitWidth=\"100.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                                            <image>\r\n                                                <Image url=\"@assets/batbot-05.png\" />\r\n                                            </image>\r\n                                        </ImageView>\r\n                                        <RadioButton fx:id=\"button5\" mnemonicParsing=\"false\" />\r\n                                    </children>\r\n                                </VBox>\r\n                                <VBox alignment=\"TOP_CENTER\" layoutX=\"936.0\" layoutY=\"50.0\" prefHeight=\"200.0\" prefWidth=\"100.0\" spacing=\"20.0\">\r\n                                    <children>\r\n                                        <ImageView fitHeight=\"100.0\" fitWidth=\"100.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                                            <image>\r\n                                                <Image url=\"@assets/batbot-06.png\" />\r\n                                            </image>\r\n                                        </ImageView>\r\n                                        <RadioButton fx:id=\"button6\" mnemonicParsing=\"false\" />\r\n                                    </children>\r\n                                </VBox>\r\n                            </children>\r\n                            <padding>\r\n                                <Insets left=\"300.0\" top=\"40.0\" />\r\n                            </padding>\r\n                        </HBox>\r\n                        <ImageView fitHeight=\"62.0\" fitWidth=\"68.0\" layoutX=\"737.0\" layoutY=\"14.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                            <image>\r\n                                <Image url=\"@assets/adduser.png\" />\r\n                            </image>\r\n                        </ImageView>\r\n                        <Label alignment=\"CENTER\" layoutX=\"659.0\" layoutY=\"87.0\" prefHeight=\"44.0\" prefWidth=\"218.0\" text=\"Sign UP\" textFill=\"#f8f7f7\">\r\n                            <font>\r\n                                <Font size=\"36.0\" />\r\n                            </font>\r\n                        </Label>\r\n                        <TextField fx:id=\"CreateUserName\" alignment=\"CENTER\" layoutX=\"271.0\" layoutY=\"396.0\" prefHeight=\"47.0\" prefWidth=\"460.0\" promptText=\"UserName\" style=\"-fx-background-color: FFC107; -fx-background-radius: 50; -fx-border-radius: 50; -fx-border-color: #f8f7f7; -fx-border-width: 2;\">\r\n                            <font>\r\n                                <Font name=\"Chalkboard Bold\" size=\"20.0\" />\r\n                            </font>\r\n                        </TextField>\r\n                        <TextField fx:id=\"FisrtName\" alignment=\"CENTER\" layoutX=\"271.0\" layoutY=\"456.0\" prefHeight=\"47.0\" prefWidth=\"460.0\" promptText=\"First Name\" style=\"-fx-background-color: FFC107; -fx-background-radius: 50; -fx-border-radius: 50; -fx-border-color: #f8f7f7; -fx-border-width: 2;\">\r\n                            <font>\r\n                                <Font name=\"Chalkboard Bold\" size=\"20.0\" />\r\n                            </font>\r\n                        </TextField>\r\n                        <TextField fx:id=\"LastName\" alignment=\"CENTER\" layoutX=\"780.0\" layoutY=\"456.0\" prefHeight=\"47.0\" prefWidth=\"460.0\" promptText=\"Last Name\" style=\"-fx-background-color: FFC107; -fx-background-radius: 50; -fx-border-radius: 50; -fx-border-color: #f8f7f7; -fx-border-width: 2;\">\r\n                            <font>\r\n                                <Font name=\"Chalkboard Bold\" size=\"20.0\" />\r\n                            </font>\r\n                        </TextField>\r\n                        <TextField fx:id=\"Email\" alignment=\"CENTER\" layoutX=\"780.0\" layoutY=\"396.0\" prefHeight=\"47.0\" prefWidth=\"460.0\" promptText=\"Email\" style=\"-fx-background-color: FFC107; -fx-background-radius: 50; -fx-border-radius: 50; -fx-border-color: #f8f7f7; -fx-border-width: 2;\">\r\n                            <font>\r\n                                <Font name=\"Chalkboard Bold\" size=\"20.0\" />\r\n                            </font>\r\n                        </TextField>\r\n                        <TextField fx:id=\"TextPassword\" alignment=\"CENTER\" layoutX=\"271.0\" layoutY=\"516.0\" prefHeight=\"47.0\" prefWidth=\"460.0\" promptText=\"Password\" style=\"-fx-background-color: FFC107; -fx-background-radius: 50; -fx-border-radius: 50; -fx-border-color: #f8f7f7; -fx-border-width: 2;\">\r\n                            <font>\r\n                                <Font name=\"Chalkboard Bold\" size=\"20.0\" />\r\n                            </font>\r\n                        </TextField>\r\n                        <PasswordField fx:id=\"CreatePassword\" alignment=\"CENTER\" layoutX=\"271.0\" layoutY=\"516.0\" prefHeight=\"47.0\" prefWidth=\"460.0\" promptText=\"Password\" style=\"-fx-background-color: FFC107; -fx-background-radius: 50; -fx-border-radius: 50; -fx-border-width: 2; -fx-border-color: #f8f7f7;\">\r\n                            <font>\r\n                                <Font name=\"Chalkboard Bold\" size=\"20.0\" />\r\n                            </font>\r\n                        </PasswordField>\r\n                        <TextField fx:id=\"CTextPassword\" alignment=\"CENTER\" layoutX=\"780.0\" layoutY=\"516.0\" prefHeight=\"47.0\" prefWidth=\"460.0\" promptText=\"Confirm Password\" style=\"-fx-background-color: FFC107; -fx-background-radius: 50; -fx-border-radius: 50; -fx-border-color: #f8f7f7; -fx-border-width: 2;\">\r\n                            <font>\r\n                                <Font name=\"Chalkboard Bold\" size=\"20.0\" />\r\n                            </font>\r\n                        </TextField>\r\n                        <PasswordField fx:id=\"CreateConfirmPassword\" alignment=\"CENTER\" layoutX=\"780.0\" layoutY=\"516.0\" prefHeight=\"47.0\" prefWidth=\"460.0\" promptText=\"Confirm Password\" style=\"-fx-background-color: FFC107; -fx-background-radius: 50; -fx-border-radius: 50; -fx-border-width: 2; -fx-border-color: #f8f7f7;\">\r\n                            <font>\r\n                                <Font name=\"Chalkboard Bold\" size=\"20.0\" />\r\n                            </font>\r\n                        </PasswordField>\r\n                        <CheckBox fx:id=\"CheckBox\" layoutX=\"563.0\" layoutY=\"593.0\" mnemonicParsing=\"false\" onAction=\"#The_Password_Visibility\" prefHeight=\"27.0\" prefWidth=\"180.0\" text=\"Show Password\" textFill=\"#f8f7f7\">\r\n                            <font>\r\n                                <Font size=\"20.0\" />\r\n                            </font>\r\n                        </CheckBox>\r\n                        <Button alignment=\"CENTER\" layoutX=\"610.0\" layoutY=\"663.0\" mnemonicParsing=\"false\" prefHeight=\"51.0\" prefWidth=\"319.0\" style=\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\" text=\"Create \" textAlignment=\"CENTER\" textFill=\"#f8f7f7\">\r\n                            <font>\r\n                                <Font name=\"Chalkboard Bold\" size=\"20.0\" />\r\n                            </font>\r\n                        </Button>\r\n                    </children>\r\n                </Pane>\r\n            </children>\r\n        </VBox>\r\n    </children>\r\n</AnchorPane>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/com/example/watch_it/sign-up.fxml b/src/main/resources/com/example/watch_it/sign-up.fxml
--- a/src/main/resources/com/example/watch_it/sign-up.fxml	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/src/main/resources/com/example/watch_it/sign-up.fxml	(date 1702381065699)
@@ -147,7 +147,7 @@
                                 <Font size="20.0" />
                             </font>
                         </CheckBox>
-                        <Button alignment="CENTER" layoutX="610.0" layoutY="663.0" mnemonicParsing="false" prefHeight="51.0" prefWidth="319.0" style="-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;" text="Create " textAlignment="CENTER" textFill="#f8f7f7">
+                        <Button onAction="#SignUP" alignment="CENTER" layoutX="610.0" layoutY="663.0" mnemonicParsing="false" prefHeight="51.0" prefWidth="319.0" style="-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;" text="Create " textAlignment="CENTER" textFill="#f8f7f7">
                             <font>
                                 <Font name="Chalkboard Bold" size="20.0" />
                             </font>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"20\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/.idea/misc.xml	(date 1702408565499)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="MavenProjectsManager">
Index: src/main/java/com/example/watch_it/searchViewController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class searchViewController {\r\n    @FXML\r\n    private HBox Movies;\r\n    @FXML\r\n    private Label Name_Label;\r\n    @FXML\r\n    private Label Age_Label;\r\n    @FXML\r\n    private Label Gender_Label;\r\n    @FXML\r\n    private Label Nation_Label;\r\n    private Label Movies_Label;\r\n    @FXML\r\n    private Label Not_Found_Label;\r\n    @FXML\r\n    private Label data_Label;\r\n    private Stage stage;\r\n    @FXML\r\n    public void initialize(String movie_name){\r\n        for (Movie m: Movie.allmovies) {\r\n            if(m.getTitle().equals(movie_name)){\r\n                add_movie(m);\r\n            }\r\n        }\r\n    }\r\n    // for test\r\n//    public  void getdata(){\r\n//        move m=new move();\r\n//        m.name=\"frozen\";\r\n//        m.url=\"C:\\\\Users\\\\Start\\\\IdeaProjects\\\\demo1\\\\src\\\\main\\\\java\\\\image\\\\download.jpeg\";\r\n//        mo.add(m);\r\n//        m=new move();\r\n//        m.name=\"spider man\";\r\n//        m.url=\"C:\\\\Users\\\\Start\\\\IdeaProjects\\\\demo1\\\\src\\\\main\\\\java\\\\image\\\\format-arw-PXjQaGxi4JA-unsplash.jpg\";\r\n//        mo.add(m);\r\n//        m=new move();\r\n//        m.name=\"spider man\";\r\n//        m.url=\"C:\\\\Users\\\\Start\\\\IdeaProjects\\\\demo1\\\\src\\\\main\\\\java\\\\image\\\\images.jpeg\";\r\n//        mo.add(m);\r\n//    }\r\n    private void add_movie(Movie movie){\r\n        Image image=new Image(movie.getPoster_path());\r\n        ImageView imageView=new ImageView(image);\r\n        imageView.setFitHeight(150);\r\n        imageView.setFitWidth(200);\r\n        Label name=new Label(movie.getTitle());\r\n        name.setFont(Font.font(20));\r\n        VBox show=new VBox(10);\r\n        show.getChildren().addAll(imageView,name);\r\n        show.setAlignment(Pos.CENTER);\r\n        Movies.getChildren().add(show);\r\n    }\r\n    protected void Search(String search_name){\r\n        String[] arr = search_name.split(\" \");\r\n        String first = arr[0], second = arr[1];\r\n        Director d = Director.Search_director(first, second);\r\n        data_Label.setText(\"Director\");\r\n//        For cast\r\n//        data_Label.setText(\"Cast\");\r\n//        Cast c=Cast.Search_Cast(first,second,director);\r\n//        if(c==null)\r\n//            Not_Found_Label.setText(\"Not Found !!!\");\r\n//        else{\r\n//            Name_Label.setText(d.getFirst_Name() + \" \" + d.getSecond_Name());\r\n//            Age_Label.setText(Integer.toHexString(d.getAge()));\r\n//            Gender_Label.setText(d.getGender());\r\n//            Nation_Label.setText(d.getNationality());\r\n//        }\r\n        if (d == null)\r\n            Not_Found_Label.setText(\"Not Found !!!\");\r\n        else {\r\n            Name_Label.setText(d.getFirst_Name() + \" \" + d.getSecond_Name());\r\n            Age_Label.setText(Integer.toHexString(d.getAge()));\r\n            Gender_Label.setText(d.getGender());\r\n            Nation_Label.setText(d.getNationality());\r\n            for (String n:d.getMovies()) {\r\n                initialize(n);\r\n            }\r\n        }\r\n    }\r\n\r\n    public void setStage(Stage stage){\r\n        this.stage = stage;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/searchViewController.java b/src/main/java/com/example/watch_it/searchViewController.java
--- a/src/main/java/com/example/watch_it/searchViewController.java	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/src/main/java/com/example/watch_it/searchViewController.java	(date 1702419233316)
@@ -1,7 +1,11 @@
 package com.example.watch_it;
 
+import java.util.Iterator;
+
+import javafx.event.ActionEvent;
 import javafx.fxml.FXML;
 import javafx.geometry.Pos;
+import javafx.scene.Node;
 import javafx.scene.control.Label;
 import javafx.scene.image.Image;
 import javafx.scene.image.ImageView;
@@ -10,8 +14,6 @@
 import javafx.scene.text.Font;
 import javafx.stage.Stage;
 
-import java.util.ArrayList;
-
 public class searchViewController {
     @FXML
     private HBox Movies;
@@ -29,71 +31,90 @@
     @FXML
     private Label data_Label;
     private Stage stage;
+
+    public searchViewController() {
+    }
+
     @FXML
-    public void initialize(String movie_name){
-        for (Movie m: Movie.allmovies) {
-            if(m.getTitle().equals(movie_name)){
-                add_movie(m);
+    public void initialize(String movie_name) {
+        Iterator var2 = Movie.allmovies.iterator();
+
+        while(var2.hasNext()) {
+            Movie m = (Movie)var2.next();
+            if (m.getTitle().equals(movie_name)) {
+                this.add_movie(m);
             }
         }
+
     }
-    // for test
-//    public  void getdata(){
-//        move m=new move();
-//        m.name="frozen";
-//        m.url="C:\\Users\\Start\\IdeaProjects\\demo1\\src\\main\\java\\image\\download.jpeg";
-//        mo.add(m);
-//        m=new move();
-//        m.name="spider man";
-//        m.url="C:\\Users\\Start\\IdeaProjects\\demo1\\src\\main\\java\\image\\format-arw-PXjQaGxi4JA-unsplash.jpg";
-//        mo.add(m);
-//        m=new move();
-//        m.name="spider man";
-//        m.url="C:\\Users\\Start\\IdeaProjects\\demo1\\src\\main\\java\\image\\images.jpeg";
-//        mo.add(m);
-//    }
-    private void add_movie(Movie movie){
-        Image image=new Image(movie.getPoster_path());
-        ImageView imageView=new ImageView(image);
-        imageView.setFitHeight(150);
-        imageView.setFitWidth(200);
-        Label name=new Label(movie.getTitle());
-        name.setFont(Font.font(20));
-        VBox show=new VBox(10);
-        show.getChildren().addAll(imageView,name);
+
+    private void add_movie(Movie movie) {
+        Image image = new Image(movie.getPoster_path());
+        ImageView imageView = new ImageView(image);
+        imageView.setFitHeight(150.0);
+        imageView.setFitWidth(200.0);
+        Label name = new Label(movie.getTitle());
+        name.setFont(Font.font(20.0));
+        VBox show = new VBox(10.0);
+        show.getChildren().addAll(new Node[]{imageView, name});
         show.setAlignment(Pos.CENTER);
-        Movies.getChildren().add(show);
+        this.Movies.getChildren().add(show);
     }
-    protected void Search(String search_name){
+
+    protected void Search(String search_name) {
         String[] arr = search_name.split(" ");
-        String first = arr[0], second = arr[1];
-        Director d = Director.Search_director(first, second);
-        data_Label.setText("Director");
-//        For cast
-//        data_Label.setText("Cast");
-//        Cast c=Cast.Search_Cast(first,second,director);
-//        if(c==null)
-//            Not_Found_Label.setText("Not Found !!!");
-//        else{
-//            Name_Label.setText(d.getFirst_Name() + " " + d.getSecond_Name());
-//            Age_Label.setText(Integer.toHexString(d.getAge()));
-//            Gender_Label.setText(d.getGender());
-//            Nation_Label.setText(d.getNationality());
-//        }
-        if (d == null)
-            Not_Found_Label.setText("Not Found !!!");
+        String first = arr[0];
+        String second = arr[1];
+        if (choice.equals("director")) {
+            Director d = Director.Search_director(first, second);
+            this.data_Label.setText("Director");
+            if (d == null) {
+                this.Not_Found_Label.setText("Not Found !!!");
+            } else {
+                Label var10000 = this.Name_Label;
+                String var10001 = d.getFirst_Name();
+                var10000.setText(var10001 + " " + d.getSecond_Name());
+                this.Age_Label.setText(Integer.toHexString(d.getAge()));
+                this.Gender_Label.setText(d.getGender());
+                this.Nation_Label.setText(d.getNationality());
+                Iterator var6 = d.getMovies().iterator();
+
+                while (var6.hasNext()) {
+                    String n = (String) var6.next();
+                    this.initialize(n);
+                }
+            }
+
+        }
         else {
-            Name_Label.setText(d.getFirst_Name() + " " + d.getSecond_Name());
-            Age_Label.setText(Integer.toHexString(d.getAge()));
-            Gender_Label.setText(d.getGender());
-            Nation_Label.setText(d.getNationality());
-            for (String n:d.getMovies()) {
-                initialize(n);
+            Cast c = Cast.Search_Cast(first, second);
+            this.data_Label.setText("Director");
+            if (c == null) {
+                this.Not_Found_Label.setText("Not Found !!!");
+            } else {
+                Label var10000 = this.Name_Label;
+                String var10001 = c.getFirst_Name();
+                var10000.setText(var10001 + " " + c.getSecond_Name());
+                this.Age_Label.setText(Integer.toHexString(c.getAge()));
+                this.Gender_Label.setText(c.getGender());
+                this.Nation_Label.setText(c.getNationality());
+                Iterator var6 = c.getMovies().iterator();
+                while (var6.hasNext()) {
+                    String n = (String) var6.next();
+                    this.initialize(n);
+                }
             }
+
         }
     }
-
-    public void setStage(Stage stage){
+    public void setStage(Stage stage) {
         this.stage = stage;
     }
-}
+    String choice;
+    public void handleMenuItem_directorClick(ActionEvent act){
+        choice="director";
+    }
+    public  void handleMenuItem_castClick(ActionEvent act){
+        choice="cast";
+    }
+}
\ No newline at end of file
Index: src/main/java/com/example/watch_it/AllUsersController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.text.Font;\r\nimport java.net.URL;\r\nimport java.util.ResourceBundle;\r\n\r\n\r\npublic class AllUsersController implements Initializable {\r\n\r\n    @FXML\r\n    private VBox userbox1;\r\n    @FXML\r\n    private VBox userbox2;\r\n    @FXML\r\n    private VBox userbox3;\r\n    @FXML\r\n    private VBox userbox4;\r\n    @FXML\r\n     private TextField searchBar;\r\n\r\n    @FXML\r\n    Image image1 = new Image(getClass().getResourceAsStream(\"assets/batbot-01.png\"));\r\n    @FXML\r\n    Image image2 = new Image(getClass().getResourceAsStream(\"assets/batbot-02.png\"));\r\n    @FXML\r\n    Image image3 = new Image(getClass().getResourceAsStream(\"assets/batbot-03.png\"));\r\n    @FXML\r\n    Image image4 = new Image(getClass().getResourceAsStream(\"assets/batbot-04.png\"));\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        //getUsers();\r\n        getAllUsers();\r\n    }\r\n    private void  getAllUsers(){\r\n        int i = 0;\r\n        // Add labels for users from the HelloApplication.users list\r\n        for (User user : User.allusers){\r\n            i++;\r\n            addUserDetails(i, user.getUser_Name(), user.getFirst_Name(), user.getLast_Name(), user.getEmail(),user.getPassword());\r\n        }\r\n    }\r\n\r\n    private void addUserDetails(int i,String username, String fname, String lname,String email, String password) {\r\n        Button view = new Button(\"View\");\r\n        view.setAlignment(javafx.geometry.Pos.CENTER);\r\n        view.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\");\r\n        view.setTextFill(Color.WHITE);\r\n        Font font = new Font(\"System Bold\", 15.0);\r\n        view.setFont(font);\r\n\r\n        Label nameLabel = new Label(username);\r\n        nameLabel.setTextFill(Color.WHITE);\r\n        nameLabel.setFont(Font.font(\"System Bold\", 30.0));\r\n\r\n        ImageView batbot1 = new ImageView(image1);\r\n        batbot1.setFitHeight(120);\r\n        batbot1.setFitWidth(118);\r\n        ImageView batbot2 = new ImageView(image2);\r\n        batbot2.setFitHeight(120);\r\n        batbot2.setFitWidth(118);\r\n        ImageView batbot3 = new ImageView(image3);\r\n        batbot3.setFitHeight(120);\r\n        batbot3.setFitWidth(118);\r\n        ImageView batbot4 = new ImageView(image4);\r\n        batbot4.setFitHeight(120);\r\n        batbot4.setFitWidth(118);\r\n\r\n\r\n        VBox userDetailsBox = new VBox();\r\n        userDetailsBox.setSpacing(5);\r\n\r\n        if (i % 4 == 1) {\r\n            userDetailsBox.getChildren().addAll(batbot1,nameLabel,  view) ;\r\n            userDetailsBox.setAlignment(Pos.CENTER);\r\n            userbox1.getChildren().add(userDetailsBox);\r\n            userbox1.setSpacing(50);\r\n            VBox.setMargin(userbox1, new Insets(0, 0, 30, 0));\r\n        }\r\n        else if (i % 4 == 2) {\r\n            userDetailsBox.getChildren().addAll(batbot2, nameLabel, view);\r\n            userDetailsBox.setAlignment(Pos.CENTER);\r\n            userbox2.getChildren().add(userDetailsBox);\r\n            userbox2.setSpacing(50);\r\n            VBox.setMargin(userbox2, new Insets(0, 0, 30, 0));\r\n        }\r\n        if (i % 4 == 3) {\r\n            userDetailsBox.getChildren().addAll( batbot3,nameLabel, view);\r\n            userDetailsBox.setAlignment(Pos.CENTER);\r\n            userbox3.getChildren().add(userDetailsBox);\r\n            userbox3.setSpacing(50);\r\n            VBox.setMargin(userbox3, new Insets(0, 0, 30, 0));\r\n        }\r\n        if (i % 4 == 0) {\r\n            userDetailsBox.getChildren().addAll( batbot4,nameLabel, view);\r\n            userDetailsBox.setAlignment(Pos.CENTER);\r\n            userbox4.getChildren().add(userDetailsBox);\r\n            userbox4.setSpacing(50);\r\n            VBox.setMargin(userbox4, new Insets(0, 0, 30, 0));\r\n        }\r\n\r\n    }\r\n    @FXML\r\n    void Search() {\r\n        System.out.println(\"in\");\r\n        String username = searchBar.getText();\r\n        userbox1.getChildren().clear();\r\n        userbox2.getChildren().clear();\r\n        userbox3.getChildren().clear();\r\n        userbox4.getChildren().clear();\r\n        for (User user : User.allusers) {\r\n            if (username.equalsIgnoreCase(user.getUser_Name())) {\r\n                addUserDetails(1, user.getUser_Name(), user.getFirst_Name(), user.getLast_Name(), user.getEmail(),user.getPassword());\r\n            }\r\n        }\r\n        if (username.isEmpty()){\r\n            getAllUsers();\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/AllUsersController.java b/src/main/java/com/example/watch_it/AllUsersController.java
--- a/src/main/java/com/example/watch_it/AllUsersController.java	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/src/main/java/com/example/watch_it/AllUsersController.java	(date 1702419609867)
@@ -39,7 +39,6 @@
 
     @Override
     public void initialize(URL url, ResourceBundle resourceBundle) {
-        //getUsers();
         getAllUsers();
     }
     private void  getAllUsers(){
Index: src/main/java/com/example/watch_it/ChoosePlanController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/ChoosePlanController.java b/src/main/java/com/example/watch_it/ChoosePlanController.java
new file mode 100644
--- /dev/null	(date 1702380950060)
+++ b/src/main/java/com/example/watch_it/ChoosePlanController.java	(date 1702380950060)
@@ -0,0 +1,97 @@
+package com.example.watch_it;
+
+import javafx.fxml.FXML;
+import javafx.scene.control.Alert;
+import javafx.scene.control.Button;
+import javafx.scene.control.TextField;
+import javafx.stage.Stage;
+
+public class ChoosePlanController {
+    @FXML
+    private Button basic;
+    @FXML
+    private Button standard;
+    @FXML
+    private Button premium;
+    @FXML
+    private TextField cardNumber;
+    @FXML
+    private TextField cardHolderName;
+    @FXML
+    private TextField MMyy;
+    @FXML
+    private TextField Cvv;
+    static Button selectedButton = new Button();
+    Stage stage;
+    private User user;
+    public void setUser(User user) {
+        this.user = user;
+    }
+
+    @FXML
+    private void initialize(){
+        basic.setStyle("-fx-border-color: #090909; -fx-background-color: #090909; -fx-background-radius: 30; -fx-border-radius: 30;");
+        standard.setStyle("-fx-border-color: #090909; -fx-background-color: #090909; -fx-background-radius: 30; -fx-border-radius: 30;");
+        premium.setStyle("-fx-border-color: #090909; -fx-background-color: #090909; -fx-background-radius: 30; -fx-border-radius: 30;");
+    }
+
+
+    @FXML
+    private void Basic() {
+        basic.setStyle("-fx-background-color: #090909; -fx-background-radius: 30; -fx-border-radius: 30; -fx-border-color: #FFC107;");
+        standard.setStyle("-fx-background-color: #090909; -fx-background-radius: 30; -fx-border-radius: 30; -fx-border-color: #090909;");
+        premium.setStyle("-fx-background-color: #090909; -fx-background-radius: 30; -fx-border-radius: 30; -fx-border-color: #090909;");
+        selectedButton = basic;
+    }
+    @FXML
+    private void Standard() {
+        basic.setStyle("-fx-background-color: #090909; -fx-background-radius: 30; -fx-border-radius: 30; -fx-border-color: #090909;");
+        standard.setStyle("-fx-background-color: #090909; -fx-background-radius: 30; -fx-border-radius: 30; -fx-border-color: #FFC107;");
+        premium.setStyle("-fx-background-color: #090909; -fx-background-radius: 30; -fx-border-radius: 30; -fx-border-color: #090909;");
+        selectedButton = standard;
+    }
+    @FXML
+    private void Premium() {
+        basic.setStyle("-fx-background-color: #090909; -fx-background-radius: 30; -fx-border-radius: 30; -fx-border-color: #090909;");
+        standard.setStyle("-fx-background-color: #090909; -fx-background-radius: 30; -fx-border-radius: 30; -fx-border-color: #090909;");
+        premium.setStyle("-fx-background-color: #090909; -fx-background-radius: 30; -fx-border-radius: 30; -fx-border-color: #FFC107;");
+        selectedButton = premium;
+    }
+    @FXML
+    private void Pay() {
+        String cardnumber = cardNumber.getText();
+        String cardholdername = cardHolderName.getText();
+        String mmyy = MMyy.getText();
+        String cvv = Cvv.getText();
+        if (cardnumber.isEmpty() || cardholdername.isEmpty() || mmyy.isEmpty() || cvv.isEmpty() || selectedButton == null) {
+            Alert alert = new Alert(Alert.AlertType.ERROR);
+            alert.setTitle("Error");
+            alert.setHeaderText(null);
+            alert.setContentText("Enter All Data");
+            alert.showAndWait();
+        }
+        else {
+            User.allusers.add(user);
+            if (selectedButton.equals(basic)) {
+                user.Subscribe(user.getUser_ID(),  Subscription.Plans.BASIC);
+                user.Updata_Subscription_Plan(Subscription.Plans.BASIC);
+            }
+            else if (selectedButton.equals(standard)){
+                user.Subscribe(user.getUser_ID(),  Subscription.Plans.STANDARD);
+                user.Updata_Subscription_Plan(Subscription.Plans.STANDARD);
+            }
+            else if (selectedButton.equals(premium)){
+                user.Subscribe(user.getUser_ID(),  Subscription.Plans.PREMIUM);
+                user.Updata_Subscription_Plan(Subscription.Plans.PREMIUM);
+            }
+            Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
+            alert.setTitle("");
+            alert.setHeaderText(null);
+            alert.setContentText("Sign Up is completed Successful!");
+            alert.showAndWait();
+        }
+    }
+    public void setStage (Stage stage) {
+        this.stage = this.stage;
+    }
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"236de910-bb88-43c2-a220-e8030a7a2c95\" name=\"Changes\" comment=\"reading movies\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/RecordedMoviesController.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/UpdatePageController.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/profilePageController.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/profile-page.fxml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/recorded-movies.fxml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/update-page.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/movies-data.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/movies-data.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AllMoviesController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AllMoviesController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Cast.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Cast.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Director.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Director.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Movie.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Movie.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/PlansController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/PlansController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/searchViewController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/searchViewController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/plans.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/plans.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Nada-Hany&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"cc5d3d54-1728-462d-8317-3b96966b79fa\" />\r\n        <option name=\"url\" value=\"https://github.com/Youssef-Mohsen/Watch_It.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2YeFVvR1cMbdmzoU0JjHSXbxBBy\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/programming/java/Watch_It/src/main/java/com/example/watch_it&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\\java\\com\\example\\watch_it\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\\resources\\com\\example\\watch_it\" />\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\\java\\com\\example\\watch_it\" />\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.watch_it.HelloApplication\" />\r\n      <module name=\"Watch_IT\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.watch_it.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Watch_It\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Watch_It\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.HelloApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"236de910-bb88-43c2-a220-e8030a7a2c95\" name=\"Changes\" comment=\"\" />\r\n      <created>1700878165910</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1700878165910</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"add admin class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700881919077</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700881919077</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"add cast, director and artist classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701195323300</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701195323300</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"integration\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701195620613</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701195620613</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"handling everything in one file\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701306289338</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701306289338</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"getting the month with most revenue\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701479503607</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701479503607</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"main class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701480011804</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701480011804</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"add first page gui\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702240257713</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702240257714</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"reading movies\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702329606254</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702329606254</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"add admin class\" />\r\n    <MESSAGE value=\"add cast, director and artist classes\" />\r\n    <MESSAGE value=\"integration\" />\r\n    <MESSAGE value=\"handling everything in one file\" />\r\n    <MESSAGE value=\"getting the month with most revenue\" />\r\n    <MESSAGE value=\"main class\" />\r\n    <MESSAGE value=\"add first page gui\" />\r\n    <MESSAGE value=\"reading movies\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"reading movies\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/.idea/workspace.xml	(date 1702423387920)
@@ -4,28 +4,23 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="236de910-bb88-43c2-a220-e8030a7a2c95" name="Changes" comment="reading movies">
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/RecordedMoviesController.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/UpdatePageController.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/profilePageController.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/profile-page.fxml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/recorded-movies.fxml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/update-page.fxml" afterDir="false" />
+    <list default="true" id="236de910-bb88-43c2-a220-e8030a7a2c95" name="Changes" comment="integration">
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/ChoosePlanController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/choose-plan.fxml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/data.txt" beforeDir="false" afterPath="$PROJECT_DIR$/data.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/movies-data.txt" beforeDir="false" afterPath="$PROJECT_DIR$/movies-data.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AllMoviesController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AllMoviesController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AllUsersController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AllUsersController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Cast.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Cast.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Director.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Director.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Movie.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Movie.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/PlansController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/PlansController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/SignUp.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/SignUp.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/searchViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/searchViewController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/plans.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/plans.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-up.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-up.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -35,8 +30,8 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
-        <option value="FxmlFile" />
         <option value="Class" />
+        <option value="FxmlFile" />
       </list>
     </option>
   </component>
@@ -194,7 +189,23 @@
       <option name="project" value="LOCAL" />
       <updated>1702329606254</updated>
     </task>
-    <option name="localTasksCounter" value="9" />
+    <task id="LOCAL-00009" summary="storing data into all objects">
+      <option name="closed" value="true" />
+      <created>1702352707521</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1702352707521</updated>
+    </task>
+    <task id="LOCAL-00010" summary="integration">
+      <option name="closed" value="true" />
+      <created>1702352749785</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1702352749785</updated>
+    </task>
+    <option name="localTasksCounter" value="11" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -211,13 +222,24 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="add admin class" />
     <MESSAGE value="add cast, director and artist classes" />
-    <MESSAGE value="integration" />
     <MESSAGE value="handling everything in one file" />
     <MESSAGE value="getting the month with most revenue" />
     <MESSAGE value="main class" />
     <MESSAGE value="add first page gui" />
     <MESSAGE value="reading movies" />
-    <option name="LAST_COMMIT_MESSAGE" value="reading movies" />
+    <MESSAGE value="storing data into all objects" />
+    <MESSAGE value="integration" />
+    <option name="LAST_COMMIT_MESSAGE" value="integration" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <breakpoint enabled="true" type="java-exception">
+          <properties class="java.lang.ArrayIndexOutOfBoundsException" package="java.lang" />
+          <option name="timeStamp" value="1" />
+        </breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: src/main/java/com/example/watch_it/Admin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.io.*;\r\nimport java.time.Month;\r\nimport java.time.Period;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.time.LocalDate;\r\nimport java.util.Map;\r\n\r\npublic class Admin {\r\n    private String username;\r\n    private int password;\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public int getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(int password) {\r\n        this.password = password;\r\n    }\r\n\r\n    //counters gonna be pairs ,key for the enum class value for repentance -- javafx???\r\n    public static int basicPlanCounter;\r\n    public static int standardPlanCounter;\r\n    public static int premiumPlanCounter;\r\n    private  static final int MONTHSNUMBER = 12;\r\n    static final short PLANINDEX = 6;\r\n    static final short USERNAMEINDEX = 1;\r\n    static final short TYPEINDEX = 0;\r\n    static final short PASSWORDINDEX = 2;\r\n    static final short FIRSTNAMEINDEX = 4;\r\n    static final short LASTNAMEINDEX = 5;\r\n    static final short EMAILINDEX = 7;\r\n    static final short IDINDEX = 3;\r\n    private static short STARTDATEINDEX = 8;\r\n\r\n    public static ArrayList<String> movies = new ArrayList<String>();\r\n    public static ArrayList<String> directors = new ArrayList<String>();\r\n    public static ArrayList<String> casts = new ArrayList<String>();\r\n    public static ArrayList<String> admins = new ArrayList<String>();\r\n    public static ArrayList<String> users = new ArrayList<String>();\r\n    public static ArrayList<String> topRatedMovies;\r\n\r\n    public static void readFile(File file) {\r\n        ArrayList<String> arrayList = new ArrayList<String>();\r\n        try {\r\n            String line = \"\";\r\n            BufferedReader b = new BufferedReader(new FileReader(file));\r\n            while ((line = b.readLine()) != null) {\r\n                String [] row = line.split(\",\");\r\n                if(row[TYPEINDEX].equals(\"user\"))\r\n                    users.add(line);\r\n                else if (row[TYPEINDEX].equals(\"cast\"))\r\n                    casts.add(line);\r\n                else if(row[TYPEINDEX].equals(\"director\"))\r\n                    directors.add(line);\r\n                else\r\n                    admins.add(line);\r\n            }\r\n            b.close();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    public static void readMovieOneLine(File file) {\r\n        ArrayList<String> arrayList = new ArrayList<String>();\r\n        try {\r\n            String line = \"\";\r\n            BufferedReader b = new BufferedReader(new FileReader(file));\r\n            while ((line = b.readLine()) != null) {\r\n                movies.add(line);\r\n            }\r\n            b.close();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    public static void writeOnFile(File file){\r\n        try {\r\n            BufferedWriter b = new BufferedWriter(new FileWriter(file));\r\n            for(String index:users){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:movies){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:casts){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:directors){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:admins){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            b.close();\r\n        }\r\n        catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    //if the record exists in database >> gonna return the whole record[don't forget to split it]\r\n    //otherwise gonna return null [make sure to check before dealing with return val].\r\n\r\n    //returned string isn't splitted\r\n    public static String existsInFile(ArrayList<String> arrayList, String username){\r\n        boolean exist = false;\r\n        String[] eachLine;\r\n        for (String index: arrayList){\r\n            eachLine = index.split(\",\");\r\n            if(eachLine[USERNAMEINDEX].equals(username)){\r\n                return index;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    public static boolean existsInFile(String username){;\r\n        String[] eachLine;\r\n        for (String index: users){\r\n            eachLine = index.split(\",\");\r\n            if(eachLine[USERNAMEINDEX].equals(username)){\r\n                return  true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //record to be deleted is not splitted\r\n    public static void deleteOneRecord(ArrayList<String> arrayList, String record){\r\n        arrayList.remove(record);\r\n    }\r\n    public static void changeCell(ArrayList<String> arrayList, String username, String oldCell, String newCell){\r\n        String recuiredLine = existsInFile(arrayList, username);\r\n        if(recuiredLine != null) {\r\n            String[] row = recuiredLine.split(\",\");\r\n            try {\r\n                for (int index = 0; index < row.length; index++) {\r\n                    if (row[index].equals(username))\r\n                        row[index] = newCell;\r\n                }\r\n            }catch (ArrayIndexOutOfBoundsException e){\r\n            }\r\n            arrayList.set(arrayList.indexOf(recuiredLine), String.join(\",\", row));\r\n        }\r\n    }\r\n    //enum ----------------\r\n    public static String getSpecificCellForUser(String type, String username, int index){\r\n        if(type.equals(\"user\")){\r\n            String wantedRecord = existsInFile(users, username);\r\n            String []row = wantedRecord.split(\",\");\r\n            return row[index];\r\n        }\r\n        else if(type.equals(\"admin\")){\r\n\r\n        }\r\n        else if(type.equals(\"cast\")){\r\n\r\n        }\r\n        else if (type.equals(\"director\")) {\r\n\r\n        }\r\n        else if (type.equals(\"movie\")) {\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //working just fine ^^^\r\n    static Subscription.Plans getMostSubscripedPlan(){\r\n        Subscription.Plans plan = null;\r\n        HashMap<Integer,Subscription.Plans> map = new HashMap<>();\r\n\r\n        map.put(basicPlanCounter,Subscription.Plans.BASIC);\r\n        map.put(standardPlanCounter,Subscription.Plans.STANDARD);\r\n        map.put(premiumPlanCounter,Subscription.Plans.PREMIUM);\r\n\r\n        int max = Math.max(standardPlanCounter,Math.max(basicPlanCounter,premiumPlanCounter));\r\n\r\n        plan = map.get(max);\r\n\r\n        return plan;\r\n    }\r\n    static void getUsersInEachPlan(){\r\n        basicPlanCounter = 0;\r\n        standardPlanCounter = 0;\r\n        premiumPlanCounter = 0;\r\n        for (String index: users){\r\n            String []line = index.split(\",\");\r\n            HashMap<Integer,Subscription.Plans> map = new HashMap<>();\r\n            if(line[PLANINDEX].equals(\"basic\"))\r\n                basicPlanCounter++;\r\n            else if (line[PLANINDEX].equals(\"standard\"))\r\n                standardPlanCounter++;\r\n            else\r\n                premiumPlanCounter++;\r\n        }\r\n    }\r\n\r\n    //assuming all dates are valid and users still subscribed.\r\n    public static int getMonth(Month month){\r\n        return switch (month) {\r\n            case JANUARY -> 1;\r\n            case FEBRUARY -> 2;\r\n            case MARCH -> 3;\r\n            case APRIL -> 4;\r\n            case MAY -> 5;\r\n            case JUNE -> 6;\r\n            case JULY -> 7;\r\n            case AUGUST -> 8;\r\n            case SEPTEMBER -> 9;\r\n            case OCTOBER -> 10;\r\n            case NOVEMBER -> 11;\r\n            case DECEMBER -> 12;\r\n        };\r\n    }\r\n    public static Month getMonth(int monthNumber){\r\n        return switch (monthNumber) {\r\n            case 1 -> Month.JANUARY;\r\n            case 2 -> Month.FEBRUARY;\r\n            case 3 -> Month.MARCH;\r\n            case 4 -> Month.APRIL;\r\n            case 5 -> Month.MAY;\r\n            case 6 -> Month.JUNE;\r\n            case 7 -> Month.JULY;\r\n            case 8 -> Month.AUGUST;\r\n            case 9 -> Month.SEPTEMBER;\r\n            case 10 -> Month.OCTOBER;\r\n            case 11 -> Month.NOVEMBER;\r\n            case 12 -> Month.DECEMBER;\r\n            default -> null;\r\n        };\r\n    }\r\n    static Month monthWithMostRevenue(){\r\n         Month month = null;\r\n         int [] monthsRevenue = new int[MONTHSNUMBER];\r\n         for(String user: users){\r\n             String[] data = user.split(\",\");\r\n             String plan = data[PLANINDEX];\r\n             LocalDate startDate = LocalDate.parse(data[STARTDATEINDEX]);\r\n             LocalDate todaysDate = LocalDate.now();\r\n             int startMonth = getMonth(startDate.getMonth());\r\n             int todaysmonth = getMonth(todaysDate.getMonth());\r\n             int differenceMonths = todaysmonth - startMonth;\r\n             if(startDate.getYear() != todaysDate.getYear())\r\n                 differenceMonths = (MONTHSNUMBER - startMonth) + todaysmonth;\r\n\r\n             while(differenceMonths >= 0){\r\n                 if(plan.equals(\"basic\")){\r\n                     monthsRevenue[(startMonth + differenceMonths)] += 10;\r\n                 }\r\n                 else if (plan.equals(\"standard\")) {\r\n                     monthsRevenue[(startMonth + differenceMonths)] += 20;\r\n                 }\r\n                 else{\r\n                     monthsRevenue[(startMonth + differenceMonths)] += 30;\r\n                 }\r\n                 differenceMonths--;\r\n             }\r\n         }\r\n         int []check = new int[MONTHSNUMBER];\r\n         System.arraycopy(monthsRevenue, 0, check, 0, MONTHSNUMBER);\r\n         Arrays.sort(check);\r\n         int recuiredMonth = 0;\r\n         for(int i=0; i<MONTHSNUMBER; i++){\r\n            if(monthsRevenue[i] == check[1])\r\n             {\r\n                 recuiredMonth = i + 1;\r\n                 break;\r\n             }\r\n         }\r\n         return getMonth(recuiredMonth);\r\n    }\r\n    static void getUserMovieLists(String user, ArrayList<String> watched_movies, ArrayList<String> toBeWatched_movies){\r\n        boolean toBeWatched = false;\r\n        boolean watched = false;\r\n        int watchedCounter = -1;\r\n        int toBeWatchedCounter = 0;\r\n        String[] eachLine = user.split(\",\");\r\n        for (String data:eachLine) {\r\n            if(data.equals(\"watched\"))\r\n                watched = true;\r\n            if(data.equals(\"to be watched\")) {\r\n                watched = false;\r\n                toBeWatched = true;\r\n            }\r\n            if(watched) {\r\n                watchedCounter++;\r\n                if(watchedCounter != 0 && watchedCounter%2!=0)\r\n                    watched_movies.add(data);\r\n            }\r\n            if(toBeWatched && toBeWatchedCounter == 1)\r\n                toBeWatched_movies.add(data);\r\n            if (toBeWatched && toBeWatchedCounter == 0)\r\n                toBeWatchedCounter = 1;\r\n        }\r\n    }\r\n    //as objects\r\n    static void getUserMovieLists(String userData,User user,ArrayList<UserWatchRecord> watched_movies, ArrayList<Movie> toBeWatched_movies){\r\n        if(userData != null)\r\n        {\r\n            boolean toBeWatched = false;\r\n            boolean watched = false;\r\n            int watchedCounter = -1;\r\n            int toBeWatchedCounter = 0;\r\n            Movie movie_to_watch = new Movie();\r\n            String[] eachLine = userData.split(\",\");\r\n            for (int i=0; i<eachLine.length; i++) {\r\n                if (eachLine[i].equals(\"watched\"))\r\n                    watched = true;\r\n                if (eachLine[i].equals(\"to be watched\")) {\r\n                    watched = false;\r\n                    toBeWatched = true;\r\n                }\r\n                if (watched){\r\n                    watchedCounter++;\r\n                    if(watchedCounter % 2 != 0 )\r\n                    {\r\n                        for (String oneMovie : movies) {\r\n                            String[] arr = oneMovie.split(\",\");\r\n                            if (arr[1].equals(eachLine[i]))\r\n                                watched_movies.add(getWatchedMovie(arr[i], Integer.parseInt(arr[i+1])));\r\n                        }\r\n                    }\r\n                }\r\n                if (toBeWatched && toBeWatchedCounter == 1)\r\n                    toBeWatched_movies.add(getOneMovie(eachLine[i]));\r\n                if (toBeWatched && toBeWatchedCounter == 0)\r\n                    toBeWatchedCounter = 1;\r\n            }\r\n        }\r\n        user.Watched_Movies.addAll(watched_movies);\r\n        user.Movies_For_Later.addAll(toBeWatched_movies);\r\n    }\r\n    static UserWatchRecord getWatchedMovie(String title, int rate){\r\n        UserWatchRecord movie = new UserWatchRecord();\r\n        for (String oneMovie: movies){\r\n            String []arr = oneMovie.split(\",\");\r\n            if(arr[1].equals(title))\r\n            {\r\n                movie.movie.setTitle(arr[1]);\r\n                movie.movie.setId(Integer.parseInt(arr[2]));\r\n                movie.movie.setRelease_date(LocalDate.parse(arr[3]));\r\n                // movie.setDuration(Integer.parseInt(arr[4]));\r\n                //director,case lazm hykono strings msh obj.\r\n                //movie.setDirector(arr[7]);\r\n                movie.movie.setBudget(arr[11]);\r\n                movie.movie.setCountry(arr[10]);\r\n                movie.setRating(rate);\r\n                //movie.setDirector(getDirector());\r\n            }\r\n        }\r\n        return movie;\r\n    }\r\n    static void getAllMovies(){\r\n        ArrayList<Movie> arrayList = new ArrayList<Movie>();\r\n        for(String oneMovie: movies){\r\n            String[] arr = oneMovie.split(\",\");\r\n            String name = arr[1] + \" \" + arr[2];\r\n            arrayList.add(getOneMovie(name));\r\n        }\r\n        Movie.allmovies.addAll(arrayList);\r\n        Movie.getDiffGenres();\r\n    }\r\n    static Movie getOneMovie (String title){\r\n        Movie movie = new Movie();\r\n        for (String oneMovie : movies) {\r\n            String[] arr = oneMovie.split(\",\");\r\n            if (arr[1].equals(title)) {\r\n                movie.setTitle(arr[1]);\r\n                movie.setId(Integer.parseInt(arr[0]));\r\n                movie.setRelease_date(LocalDate.parse(arr[3]));\r\n                movie.setDescription(arr[2]);\r\n                movie.setRunning_time(arr[4]);\r\n                //director,cast ykono strings msh obj ,wel class bta3hom hykon el movie string msh obj.\r\n                movie.setBudget(arr[11]);\r\n                movie.setCountry(arr[8]);\r\n                movie.setLanguage(arr[6]);\r\n                movie.setImdb_score(Integer.parseInt(arr[7]));\r\n                movie.setRevenue(arr[10]);\r\n                movie.setPoster_path(arr[11]);\r\n                movie.setDirector(getDirector(arr[5]));\r\n                ArrayList<String> cast = new ArrayList<String>();\r\n                ArrayList<String> genres = new ArrayList<String>();\r\n                movie.setGenre(genres);\r\n                castAndGenres(oneMovie,cast,genres);\r\n                ArrayList<Cast> cast_obj = new ArrayList<Cast>();\r\n                for(String casts: cast){\r\n                    cast_obj.add(getCast(casts));\r\n                }\r\n            }\r\n        }\r\n        return movie;\r\n    }\r\n    public static void castAndGenres(String Movie, ArrayList<String> cast_, ArrayList<String> genres){\r\n        //cast first then genres\r\n        boolean cast = false;\r\n        boolean genre = false;\r\n        int castCounter = -1;\r\n        int genreCounter = -1;\r\n        String[] eachLine = Movie.split(\",\");\r\n        for (String data:eachLine) {\r\n            if(data.equals(\"cast\"))\r\n                cast = true;\r\n            else if(data.equals(\"genres\")) {\r\n                cast = false;\r\n                genre = true;\r\n            }\r\n            if(cast) {\r\n                castCounter++;\r\n                if(castCounter != 0)\r\n                    cast_.add(data);\r\n            }\r\n            else if(genre) {\r\n                genreCounter ++;\r\n                if(genreCounter != 0)\r\n                    genres.add(data);\r\n            }\r\n        }\r\n    }\r\n    static Director getDirector(String directorName){\r\n        Director director = new Director();\r\n        String[] name = directorName.split(\" \");\r\n        for (String oneDirector:directors){\r\n            String[] data = oneDirector.split(\",\");\r\n            if(data[1].equals(name[0]) && data[2].equals(name[1])){\r\n                director.setFirst_Name(data[1]);\r\n                director.setSecond_Name(data[2]);\r\n                director.setAge(Integer.parseInt(data[3]));\r\n                director.setGender(data[4]);\r\n                director.setNationality(data[5]);\r\n                int i = 0;\r\n                boolean foundMovies = false;\r\n                ArrayList<String> arrayList = new ArrayList<String>();\r\n                for (String cell: data){\r\n                    if(cell.equals(\"movies\")){\r\n                        i++;\r\n                        foundMovies = true;\r\n                    }\r\n                    if( i != 0 && foundMovies){\r\n                        arrayList.add(cell);\r\n                    }\r\n                }\r\n                director.setMovies(arrayList);\r\n            }\r\n        }\r\n        return director;\r\n    }\r\n    static ArrayList<Director> getAllDirectors(){\r\n        ArrayList<Director> arrayList = new ArrayList<Director>();\r\n        for(String oneDirector: directors){\r\n            String[] arr = oneDirector.split(\",\");\r\n            arrayList.add(getDirector(arr[USERNAMEINDEX]));\r\n        }\r\n        return arrayList;\r\n    }\r\n    static Cast getCast(String name){\r\n        //ArrayList<Cast> cast = new ArrayList<Cast>();\r\n        Cast eachCast = new Cast();\r\n        String[] castName = name.split(\" \");\r\n        for (String oneCast: casts){\r\n            String[] data = oneCast.split(\",\");\r\n            if(data[1].equals(castName[0]) && data[2].equals(castName[1])){\r\n                eachCast.setFirst_Name(data[1]);\r\n                eachCast.setSecond_Name(data[2]);\r\n                eachCast.setGender(data[4]);\r\n                eachCast.setAge(Integer.parseInt(data[3]));\r\n                eachCast.setNationality(data[5]);\r\n                int i = 0;\r\n                boolean foundMovies = false;\r\n                ArrayList<String> arrayList = new ArrayList<String>();\r\n                for (String cell: data){\r\n                    if(cell.equals(\"movies\")){\r\n                        i++;\r\n                        foundMovies = true;\r\n                    }\r\n                    if( i != 0 && foundMovies){\r\n                        arrayList.add(cell);\r\n                    }\r\n                }\r\n                eachCast.setMovies(arrayList);\r\n            }\r\n        }\r\n        return eachCast;\r\n    }\r\n    static ArrayList<Cast> getAllCast(){\r\n        ArrayList<Cast> allcast = new ArrayList<Cast>();\r\n        for(String oneCast: casts){\r\n            String[] arr = oneCast.split(\",\");\r\n            allcast.add(getCast(arr[USERNAMEINDEX]));\r\n        }\r\n        return allcast;\r\n    }\r\n    //name on getMovies is full name >> first and last combined.\r\n    static ArrayList<String> getMovies(String name, ArrayList<String> allMovies){\r\n    ArrayList<String> requiredMovies = new ArrayList<String>();\r\n    for (String data: allMovies){\r\n        String []arr = data.split(\",\");\r\n        for(String index: arr)\r\n            //if cast/director is on this specific movie, then i'm gonna add name of the movie to the list.\r\n            if(index.equals(name))\r\n                requiredMovies.add(arr[1]);\r\n    }\r\n    return requiredMovies;\r\n}\r\n    static ArrayList<User> getUsers(){\r\n        ArrayList<User> userArrayList = new ArrayList<User>();\r\n        for(int i=0; i<users.size(); i++){\r\n            String[] data =users.get(i).split(\",\");\r\n            User user = new User(data[USERNAMEINDEX], data[LASTNAMEINDEX],data[FIRSTNAMEINDEX],data[EMAILINDEX],data[PASSWORDINDEX] );\r\n            userArrayList.add(user);\r\n        }\r\n        getUsersInEachPlan();\r\n        return userArrayList;\r\n    }\r\n    public static void readMovies(File file)  {\r\n        String line = \"\";\r\n        String[] firstLine = new String[20];\r\n        String[] wholeLine = new String[20];\r\n        try{\r\n            int i = 0;\r\n            BufferedReader bufferedReader = new BufferedReader(new FileReader(file));\r\n            while((line = bufferedReader.readLine()) != null){\r\n                if(i % 2 == 0){\r\n                    firstLine = line.split(\",\");\r\n                }\r\n                else {\r\n                    wholeLine = line.split(\",\");\r\n                    //System.arraycopy(wholeLine ,0 ,firstLine ,5,16);\r\n                    firstLine = Arrays.copyOf(firstLine, firstLine.length + wholeLine.length);\r\n                    int g = 0 , k = 6;\r\n                    while(k < firstLine.length && g< wholeLine.length){\r\n                        System.out.println(g);\r\n                        firstLine[k] = wholeLine[g];\r\n                        ++g;\r\n                        ++k;\r\n                    }\r\n                    String eachLine =String.join(\",\", firstLine);\r\n                    movies.add(eachLine);\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n        catch (IOException ioException){\r\n            throw new RuntimeException(ioException);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Admin.java b/src/main/java/com/example/watch_it/Admin.java
--- a/src/main/java/com/example/watch_it/Admin.java	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/src/main/java/com/example/watch_it/Admin.java	(date 1702422024758)
@@ -369,11 +369,43 @@
         ArrayList<Movie> arrayList = new ArrayList<Movie>();
         for(String oneMovie: movies){
             String[] arr = oneMovie.split(",");
-            String name = arr[1] + " " + arr[2];
+            System.out.println(arr[1]);
+            String name = arr[1];
             arrayList.add(getOneMovie(name));
         }
         Movie.allmovies.addAll(arrayList);
-        Movie.getDiffGenres();
+        //Movie.getDiffGenres();
+    }
+    static ArrayList<Movie> getMoviesObjs(){
+        ArrayList<Movie> arrayList = new ArrayList<Movie>();
+        Movie movie = new Movie();
+        for(String s: movies){
+            arrayList.add(getOneMovie_(s));
+        }
+        return arrayList;
+    }
+    static Movie getOneMovie_(String movieString){
+        Movie movie = new Movie();
+        String[] arr = movieString.split(",");
+        movie.setTitle(arr[1]);
+        movie.setId(Integer.parseInt(arr[0]));
+        movie.setRelease_date(LocalDate.parse(arr[3]));
+        movie.setDescription(arr[2]);
+        movie.setRunning_time(arr[4]);
+        movie.setBudget(arr[9]);
+        movie.setCountry(arr[8]);
+        movie.setLanguage(arr[6]);
+        movie.setImdb_score(Integer.parseInt(arr[7]));
+        movie.setRevenue(arr[10]);
+        movie.setPoster_path(arr[11]);
+        movie.setDirector(getDirector(arr[5]));
+        movie.setDirectorName(arr[5]);
+        ArrayList<String> cast = new ArrayList<String>();
+        ArrayList<String> genres = new ArrayList<String>();
+        castAndGenres(movieString,cast,genres);
+        movie.setCastNames(cast);
+        movie.setGenre(genres);
+        return movie;
     }
     static Movie getOneMovie (String title){
         Movie movie = new Movie();
@@ -385,8 +417,7 @@
                 movie.setRelease_date(LocalDate.parse(arr[3]));
                 movie.setDescription(arr[2]);
                 movie.setRunning_time(arr[4]);
-                //director,cast ykono strings msh obj ,wel class bta3hom hykon el movie string msh obj.
-                movie.setBudget(arr[11]);
+                movie.setBudget(arr[9]);
                 movie.setCountry(arr[8]);
                 movie.setLanguage(arr[6]);
                 movie.setImdb_score(Integer.parseInt(arr[7]));
@@ -473,7 +504,7 @@
         String[] castName = name.split(" ");
         for (String oneCast: casts){
             String[] data = oneCast.split(",");
-            if(data[1].equals(castName[0]) && data[2].equals(castName[1])){
+            if(data[1].equals(castName[1]) && data[2].equals(castName[2])){
                 eachCast.setFirst_Name(data[1]);
                 eachCast.setSecond_Name(data[2]);
                 eachCast.setGender(data[4]);
Index: src/main/java/com/example/watch_it/Director.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\n\r\npublic class Director extends Artist {\r\n    static ArrayList<Director> allDirectors = new ArrayList<Director>();\r\n    public void Read_File(ArrayList<String>s,ArrayList<Director> directors){\r\n        for (String i:s) {\r\n            String[]row=i.split(\",\");\r\n            Director d=new Director();\r\n            d.setFirst_Name(row[0]);\r\n            d.setSecond_Name(row[1]);\r\n            d.setAge(Integer.parseInt(row[2]));\r\n            d.setGender(row[3]);\r\n            d.setNationality(row[4]);\r\n            for(int j=5;j<row.length;j++){\r\n                d.Movies.add(row[j]);\r\n            }\r\n            directors.add(d);\r\n        }\r\n    }\r\n\r\n    public void Add_Director( String first_name,String second_name,int age,String gender,String Nationality,int num,ArrayList<String> movie){\r\n        Director d=new Director();\r\n        d.setFirst_Name(first_name);\r\n        d.setSecond_Name(second_name);\r\n        d.setAge(age);\r\n        d.setGender(gender);\r\n        d.setNationality(Nationality);\r\n        d.setMovies(movie);\r\n       // Admin.directors.add(d);\r\n    }\r\n    public void Update_Director(int index,String movie){\r\n\r\n        Admin.directors_obj.get(index).Movies.add(movie);\r\n    }\r\n\r\n    public static Director  Search_director(String first_name,String second_name) {\r\n        for (Director m : Admin.directors_obj) {\r\n\r\n            if (m.getFirst_Name().equals(first_name) && m.getSecond_Name().equals(second_name)) {\r\n\r\n                return m;\r\n            }\r\n\r\n        }\r\n        return null;\r\n    }\r\n    public int  Check(String first_name,String second_name) {\r\n        for (int i=0;i<Admin.directors_obj.size();i++) {\r\n\r\n            if (Admin.directors_obj.get(i).getFirst_Name().equals(first_name) && Admin.directors_obj.get(i).getSecond_Name().equals(second_name)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    public void Delete(String first_name,String second_name)\r\n    {\r\n        for (Director d:Admin.directors_obj) {\r\n            if(d.getFirst_Name().equals(first_name)&&d.getSecond_Name().equals(second_name))\r\n                Admin.directors_obj.remove(d);\r\n            break;\r\n        }\r\n    }\r\n    public void change_arraydirectr(ArrayList<String>movies,ArrayList<String>arrayList)\r\n    {\r\n        String line=null;\r\n        for(Director d:Admin.directors_obj)\r\n        {\r\n            String []row=new String[5+movies.size()];\r\n            String s=String.valueOf(d.getAge());\r\n            int i=5;\r\n            row[0]=d.getFirst_Name();\r\n            row[1]=d.getSecond_Name();\r\n            row[2]=s;\r\n            row[3]=d.getGender();\r\n            row[4]=d.getNationality();\r\n            for(String m:movies)\r\n            {\r\n                row[i]=m;\r\n                i++;\r\n            }\r\n            line=String.join(\",\",row);\r\n            arrayList.add(line);\r\n\r\n        }\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Director.java b/src/main/java/com/example/watch_it/Director.java
--- a/src/main/java/com/example/watch_it/Director.java	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/src/main/java/com/example/watch_it/Director.java	(date 1702381175518)
@@ -33,11 +33,11 @@
     }
     public void Update_Director(int index,String movie){
 
-        Admin.directors_obj.get(index).Movies.add(movie);
+        allDirectors.get(index).Movies.add(movie);
     }
 
     public static Director  Search_director(String first_name,String second_name) {
-        for (Director m : Admin.directors_obj) {
+        for (Director m : allDirectors) {
 
             if (m.getFirst_Name().equals(first_name) && m.getSecond_Name().equals(second_name)) {
 
@@ -48,9 +48,9 @@
         return null;
     }
     public int  Check(String first_name,String second_name) {
-        for (int i=0;i<Admin.directors_obj.size();i++) {
+        for (int i=0;i<allDirectors.size();i++) {
 
-            if (Admin.directors_obj.get(i).getFirst_Name().equals(first_name) && Admin.directors_obj.get(i).getSecond_Name().equals(second_name)) {
+            if (allDirectors.get(i).getFirst_Name().equals(first_name) && allDirectors.get(i).getSecond_Name().equals(second_name)) {
                 return i;
             }
         }
@@ -58,16 +58,16 @@
     }
     public void Delete(String first_name,String second_name)
     {
-        for (Director d:Admin.directors_obj) {
+        for (Director d:allDirectors) {
             if(d.getFirst_Name().equals(first_name)&&d.getSecond_Name().equals(second_name))
-                Admin.directors_obj.remove(d);
+                allDirectors.remove(d);
             break;
         }
     }
     public void change_arraydirectr(ArrayList<String>movies,ArrayList<String>arrayList)
     {
         String line=null;
-        for(Director d:Admin.directors_obj)
+        for(Director d:allDirectors)
         {
             String []row=new String[5+movies.size()];
             String s=String.valueOf(d.getAge());
Index: src/main/java/com/example/watch_it/AllMoviesController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\npackage com.example.watch_it;\r\n\r\nimport javafx.application.Platform;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.KeyEvent;\r\nimport javafx.scene.layout.*;\r\nimport javafx.stage.Stage;\r\n\r\nimport javafx.fxml.FXML;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class AllMoviesController {\r\n\r\n    @FXML\r\n    private VBox leftCol;\r\n    @FXML\r\n    private  VBox rightCol;\r\n    @FXML\r\n    private  VBox middleCol1;\r\n    @FXML\r\n    private  VBox middleCol2;\r\n    @FXML\r\n    private BorderPane mainPane;\r\n    @FXML\r\n    private ScrollPane mainScroll;\r\n    @FXML\r\n    TextField searchField;\r\n    @FXML\r\n    private Button Back;\r\n    private Stage stage;\r\n    private Scene scene;\r\n    private Parent root;\r\n\r\n\r\n\r\n\r\n    private ArrayList<Movie> Movies = new ArrayList<Movie>();\r\n\r\n    private void getData() {\r\n        Movies.clear();\r\n        ArrayList<Movie> mov = new ArrayList<Movie>();\r\n\r\n        Movie movie3 = new Movie();\r\n        movie3.setTitle(\"Joker\");\r\n        movie3.setPoster_path(\"movies/joker.jpeg\");\r\n        Movie movie4 = new Movie();\r\n        movie4.setTitle(\"Ready Or Not\");\r\n        movie4.setPoster_path(\"movies/ready or not.jpeg\");\r\n        mov.add(movie3);\r\n        mov.add(movie4);\r\n        mov.add(movie3);\r\n        mov.add(movie4);\r\n        mov.add(movie3);\r\n        mov.add(movie4);\r\n        mov.add(movie3);\r\n        mov.add(movie4);\r\n        mov.add(movie3);\r\n        mov.add(movie4);\r\n\r\n        Movies.addAll(mov);\r\n    }\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        getData();\r\n        for (int i=0 ; i<Movies.size(); i++){\r\n            addMovies(Movies.get(i), i);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void toAddMovies(ActionEvent event) throws IOException {\r\n\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"add-movies.fxml\"));\r\n        mainPane.setCenter(fxml);\r\n    }\r\n\r\n    @FXML void toMovies(ActionEvent event){\r\n        switchPane(mainScroll);\r\n    }\r\n\r\n    @FXML void toAllUsers(ActionEvent event) throws IOException {\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"all-users.fxml\"));\r\n        switchPane((ScrollPane) fxml);\r\n\r\n    }\r\n    @FXML void toAddUser(ActionEvent event) throws IOException {\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"add-users.fxml\"));\r\n        switchPane((ScrollPane) fxml);\r\n    }\r\n    @FXML\r\n    void toPlans(ActionEvent event)throws IOException{\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"Plans.fxml\"));\r\n        switchPane((ScrollPane) fxml);\r\n    }\r\n    @FXML\r\n    public void backScenes(ActionEvent event) throws IOException {\r\n        root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(\"first-page.fxml\")));\r\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    @FXML\r\n    private void onMouseEntered(){\r\n        Back.setOnMouseEntered(event -> Back.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n    @FXML\r\n    private void onMouseExit(){\r\n        Back.setOnMouseExited(event -> Back.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n\r\n    private void addMovies(Movie movie, int i){\r\n        VBox movieContainer = new VBox(10);\r\n        movieContainer.setStyle(\"-fx-background-radius:40;\");\r\n\r\n        Button movieName = new Button(movie.getTitle());\r\n        movieName.setStyle(\"-fx-background-color: transparent; -fx-color:white; -fx-font-color:white; -fx-text-fill: #C2C2C2; -fx-background-radius:50;-fx-font-size: 20;\\n\" +\r\n                \"    -fx-text-fill: #C2C2C2;\");\r\n\r\n        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitWidth(260);\r\n        imageView.setFitHeight(320);\r\n\r\n        //movieContainer.setStyle(\"-fx-background-color:#262626;  -fx-background-radius: 20;\");\r\n        movieContainer.setPrefWidth(320);\r\n        movieContainer.setAlignment(Pos.CENTER);\r\n        movieContainer.getChildren().addAll(imageView, movieName);\r\n        movieContainer.setPadding(new Insets(10 ,0 , 10 , 5));\r\n\r\n        //VBox.setMargin(movieContainer,new Insets(20 ,5 , 0 , 5));\r\n        int check = i %4;\r\n        if( check == 0)\r\n            leftCol.getChildren().addAll(movieContainer);\r\n        else if (check == 1) {\r\n            middleCol1.getChildren().addAll(movieContainer);\r\n        }\r\n        else if (check == 2) {\r\n            middleCol2.getChildren().addAll(movieContainer);\r\n        }\r\n        else\r\n            rightCol.getChildren().addAll(movieContainer);\r\n    }\r\n\r\n    private void switchPane(ScrollPane scrollPane){\r\n        mainPane.setCenter(scrollPane);\r\n    }\r\n    @FXML\r\n    private void Search(){\r\n\r\n        String name = searchField.getText();\r\n        leftCol.getChildren().clear();\r\n        middleCol1.getChildren().clear();\r\n        middleCol2.getChildren().clear();\r\n        rightCol.getChildren().clear();\r\n        for (Movie movie : Movies) {\r\n            if (name.equalsIgnoreCase(movie.getTitle())) {\r\n                addMovies(movie, 0);\r\n            }\r\n        }\r\n        if (name.isEmpty()) {\r\n            initialize();\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/AllMoviesController.java b/src/main/java/com/example/watch_it/AllMoviesController.java
--- a/src/main/java/com/example/watch_it/AllMoviesController.java	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/src/main/java/com/example/watch_it/AllMoviesController.java	(date 1702419609745)
@@ -51,36 +51,11 @@
 
 
     private ArrayList<Movie> Movies = new ArrayList<Movie>();
-
-    private void getData() {
-        Movies.clear();
-        ArrayList<Movie> mov = new ArrayList<Movie>();
-
-        Movie movie3 = new Movie();
-        movie3.setTitle("Joker");
-        movie3.setPoster_path("movies/joker.jpeg");
-        Movie movie4 = new Movie();
-        movie4.setTitle("Ready Or Not");
-        movie4.setPoster_path("movies/ready or not.jpeg");
-        mov.add(movie3);
-        mov.add(movie4);
-        mov.add(movie3);
-        mov.add(movie4);
-        mov.add(movie3);
-        mov.add(movie4);
-        mov.add(movie3);
-        mov.add(movie4);
-        mov.add(movie3);
-        mov.add(movie4);
-
-        Movies.addAll(mov);
-    }
-
     @FXML
     public void initialize() {
-        getData();
-        for (int i=0 ; i<Movies.size(); i++){
-            addMovies(Movies.get(i), i);
+        //getData();
+        for (int i=0 ; i<Movie.allmovies.size(); i++){
+            addMovies(Movie.allmovies.get(i), i);
         }
     }
 
Index: src/main/java/com/example/watch_it/Cast.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.time.LocalDate;\r\nimport java.util.Locale;\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\npublic class Cast extends Artist{\r\n    static ArrayList<Cast> allCast = new ArrayList<Cast>();\r\n\r\n    public void Add_Cast(String first_name,String second_name,int age,String gender,String Nationality,ArrayList<String> movie){\r\n        Cast c=new Cast();\r\n        c.setFirst_Name(first_name);\r\n        c.setSecond_Name(second_name);\r\n        c.setAge(age);\r\n        c.setGender(gender);\r\n        c.setNationality(Nationality);\r\n        c.setMovies(movie);\r\n//      Admin.cast.add(c); static array from admin class\r\n    }\r\n    public static void Read_file(ArrayList<String> s){\r\n        for (String i:s) {\r\n            String[]row=i.split(\",\");\r\n            Cast c=new Cast();\r\n            c.setFirst_Name(row[0]);\r\n            c.setSecond_Name(row[1]);\r\n            c.setAge(Integer.parseInt(row[2]));\r\n            c.setGender(row[3]);\r\n            c.setNationality(row[4]);\r\n            for(int j=5;j<row.length;j++){\r\n                c.Movies.add(row[j]);\r\n            }\r\n//          Admin.cast.add(c);\r\n        }\r\n\r\n    }\r\n    public void Update_cast( int index,int num,String movie){\r\n\r\n//        Admin.cast.get(index).Movies.add(movie);\r\n    }\r\n    public static Cast  Search_Cast(String first_name,String second_name) {\r\n        for (Cast m : Admin.casts_obj) {\r\n\r\n            if (m.getFirst_Name().equals(first_name) && m.getSecond_Name().equals(second_name)) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    public int  Check(String first_name,String second_name) {\r\n        for (int i=0;i<Admin.casts_obj.size();i++) {\r\n\r\n            if (Admin.casts_obj.get(i).getFirst_Name().equals(first_name) && Admin.casts_obj.get(i).getSecond_Name().equals(second_name)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    public void Delete(String first_name,String second_name)\r\n    {\r\n        for (Cast c:Admin.casts_obj) {\r\n            if(c.getFirst_Name().equals(first_name)&&c.getSecond_Name().equals(second_name))\r\n                Admin.casts_obj.remove(c);\r\n            break;\r\n        }\r\n    }\r\n    public void change_arraycast(ArrayList<String>movies,ArrayList<String>arrayList)\r\n    {\r\n        String line=null;\r\n        for(Cast c:Admin.casts_obj)\r\n        {\r\n            String []row=new String[5+movies.size()];\r\n            String s=String.valueOf(c.getAge());\r\n            int i=5;\r\n            row[0]=c.getFirst_Name();\r\n            row[1]=c.getSecond_Name();\r\n            row[2]=s;\r\n            row[3]=c.getGender();\r\n            row[4]=c.getNationality();\r\n            for(String m:movies)\r\n            {\r\n                row[i]=m;\r\n                i++;\r\n            }\r\n            line=String.join(\",\",row);\r\n            arrayList.add(line);\r\n            System.out.println(line);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Cast.java b/src/main/java/com/example/watch_it/Cast.java
--- a/src/main/java/com/example/watch_it/Cast.java	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/src/main/java/com/example/watch_it/Cast.java	(date 1702381175504)
@@ -37,7 +37,7 @@
 //        Admin.cast.get(index).Movies.add(movie);
     }
     public static Cast  Search_Cast(String first_name,String second_name) {
-        for (Cast m : Admin.casts_obj) {
+        for (Cast m : allCast) {
 
             if (m.getFirst_Name().equals(first_name) && m.getSecond_Name().equals(second_name)) {
                 return m;
@@ -46,9 +46,9 @@
         return null;
     }
     public int  Check(String first_name,String second_name) {
-        for (int i=0;i<Admin.casts_obj.size();i++) {
+        for (int i=0;i<allCast.size();i++) {
 
-            if (Admin.casts_obj.get(i).getFirst_Name().equals(first_name) && Admin.casts_obj.get(i).getSecond_Name().equals(second_name)) {
+            if (allCast.get(i).getFirst_Name().equals(first_name) && allCast.get(i).getSecond_Name().equals(second_name)) {
                 return i;
             }
         }
@@ -56,16 +56,16 @@
     }
     public void Delete(String first_name,String second_name)
     {
-        for (Cast c:Admin.casts_obj) {
+        for (Cast c:allCast) {
             if(c.getFirst_Name().equals(first_name)&&c.getSecond_Name().equals(second_name))
-                Admin.casts_obj.remove(c);
+                allCast.remove(c);
             break;
         }
     }
     public void change_arraycast(ArrayList<String>movies,ArrayList<String>arrayList)
     {
         String line=null;
-        for(Cast c:Admin.casts_obj)
+        for(Cast c:allCast)
         {
             String []row=new String[5+movies.size()];
             String s=String.valueOf(c.getAge());
Index: src/main/java/com/example/watch_it/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\npublic class HelloApplication extends Application {\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n        File file = new File(\"data.txt\");\r\n        Admin.readFile(file);\r\n        User.allusers.addAll(Admin.getUsers());\r\n        Cast.allCast.addAll(Admin.getAllCast());\r\n        Director.allDirectors.addAll(Admin.getAllDirectors());\r\n\r\n        File movieFile = new File(\"movies-data.txt\");\r\n        Admin.readMovieOneLine(movieFile);\r\n        Admin.getAllMovies();\r\n\r\n\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"first-page.fxml\"));\r\n        Parent root;\r\n        try {\r\n            root = loader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        First controller = loader.getController();\r\n        controller.setStage(stage);\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(\"Movie\");\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n\r\n        launch();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/HelloApplication.java b/src/main/java/com/example/watch_it/HelloApplication.java
--- a/src/main/java/com/example/watch_it/HelloApplication.java	(revision 72b7fe8c4105adacdcad60639e760ba71cb3d867)
+++ b/src/main/java/com/example/watch_it/HelloApplication.java	(date 1702420681740)
@@ -14,15 +14,10 @@
     public void start(Stage stage) throws IOException {
         File file = new File("data.txt");
         Admin.readFile(file);
-        User.allusers.addAll(Admin.getUsers());
-        Cast.allCast.addAll(Admin.getAllCast());
-        Director.allDirectors.addAll(Admin.getAllDirectors());
-
         File movieFile = new File("movies-data.txt");
         Admin.readMovieOneLine(movieFile);
-        Admin.getAllMovies();
-
-
+        Movie.allmovies.addAll(Admin.getMoviesObjs());
+        Movie.getDiffGenres();
         FXMLLoader loader = new FXMLLoader(getClass().getResource("first-page.fxml"));
         Parent root;
         try {
