Index: src/main/java/com/example/watch_it/MainPageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport javafx.application.Platform;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.input.KeyEvent;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.Pane;\r\nimport javafx.util.Duration;\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.KeyValue;\r\nimport javafx.animation.Timeline;\r\n\r\n\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport javafx.fxml.FXML;\r\n\r\npublic  class MainPageController {\r\n    private Parent root;\r\n    private Scene scene;\r\n    private Stage stage;\r\n    private Timeline autoScrollTimeline;\r\n    private Timeline autoScrollTimeline2;\r\n    private Timeline autoScrollTimeline3;\r\n    @FXML\r\n    private BorderPane mainPane;\r\n    @FXML\r\n    private Label Action;\r\n    @FXML\r\n    private Label Comedy;\r\n    @FXML\r\n    private Label Main;\r\n    @FXML\r\n    private Label Drama;\r\n    @FXML\r\n    private Label Horror;\r\n    @FXML\r\n    private Label All;\r\n    @FXML\r\n    private ImageView profile;\r\n    @FXML\r\n    private Label Recent;\r\n    @FXML\r\n    private Label topMovies;\r\n    @FXML\r\n    private Label TopRated;\r\n    @FXML\r\n    private Label watchRecords;\r\n    @FXML\r\n    private Button Search;\r\n    @FXML\r\n    private ScrollPane Scroll1;\r\n    @FXML\r\n    private ScrollPane Scroll2;\r\n    @FXML\r\n    private ScrollPane Scroll3;\r\n    @FXML\r\n    private Pane AllMovies;\r\n    @FXML\r\n    private MenuButton menuButton;\r\n    public static String menuValue;\r\n    @FXML\r\n    private TextField searchItem;\r\n    private Movie movie;\r\n    @FXML\r\n    private  Label counter;\r\n    private User user;\r\n    public static Movie movie5;\r\n    static int moviePage = 0;\r\n    private final ArrayList<Movie> moviesTop = new ArrayList<>();\r\n    private final ArrayList<Movie> moviesRecent = new ArrayList<>();\r\n    private final ArrayList<Movie> moviesTopRated = new ArrayList<>();\r\n    UserWatchRecord userWatchRecord;\r\n    @FXML\r\n    HBox TopMovies;\r\n    @FXML\r\n    HBox RecentMovies;\r\n    @FXML\r\n    HBox TopRatedMovies;\r\n    @FXML\r\n    private Button Back;\r\n\r\n\r\n\r\n    private void getData() {\r\n        for(Movie movie : Movie.MostViewedMovies(Movie.allmovies)){\r\n            moviesTop.add(movie);\r\n        }\r\n        for(Movie movie:Movie.allmovies)\r\n        {\r\n            moviesRecent.add(movie);\r\n        }\r\n        for(Movie movie:Movie.allmovies)\r\n        {\r\n            moviesTopRated.add(movie);\r\n        }\r\n\r\n    }\r\n\r\n    @FXML\r\n    public  void initialize() {\r\n        getData();\r\n        for (Movie movie : moviesTop) {\r\n            addToGUI(movie);\r\n        }\r\n        for (Movie movie : moviesRecent) {\r\n            addToGUI2(movie);\r\n        }\r\n        for (Movie movie : moviesTopRated) {\r\n            addToGUI3(movie);\r\n        }\r\n        setUpFilter();\r\n        onMouseEntered();\r\n        onMouseExit();\r\n        setupAutoScroll();\r\n       /* profile.setOnMouseClicked(event -> profileOnMouseClicked());*/\r\n        labelsOnMouseClicked();\r\n        if(!WatchRecord.watchedMovies.isEmpty()) {\r\n            counter.setText(WatchRecord.watchedMovies.size() + \")\");\r\n        }\r\n        else {\r\n            counter.setText(\"0\"+\")\");\r\n        }\r\n        onSearch();\r\n    }\r\n\r\n    private void addToGUI(Movie movie) {\r\n        VBox movieContainer = new VBox(10);\r\n        movieContainer.setPrefWidth(300);\r\n        movieContainer.setPrefHeight(200);\r\n        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitHeight(237);\r\n        imageView.setFitWidth(220);\r\n        Label label = new Label(movie.getTitle());\r\n        label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        label.setOnMouseEntered(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: #FFC107;\"));\r\n        label.setOnMouseExited(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\"));\r\n        movieContainer.setAlignment(Pos.CENTER);\r\n        movieContainer.getChildren().addAll(imageView, label);\r\n\r\n        movieContainer.setOnMouseClicked(event -> {\r\n            try {\r\n                onMouseClickedVBox(event,movie);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        TopMovies.getChildren().addAll(movieContainer);\r\n        watchRecords.setOnMouseClicked(event -> onMouseClicked(movie));\r\n    }\r\n\r\n    private void addToGUI2(Movie movie) {\r\n        VBox movieContainer = new VBox(10);\r\n        movieContainer.setPrefWidth(300);\r\n        movieContainer.setPrefHeight(200);\r\n        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitHeight(237);\r\n        imageView.setFitWidth(220);\r\n        Label label = new Label(movie.getTitle());\r\n        label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        label.setOnMouseEntered(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: #FFC107;\"));\r\n        label.setOnMouseExited(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\"));\r\n        movieContainer.setAlignment(Pos.CENTER);\r\n        movieContainer.getChildren().addAll(imageView, label);\r\n        movieContainer.setOnMouseClicked(event -> {\r\n            try {\r\n                onMouseClickedVBox(event,movie);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        RecentMovies.getChildren().addAll(movieContainer);\r\n\r\n    }\r\n    private void addToGUI3(Movie movie) {\r\n        VBox movieContainer = new VBox(10);\r\n        movieContainer.setPrefWidth(300);\r\n        movieContainer.setPrefHeight(200);\r\n        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitHeight(237);\r\n        imageView.setFitWidth(220);\r\n        Label label = new Label(movie.getTitle());\r\n        label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        label.setOnMouseEntered(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: #FFC107;\"));\r\n        label.setOnMouseExited(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\"));\r\n        movieContainer.setAlignment(Pos.CENTER);\r\n        movieContainer.getChildren().addAll(imageView, label);\r\n\r\n        movieContainer.setOnMouseClicked(event -> {\r\n            try {\r\n                onMouseClickedVBox(event,movie);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        TopRatedMovies.getChildren().addAll(movieContainer);\r\n    }\r\n    public void setUpFilter(){\r\n        Main.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25; \" +\r\n                \"-fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\");\r\n        Horror.setStyle(\"-fx-background-radius: 25;\"+\r\n                \" -fx-background-color:  #565661;\");\r\n        All.setStyle(\"-fx-background-radius: 25;\"+\r\n                \" -fx-background-color:  #565661;\");\r\n        Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n        Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n        Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n        Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #565661;\"));\r\n        Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n        Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n        Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n        Main.setOnMouseExited(event1 -> Main.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25;\" +\r\n                \" -fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n    }\r\n    public void onMouseClicked(Movie movie) {\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"watch-record.fxml\"));\r\n        Parent root;\r\n        try {\r\n            root = loader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        WatchRecord controller = loader.getController();\r\n        controller.setStage(stage);\r\n        controller.initializeItems();\r\n        controller.aBoolean=true;\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(\"Movie\");\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    public void labelsOnMouseClicked(){\r\n        Action.setOnMouseClicked(event -> {\r\n            Action.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #FFC107;\");\r\n            Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            All.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Main.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25; \" +\r\n                    \"-fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\");\r\n            All.setOnMouseExited(event1 -> All.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #FFC107;\"));\r\n            Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #FFC107;\"));\r\n            Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Main.setOnMouseExited(event1 -> Main.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25;\" +\r\n                    \" -fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\"));\r\n            try {\r\n                toActionMovies();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        Comedy.setOnMouseClicked(event -> {\r\n            Comedy.setStyle(\"-fx-background-radius: 25;\"+\r\n                    \" -fx-background-color:  #FFC107;\");\r\n            Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            All.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Main.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25; \" +\r\n                    \"-fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\");\r\n            Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #FFC107;\"));\r\n            Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            All.setOnMouseExited(event1 -> All.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Main.setOnMouseExited(event1 -> Main.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25;\" +\r\n                    \" -fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\"));\r\n            try {\r\n                toComedyMovies();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        Drama.setOnMouseClicked(event -> {\r\n            Drama.setStyle(\"-fx-background-radius: 25;\"+\r\n                    \" -fx-background-color:  #FFC107;\");\r\n            Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            All.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Main.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25; \" +\r\n                    \"-fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\");\r\n            Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #FFC107;\"));\r\n            Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            All.setOnMouseExited(event1 -> All.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Main.setOnMouseExited(event1 -> Main.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25;\" +\r\n                    \" -fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\"));\r\n            try {\r\n                toDramaMovies();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n\r\n        Horror.setOnMouseClicked(event -> {\r\n            Horror.setStyle(\"-fx-background-radius: 25;\"+\r\n                    \" -fx-background-color:  #FFC107;\");\r\n            Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            All.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Main.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25; \" +\r\n                    \"-fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\");\r\n            Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #FFC107;\"));\r\n            Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            All.setOnMouseExited(event1 -> All.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Main.setOnMouseExited(event1 -> Main.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25;\" +\r\n                    \" -fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\"));\r\n            try {\r\n                toHorrorMovies();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });All.setOnMouseClicked(event -> {\r\n            All.setStyle(\"-fx-background-radius: 25;\"+\r\n                    \" -fx-background-color:  #FFC107;\");\r\n            Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n           // All.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Main.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25; \" +\r\n                    \"-fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\");\r\n            Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #565661;\"));\r\n            Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            All.setOnMouseExited(event1 -> All.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #FFC107;\"));\r\n            Main.setOnMouseExited(event1 -> Main.setStyle(\"-fx-background-color: black;\" +\r\n                    \" -fx-background-radius: 25;\" +\r\n                    \" -fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\"));\r\n            try {\r\n                toAllMovies();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        Main.setOnMouseClicked(event -> {\r\n            Main.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                    \" -fx-background-radius: 25; \" +\r\n                    \"-fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\");\r\n            Horror.setStyle(\"-fx-background-radius: 25;\"+\r\n                    \" -fx-background-color:  #565661;\");\r\n            Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            All.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\");\r\n            Horror.setOnMouseExited(event1 -> Horror.setStyle(\"-fx-background-radius: 25;-fx-background-color:  #565661;\"));\r\n            Comedy.setOnMouseExited(event1 -> Comedy.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Drama.setOnMouseExited(event1 -> Drama.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Action.setOnMouseExited(event1 -> Action.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            All.setOnMouseExited(event1 -> All.setStyle(\"-fx-background-radius: 25; -fx-background-color:  #565661;\"));\r\n            Main.setOnMouseExited(event1 -> Main.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                    \" -fx-background-radius: 25;\" +\r\n                    \" -fx-border-color: white;\" +\r\n                    \" -fx-border-radius: 25;\"));\r\n            mainPage();\r\n        });\r\n    }\r\n    public void onMouseClickedVBox(MouseEvent act,Movie movie) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(getClass().getResource(\"movie-view.fxml\"));\r\n        root = loader.load();\r\n        stage = (Stage)((Node)act.getSource()).getScene().getWindow();\r\n        MovieController controller=loader.getController();\r\n        Movie movie2=new Movie(movie.getTitle(),movie.getRelease_date(),movie.getRunning_time(),movie.getGenres(),movie.getLanguage(),movie.getCountry(),movie.getPoster_path(),movie.getBudget(),\"50\",movie.getImdb_score(),movie.getDescription());\r\n        controller.setStage(stage);\r\n        controller.setMovie(movie2);\r\n        controller.watchMovie(movie2);\r\n        controller.page5=0;\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n        movie5=movie;\r\n        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));\r\n        controller.refreshScreen(\"Watch Movie \"+ movie.getTitle() + \"(\"+movie.getRelease_date().getYear()+\")\", movie.getTitle(),\r\n                movie.getTitle()+\" Translated\",movie.getGenres(), movie.getDescription(),\r\n                movie.getRunning_time(), image,movie.getDirectorName(),movie.getCastNames());\r\n        stage.setScene(scene);\r\n        stage.show();\r\n\r\n    }\r\n\r\n    public void onMouseEntered() {\r\n        onMouseEnteredLabels(Action);\r\n        onMouseEnteredLabels(Comedy);\r\n        onMouseEnteredLabels(Drama);\r\n        onMouseEnteredLabels(All);\r\n        onMouseEnteredLabels(Horror);\r\n        Back.setOnMouseEntered(event -> Back.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25; \" +\r\n                \"-fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n        Main.setOnMouseEntered(event -> Main.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25; \" +\r\n                \"-fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n        Search.setOnMouseEntered(event -> Search.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25;\" +\r\n                \" -fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n        Recent.setOnMouseEntered(event -> underlineLabel(Recent, true));\r\n        topMovies.setOnMouseEntered(event -> underlineLabel(topMovies, true));\r\n        TopRated.setOnMouseEntered(event -> underlineLabel(TopRated, true));\r\n        watchRecords.setOnMouseEntered(event -> {\r\n            watchRecords.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 10; -fx-text-fill: black;\");\r\n            counter.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 10; -fx-text-fill: black;\");\r\n        });\r\n\r\n    }\r\n\r\n    public void onMouseExit() {\r\n        // Handle mouse exit event\r\n        onMouseExitLabels(Action);\r\n        onMouseExitLabels(Comedy);\r\n        onMouseExitLabels(Drama);\r\n        onMouseExitLabels(Horror);\r\n        onMouseExitLabels(All);\r\n        Back.setOnMouseExited(event -> Back.setStyle(\"-fx-background-color: black;\" +\r\n                \" -fx-background-radius: 25;\" +\r\n                \" -fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n        Main.setOnMouseExited(event -> Main.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25;\" +\r\n                \" -fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n        Search.setOnMouseExited(event -> Search.setStyle(\"-fx-background-color: black;\" +\r\n                \" -fx-background-radius: 25;\" +\r\n                \" -fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n        Recent.setOnMouseExited(event -> underlineLabel(Recent, false));\r\n        topMovies.setOnMouseExited(event -> underlineLabel(topMovies, false));\r\n        TopRated.setOnMouseExited(event -> underlineLabel(TopRated, false));\r\n        watchRecords.setOnMouseExited(event -> {\r\n            watchRecords.setStyle(\"-fx-background-color: #001f2f; -fx-background-radius: 10;\");\r\n            counter.setStyle(\"-fx-background-color: #001f2f; -fx-background-radius: 10;\");\r\n        });\r\n\r\n    }\r\n\r\n    private void underlineLabel(Label label, boolean underline) {\r\n        label.setUnderline(underline);\r\n    }\r\n\r\n    private void onMouseEnteredLabels(Label label) {\r\n        label.setOnMouseEntered(event -> label.setStyle(\"-fx-background-radius: 25;\" +\r\n                \" -fx-background-color:  #FFC107;\"));\r\n    }\r\n\r\n    private void onMouseExitLabels(Label label) {\r\n        label.setOnMouseExited(event -> label.setStyle(\"-fx-background-radius: 25;\" +\r\n                \" -fx-background-color:  #565661;\"));\r\n    }\r\n    private void setupAutoScroll() {\r\n        double scrollDuration = 14; // Adjust the duration of the auto-scrolling\r\n\r\n        // Create a timeline for the auto-scrolling animation\r\n        autoScrollTimeline = new Timeline(\r\n                new KeyFrame(Duration.ZERO, new KeyValue(Scroll1.hvalueProperty(), 0)),\r\n                new KeyFrame(Duration.seconds(scrollDuration), new KeyValue(Scroll1.hvalueProperty(), 1))\r\n        );\r\n        autoScrollTimeline2 = new Timeline(\r\n                new KeyFrame(Duration.ZERO, new KeyValue(Scroll2.hvalueProperty(), 0)),\r\n                new KeyFrame(Duration.seconds(scrollDuration), new KeyValue(Scroll2.hvalueProperty(), 1))\r\n        );\r\n        autoScrollTimeline3 = new Timeline(\r\n                new KeyFrame(Duration.ZERO, new KeyValue(Scroll3.hvalueProperty(), 0)),\r\n                new KeyFrame(Duration.seconds(scrollDuration), new KeyValue(Scroll3.hvalueProperty(), 1))\r\n        );\r\n\r\n        // Set the cycle count to indefinite for continuous scrolling\r\n        autoScrollTimeline.setCycleCount(Timeline.INDEFINITE);\r\n        startAutoScroll();\r\n        Scroll1.setOnMouseEntered(event ->  stopAutoScroll());\r\n        Scroll1.setOnMouseExited(event -> startAutoScroll());\r\n        ///////////////////////////////////////////////////////\r\n        // Set the cycle count to indefinite for continuous scrolling\r\n        autoScrollTimeline2.setCycleCount(Timeline.INDEFINITE);\r\n        startAutoScroll2();\r\n        Scroll2.setOnMouseEntered(event ->  stopAutoScroll2());\r\n        Scroll2.setOnMouseExited(event -> startAutoScroll2());\r\n        //////////////////////////////////////////////////////\r\n        autoScrollTimeline3.setCycleCount(Timeline.INDEFINITE);\r\n        startAutoScroll3();\r\n        Scroll3.setOnMouseEntered(event ->  stopAutoScroll3());\r\n        Scroll3.setOnMouseExited(event -> startAutoScroll3());\r\n    }\r\n    @FXML\r\n    private void startAutoScroll() {\r\n        autoScrollTimeline.play();\r\n    }\r\n\r\n    @FXML\r\n    private void stopAutoScroll() {\r\n        // Stop auto-scrolling when user interacts with the ScrollPane\r\n        autoScrollTimeline.pause();\r\n    }\r\n    ///////////////////////////////\r\n\r\n    ///////////////////////////////\r\n    @FXML\r\n    private void startAutoScroll2() {\r\n        autoScrollTimeline2.play();\r\n    }\r\n\r\n    @FXML\r\n    private void stopAutoScroll2() {\r\n        // Stop auto-scrolling when user interacts with the ScrollPane\r\n        autoScrollTimeline2.pause();\r\n    }\r\n    ///////////////////////////\r\n\r\n    ///////////////////////////\r\n    @FXML\r\n    private void startAutoScroll3() {\r\n        autoScrollTimeline3.play();\r\n    }\r\n\r\n    @FXML\r\n    private void stopAutoScroll3() {\r\n        // Stop auto-scrolling when user interacts with the ScrollPane\r\n        autoScrollTimeline3.pause();\r\n    }\r\n\r\n    /////////////////////////////\r\n    public void handleKeyPressed(KeyEvent event) {\r\n        if (event.getCode().toString().equals(\"ESCAPE\")) {\r\n            Platform.exit();\r\n        }\r\n    }\r\n    private void switchPane(Pane pane){\r\n        mainPane.setCenter(pane);\r\n    }\r\n    ///////////////////////////\r\n\r\n    private void mainPage(){\r\n        switchPane(this.AllMovies);\r\n    }\r\n\r\n    private void toActionMovies() throws IOException {\r\n        moviePage = 1;\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"filter-page.fxml\"));\r\n        switchPane((Pane)fxml);\r\n    }\r\n\r\n    private void toComedyMovies() throws IOException{\r\n        moviePage = 2;\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"filter-page.fxml\"));\r\n        switchPane((Pane)fxml);\r\n    }\r\n\r\n    private void toDramaMovies() throws IOException{\r\n        moviePage = 3;\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"filter-page.fxml\"));\r\n        switchPane((Pane)fxml);\r\n    }\r\n\r\n    private void toHorrorMovies() throws IOException{\r\n        moviePage = 4;\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"filter-page.fxml\"));\r\n        switchPane((Pane)fxml);\r\n    }\r\n    private void toAllMovies() throws IOException{\r\n        moviePage = 5;\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(\"filter-page.fxml\"));\r\n        switchPane((Pane)fxml);\r\n    }\r\n    @FXML\r\n    private void handleMenuItemClick(ActionEvent event) {\r\n        MenuItem selectedItem = (MenuItem) event.getSource();\r\n        String selectedValue = selectedItem.getText();\r\n\r\n        // Do something with the selected value, e.g., set it as the text of the MenuButton\r\n        menuButton.setText(selectedValue);\r\n        menuValue=menuButton.getText();\r\n        // You can also perform other actions based on the selected value\r\n        // For example, show/hide different UI elements or update other parts of your application\r\n    }\r\n\r\n    public void setStage(Stage stage) {\r\n        this.stage = stage;\r\n    }\r\n    @FXML\r\n    private void goToProgilePage (MouseEvent event) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(getClass().getResource(\"profile-page.fxml\"));\r\n        root = loader.load();\r\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n        profilePageController controller=loader.getController();\r\n        controller.setStage(stage);\r\n        controller.setdata();\r\n        controller.setUser(user);\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    @FXML\r\n    private void backScenes(ActionEvent event) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(getClass().getResource(\"sign-in.fxml\"));\r\n        root = loader.load();\r\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n        SignIn controller=loader.getController();\r\n        controller.setStage(stage);\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    public void setUser(User user){\r\n        this.user = user;\r\n       // Admin.getUserMovieLists(user);\r\n    }\r\n    private void onSearch(){\r\n        Search.setOnMouseClicked(event -> {\r\n            int found=0;\r\n            String cast = \"\";\r\n            String director=\"\";\r\n            for(Movie movie1:Movie.allmovies){\r\n                if(menuValue!=null) {\r\n                    if (movie1.getTitle().equalsIgnoreCase(searchItem.getText()) && menuValue.equals(\"Movie\")) {\r\n                        movie = movie1;\r\n                        found = 1;\r\n                    }\r\n                    else if(movie1.getDirectorName().equalsIgnoreCase(searchItem.getText()) && menuValue.equals(\"Director\")){\r\n                        director=movie1.getDirectorName();\r\n                        searchViewController.searchMovies.add(movie1);\r\n                        found=2;\r\n                    }\r\n                    else{\r\n                        for (String cast1 : movie1.getCastNames()) {\r\n                            if(searchItem.getText().equalsIgnoreCase(cast1) && menuValue.equals(\"Cast\")){\r\n                                cast=cast1;\r\n                                found=3;\r\n                                searchViewController.searchMovies.add(movie1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            int finalFound=found;\r\n            if(finalFound==1) {\r\n                FXMLLoader loader = new FXMLLoader(getClass().getResource(\"movie-view.fxml\"));\r\n                try {\r\n                    root = loader.load();\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n                MovieController controller = loader.getController();\r\n                controller.setStage(stage);\r\n                controller.watchMovie(movie);\r\n                controller.page5 = 0;\r\n                scene = new Scene(root);\r\n                Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));\r\n                controller.refreshScreen(\"Watch Movie \"+ movie.getTitle() + \"(\"+movie.getRelease_date().getYear()+\")\", movie.getTitle(),\r\n                        movie.getTitle()+\" Translated\",movie.getGenres(), movie.getDescription(),\r\n                        movie.getRunning_time(), image,movie.getDirectorName(),movie.getCastNames());\r\n                stage.setScene(scene);\r\n                stage.show();\r\n            }\r\n            else if(finalFound==2){\r\n                FXMLLoader loader = new FXMLLoader(getClass().getResource(\"search-view.fxml\"));\r\n                try {\r\n                    root = loader.load();\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n                searchViewController controller = loader.getController();\r\n                controller.setStage(stage);\r\n                controller.Search(director,menuValue);\r\n                scene = new Scene(root);\r\n                stage.setScene(scene);\r\n                stage.show();\r\n            }\r\n            else if(finalFound==3){\r\n                FXMLLoader loader = new FXMLLoader(getClass().getResource(\"search-view.fxml\"));\r\n                try {\r\n                    root = loader.load();\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n                searchViewController controller = loader.getController();\r\n                controller.setStage(stage);\r\n                controller.Search(cast,menuValue);\r\n                scene = new Scene(root);\r\n                stage.setScene(scene);\r\n                stage.show();\r\n            }\r\n            else {\r\n                searchItem.clear();\r\n            }\r\n        });\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/MainPageController.java b/src/main/java/com/example/watch_it/MainPageController.java
--- a/src/main/java/com/example/watch_it/MainPageController.java	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/src/main/java/com/example/watch_it/MainPageController.java	(date 1702766696712)
@@ -27,6 +27,8 @@
 import java.io.IOException;
 import java.time.LocalDate;
 import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
 import java.util.Objects;
 
 import javafx.fxml.FXML;
@@ -102,15 +104,16 @@
         for(Movie movie : Movie.MostViewedMovies(Movie.allmovies)){
             moviesTop.add(movie);
         }
+        Collections.sort(Movie.allmovies, Comparator.comparingInt(Movie::getYear).reversed());
         for(Movie movie:Movie.allmovies)
         {
             moviesRecent.add(movie);
         }
+        Collections.sort(Movie.allmovies, Comparator.comparingDouble(Movie::getUserRate).reversed());
         for(Movie movie:Movie.allmovies)
         {
             moviesTopRated.add(movie);
         }
-
     }
 
     @FXML
@@ -120,7 +123,9 @@
             addToGUI(movie);
         }
         for (Movie movie : moviesRecent) {
-            addToGUI2(movie);
+            if(movie.getRelease_date().getYear()>2018) {
+                addToGUI2(movie);
+            }
         }
         for (Movie movie : moviesTopRated) {
             addToGUI3(movie);
@@ -129,7 +134,7 @@
         onMouseEntered();
         onMouseExit();
         setupAutoScroll();
-       /* profile.setOnMouseClicked(event -> profileOnMouseClicked());*/
+        /* profile.setOnMouseClicked(event -> profileOnMouseClicked());*/
         labelsOnMouseClicked();
         if(!WatchRecord.watchedMovies.isEmpty()) {
             counter.setText(WatchRecord.watchedMovies.size() + ")");
@@ -365,7 +370,7 @@
             Comedy.setStyle("-fx-background-radius: 25; -fx-background-color:  #565661;");
             Drama.setStyle("-fx-background-radius: 25; -fx-background-color:  #565661;");
             Action.setStyle("-fx-background-radius: 25; -fx-background-color:  #565661;");
-           // All.setStyle("-fx-background-radius: 25; -fx-background-color:  #565661;");
+            // All.setStyle("-fx-background-radius: 25; -fx-background-color:  #565661;");
             Main.setStyle("-fx-background-color: black;" +
                     " -fx-background-radius: 25; " +
                     "-fx-border-color: white;" +
@@ -413,11 +418,11 @@
         root = loader.load();
         stage = (Stage)((Node)act.getSource()).getScene().getWindow();
         MovieController controller=loader.getController();
-        Movie movie2=new Movie(movie.getTitle(),movie.getRelease_date(),movie.getRunning_time(),movie.getGenres(),movie.getLanguage(),movie.getCountry(),movie.getPoster_path(),movie.getBudget(),"50",movie.getImdb_score(),movie.getDescription());
         controller.setStage(stage);
-        controller.setMovie(movie2);
-        controller.watchMovie(movie2);
+        controller.setMovie(movie);
+        controller.watchMovie(movie);
         controller.page5=0;
+        controller.setStars();
         scene = new Scene(root);
         stage.setScene(scene);
         stage.show();
@@ -502,7 +507,7 @@
                 " -fx-background-color:  #565661;"));
     }
     private void setupAutoScroll() {
-        double scrollDuration = 14; // Adjust the duration of the auto-scrolling
+        double scrollDuration = 60; // Adjust the duration of the auto-scrolling
 
         // Create a timeline for the auto-scrolling animation
         autoScrollTimeline = new Timeline(
@@ -654,15 +659,19 @@
         stage.setScene(scene);
         stage.show();
     }
+    @FXML
+    private void getSearchText(ActionEvent event) throws IOException {
+    }
     public void setUser(User user){
         this.user = user;
-       // Admin.getUserMovieLists(user);
+        // Admin.getUserMovieLists(user);
     }
     private void onSearch(){
         Search.setOnMouseClicked(event -> {
             int found=0;
             String cast = "";
             String director="";
+            searchViewController.searchMovies=new ArrayList<>();
             for(Movie movie1:Movie.allmovies){
                 if(menuValue!=null) {
                     if (movie1.getTitle().equalsIgnoreCase(searchItem.getText()) && menuValue.equals("Movie")) {
Index: src/main/java/com/example/watch_it/profilePageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.*;\r\n\r\npublic class profilePageController implements Initializable {\r\n    private Stage stage;\r\n    private Scene scene;\r\n    private Parent root;\r\n    @FXML\r\n    private Label username;\r\n    @FXML\r\n    private Label email;\r\n\r\n    @FXML\r\n    private Label firstname;\r\n    @FXML\r\n    private Label plan;\r\n\r\n    @FXML\r\n    private Label secondname;\r\n    @FXML\r\n    private Button Back;\r\n    @FXML\r\n    private ImageView profilePictue;\r\n    private boolean isAdmin;\r\n    private User user;\r\n    String UserName ;\r\n    ButtonType buttonTypeYes = new ButtonType(\"Yes\");\r\n    ButtonType buttonTypeNo = new ButtonType(\"No\");\r\n    Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\r\n    @FXML\r\n    private ChoiceBox<String> Select_List;\r\n\r\n    //choose 3nd el onMouseClicked f akher checkbox fl fxml\r\n    @FXML\r\n    public void choose(MouseEvent event) throws IOException {\r\n        String choice = Select_List.getSelectionModel().getSelectedItem();\r\n        if(choice!=null) {\r\n            if (choice.equals(\"Log Out\")) {\r\n                alert.getButtonTypes().setAll(buttonTypeYes, buttonTypeNo);\r\n                Optional<ButtonType> result = alert.showAndWait();\r\n                if (result.isPresent() && result.get() == buttonTypeYes) {\r\n                    //To Switch to the page first(from the task of Tasneem).\r\n                    root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(\"first-page.fxml\")));\r\n                    stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n                    scene = new Scene(root);\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                }\r\n            } else if (choice.equals(\"Delete Account\")) {\r\n                System.out.println(\"in\");\r\n                User.Delete_User(UserName);\r\n                //until we manage writing as obj\r\n                //not working-----------\r\n                for (String users : Admin.users) {\r\n                    String[] data = users.split(\",\");\r\n                    if (data[Admin.USERNAMEINDEX].equals(UserName)) {\r\n                        Admin.users.remove(users);\r\n                    }\r\n                }\r\n\r\n            }\r\n            //tmam\r\n            else if (choice.equals(\"Edit Profile\")) {\r\n                root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(\"update-page.fxml\")));\r\n                stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n                scene = new Scene(root);\r\n                stage.setScene(scene);\r\n                stage.show();\r\n            }\r\n            //Delete_Recorded_Movies\r\n            else {\r\n                alert.getButtonTypes().setAll(buttonTypeYes, buttonTypeNo);\r\n                Optional<ButtonType> result = alert.showAndWait();\r\n                if (result.isPresent() && result.get() == buttonTypeYes) {\r\n                    user.watchedMovies.clear();\r\n                    user.Watched_Movies.clear();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // action from main page and username which entered in sign in page (user)\r\n    public void Set_Data_User(ActionEvent act , String username )\r\n    {\r\n        for(User user: User.allusers)\r\n        {\r\n            if(user.getUser_Name().equals(username))\r\n            {\r\n                firstname.setText(user.getFirst_Name());\r\n                secondname.setText(user.getLast_Name());\r\n                // id.setText(user.getUser_ID());   id???\r\n                plan.setText(user.getPlan());\r\n                email.setText(user.getEmail());\r\n            }\r\n        }\r\n    }\r\n    public void Delete_User(String user_name)\r\n    {\r\n        int index = 0 ;\r\n        for(User user : User.allusers) {\r\n            if (user.getUser_Name().equals(user_name)) {\r\n                index = User.allusers.indexOf(user);\r\n                User.allusers.remove(user);\r\n            }\r\n        }\r\n        for(int i = index ; i <= User.allusers.size() ; i++)\r\n        {\r\n            User.allusers.get(i).setUser_ID(i++);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void move(ActionEvent act)throws IOException\r\n    {\r\n        root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(\"recorded-movies.fxml\")));\r\n        stage = (Stage)((Node)act.getSource()).getScene().getWindow();\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle)\r\n    {\r\n        Select_List.getItems().addAll(\"Edit Profile\" , \"Log Out\" , \"Delete Account\" , \"Delete Watched Movies\");\r\n\r\n    }\r\n    @FXML\r\n    private void onMouseEntered(){\r\n        Back.setOnMouseEntered(event -> Back.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n    @FXML\r\n    private void onMouseExit(){\r\n        Back.setOnMouseExited(event -> Back.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n    @FXML\r\n    private void  backScenes(ActionEvent event) throws IOException {\r\n        if (isAdmin) {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"all-movies.fxml\"));\r\n            root = loader.load();\r\n            AllMoviesController controller = loader.getController();\r\n            controller.setStage(stage);\r\n            controller.toAllUsers(event);\r\n        }\r\n        else {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"main-page.fxml\"));\r\n            root = loader.load();\r\n            MainPageController controller = loader.getController();\r\n            controller.setStage(stage);\r\n        }\r\n        stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        Scene scene = new Scene(root);\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    @FXML\r\n    private void goToMovieList (ActionEvent event) throws IOException {\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"recorded-movies.fxml\"));\r\n        root = loader.load();\r\n        RecordedMoviesController controller = loader.getController();\r\n        controller.setStage(stage);\r\n        stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        Scene scene = new Scene(root);\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    public void setStage(Stage stage){\r\n        this.stage = stage;\r\n    }\r\n\r\n    public void setdata(){\r\n        isAdmin = false;\r\n        Image image = new Image(getClass().getResourceAsStream(SignIn.user5.getProfilePath()));\r\n        profilePictue.setImage(image);\r\n        profilePictue.setFitHeight(200);\r\n        profilePictue.setFitWidth(200);\r\n        username.setText(SignIn.user5.getUser_Name());\r\n        email.setText(SignIn.user5.getEmail());\r\n        plan.setText(SignIn.user5.getPlan());\r\n        secondname.setText(SignIn.user5.getLast_Name());\r\n        firstname.setText(SignIn.user5.getFirst_Name());\r\n    }\r\n    public void setdatatoAdmin(User user){\r\n        isAdmin = true;\r\n        Image image = new Image(getClass().getResourceAsStream(user.getProfilePath()));\r\n        profilePictue.setImage(image);\r\n        profilePictue.setFitHeight(200);\r\n        profilePictue.setFitWidth(200);\r\n        username.setText(user.getUser_Name());\r\n        email.setText(user.getEmail());\r\n        plan.setText(user.getPlan());\r\n        secondname.setText(user.getLast_Name());\r\n        firstname.setText(user.getFirst_Name());\r\n    }\r\n    public void setUser(User user){\r\n        this.user = user;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/profilePageController.java b/src/main/java/com/example/watch_it/profilePageController.java
--- a/src/main/java/com/example/watch_it/profilePageController.java	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/src/main/java/com/example/watch_it/profilePageController.java	(date 1702766572553)
@@ -83,12 +83,11 @@
                 stage.show();
             }
             //Delete_Recorded_Movies
-            else {
+            else if (choice.equals("Delete Watched Movies")) {
                 alert.getButtonTypes().setAll(buttonTypeYes, buttonTypeNo);
                 Optional<ButtonType> result = alert.showAndWait();
                 if (result.isPresent() && result.get() == buttonTypeYes) {
-                    user.watchedMovies.clear();
-                    user.Watched_Movies.clear();
+                    SignIn.user5.Watched_Movies.clear();
                 }
             }
         }
@@ -138,7 +137,9 @@
     public void initialize(URL url, ResourceBundle resourceBundle)
     {
         Select_List.getItems().addAll("Edit Profile" , "Log Out" , "Delete Account" , "Delete Watched Movies");
-
+        Select_List.setValue("Select");
+        onMouseEntered();
+        onMouseExit();
     }
     @FXML
     private void onMouseEntered(){
Index: src/main/java/com/example/watch_it/searchViewController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class searchViewController {\r\n    @FXML\r\n    private HBox Movies;\r\n    @FXML\r\n    private Label Name_Label;\r\n    @FXML\r\n    private Label Age_Label;\r\n    @FXML\r\n    private Label Gender_Label;\r\n    @FXML\r\n    private Label Nation_Label;\r\n    private Label Movies_Label;\r\n    @FXML\r\n    private Label Not_Found_Label;\r\n    @FXML\r\n    private Label data_Label;\r\n    private Stage stage;\r\n    private Parent root;\r\n    public static final ArrayList<Movie> searchMovies=new ArrayList<Movie>();\r\n    @FXML\r\n    public void initialize(){\r\n        for (Movie movie:searchMovies) {\r\n            add_movie(movie);\r\n        }\r\n    }\r\n\r\n    private void add_movie(Movie movie){\r\n        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));\r\n        ImageView imageView=new ImageView(image);\r\n        imageView.setFitHeight(237);\r\n        imageView.setFitWidth(220);\r\n        Label name=new Label(movie.getTitle());\r\n        name.setFont(Font.font(16));\r\n        name.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        VBox show=new VBox(10);\r\n        show.getChildren().addAll(imageView,name);\r\n        show.setAlignment(Pos.CENTER);\r\n        Movies.getChildren().add(show);\r\n    }\r\n    protected void Search(String search_name,String type){\r\n        String[] arr = search_name.split(\" \");\r\n        String first = arr[0], second = arr[1];\r\n        if(type.equals(\"Director\")) {\r\n            Director d = Director.Search_director(first, second);\r\n            data_Label.setText(\"Director\");\r\n            if (d == null)\r\n                Not_Found_Label.setText(\"Not Found !!!\");\r\n            else {\r\n                Name_Label.setText(d.getFirst_Name() + \" \" + d.getSecond_Name());\r\n                Age_Label.setText(Integer.toHexString(d.getAge()));\r\n                Gender_Label.setText(d.getGender());\r\n                Nation_Label.setText(d.getNationality());\r\n            }\r\n        }\r\n        else if(type.equals(\"Cast\")) {\r\n            Cast c = Cast.Search_Cast(first, second);\r\n            data_Label.setText(\"Cast\");\r\n            if(c==null)\r\n                Not_Found_Label.setText(\"Not Found !!!\");\r\n            else{\r\n                Name_Label.setText(c.getFirst_Name() + \" \" + c.getSecond_Name());\r\n                Age_Label.setText(Integer.toHexString(c.getAge()));\r\n                Gender_Label.setText(c.getGender());\r\n                Nation_Label.setText(c.getNationality());\r\n            }\r\n        }\r\n    }\r\n    @FXML\r\n    private void backScenes(ActionEvent event) throws IOException {\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"main-page.fxml\"));\r\n        root = loader.load();\r\n        MainPageController controller = loader.getController();\r\n        controller.setStage(stage);\r\n        stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(\"Movie\");\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    public void setStage(Stage stage){\r\n        this.stage = stage;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/searchViewController.java b/src/main/java/com/example/watch_it/searchViewController.java
--- a/src/main/java/com/example/watch_it/searchViewController.java	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/src/main/java/com/example/watch_it/searchViewController.java	(date 1702766705297)
@@ -37,7 +37,7 @@
     private Label data_Label;
     private Stage stage;
     private Parent root;
-    public static final ArrayList<Movie> searchMovies=new ArrayList<Movie>();
+    public static ArrayList<Movie> searchMovies=new ArrayList<Movie>();
     @FXML
     public void initialize(){
         for (Movie movie:searchMovies) {
Index: src/main/java/com/example/watch_it/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\n\r\npublic class User\r\n{\r\n    private int User_ID;\r\n    private final String User_Name;\r\n    private String Last_Name;\r\n    private String First_Name;\r\n    private String Email;\r\n    private String Password;\r\n    private Subscription subscription;\r\n    private String profilePath;\r\n    private String plan;\r\n    private LocalDate startDate;\r\n    String AllData;\r\n\r\n    // This List Access By User\r\n    ArrayList<Movie> Movies_For_Later = new ArrayList<>();\r\n    ArrayList<String> toWatchMovies = new ArrayList<>();\r\n    // This List Access By UserWatchRecord\r\n    ArrayList<UserWatchRecord> Watched_Movies = new ArrayList<>();\r\n    ArrayList<String> watchedMovies = new ArrayList<>();\r\n    public static ArrayList<User> allusers = new ArrayList<User>();\r\n\r\n    /****use it as ID to be unique(static variable) and display it in message to each user*****/\r\n\r\n    /*****as Sign Up method and the data will take in main(add)******/\r\n    public User(String user_name, String last_Name, String first_Name, String email, String password, String profilePath, String plan)\r\n    {\r\n        this.plan = plan;\r\n        this.profilePath = profilePath;\r\n        this.User_ID = Admin.users.size();\r\n        this.User_Name = user_name;\r\n        this.Last_Name = last_Name;\r\n        this.First_Name = first_Name;\r\n        this.Email = email;\r\n        this.Password = password;\r\n    }\r\n    public User(int id, String user_name, String last_Name, String first_Name, String email, String password, String profilePath, String plan)\r\n    {\r\n        this.User_ID =id;\r\n        this.User_Name = user_name;\r\n        this.Last_Name = last_Name;\r\n        this.First_Name = first_Name;\r\n        this.Email = email;\r\n        this.Password = password;\r\n    }\r\n    public User(int id, String user_name, String last_Name, String first_Name, String email, String password, String profilePath, String plan, String stardDate)\r\n    {\r\n        this.User_ID =id;\r\n        this.User_Name = user_name;\r\n        this.Last_Name = last_Name;\r\n        this.First_Name = first_Name;\r\n        this.Email = email;\r\n        this.Password = password;\r\n        this.startDate = LocalDate.parse(stardDate);\r\n    }\r\n\r\n    // handle by GUI Answer the button that user click on it.\r\n    public void UpDate_Data_User(String Answer , String info)\r\n    {\r\n        if(Answer.equals(\"First Name\"))\r\n        {\r\n            this.First_Name = info;\r\n        }\r\n        else if(Answer.equals(\"Last Name\"))\r\n        {\r\n            this.Last_Name = info;\r\n        }\r\n        else if(Answer.equals(\"Email\"))\r\n        {\r\n            this.Email = info;\r\n        }\r\n        else if(Answer.equals(\"Password\"))\r\n        {\r\n            this.Password = info;\r\n        }\r\n    }\r\n    // return the index of the user who deleted to handle the Id of the reminder users.\r\n    public static void Delete_User(String user_name)\r\n    {\r\n        int index = 0 ;\r\n        for(User user : allusers)\r\n        {\r\n            if(user.User_Name.equals(user_name))\r\n            {\r\n                index = allusers.indexOf(user);\r\n                allusers.remove(user);\r\n            }\r\n        }\r\n        for (int i=index; i<allusers.size(); i++){\r\n            allusers.get(i).setUser_ID( allusers.get(i).getUser_ID() - 1);\r\n        }\r\n    }\r\n    public static boolean Userexist(String user_name) {\r\n        for (User user : allusers) {\r\n            if (user.User_Name.equals(user_name)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /*****Setters*****/\r\n    public void setLast_Name(String last_Name) {\r\n        Last_Name = last_Name;\r\n    }\r\n    public void setFirst_Name(String first_Name) {\r\n        First_Name = first_Name;\r\n    }\r\n    public void setPlan(String plan){\r\n        this.plan = plan;\r\n    }\r\n    public void setEmail(String email) {\r\n        Email = email;\r\n    }\r\n    public void setUser_ID(int user_ID){\r\n        this.User_ID = user_ID;\r\n    }\r\n    public void setProfilePath(String profilePath){\r\n        this.profilePath = profilePath;\r\n    }\r\n    public void Set_Password(String password) {\r\n        Password = password;\r\n    }\r\n    /*******Getters******/\r\n    public int getUser_ID() {\r\n        return User_ID;\r\n    }\r\n    public String getUser_Name() {\r\n        return User_Name;\r\n    }\r\n    public String getLast_Name() {\r\n        return Last_Name;\r\n    }\r\n    public String getFirst_Name() {\r\n        return First_Name;\r\n    }\r\n    public String getEmail() {\r\n        return Email;\r\n    }\r\n    public String getPassword() {\r\n        return Password;\r\n    }\r\n    public String getProfilePath(){\r\n        return profilePath;\r\n    }\r\n    public String getPlan(){\r\n        return plan;\r\n    }\r\n    /****Set the data of Subscription****/\r\n    public void Subscribe(int id , Subscription.Plans plan)\r\n    {\r\n        subscription = new Subscription(id , plan);\r\n    }\r\n    /******define set method for plan in class Subscription******/\r\n    public void Updata_Subscription_Plan(Subscription.Plans plan)\r\n    {\r\n        subscription.setPlan(plan);\r\n    }\r\n    /*********delete will handle in Class System(Main).\r\n     // How to handle the date of watching\r\n     // take movie from method Choose movie Should be in main(return object of movie)\r\n     //the Constraints of this part the amount of movies that allowed to user\r\n     // add ********/\r\n    public void Choose_Movies_For_Later(Movie mov)\r\n    {\r\n        Movies_For_Later.add(mov);\r\n    }\r\n    /*******take the index of the movie the User Change it and the new Movie the Want(object of movie)****/\r\n    public void Update_Choosen_Movie_Change(Movie mov , int index)\r\n    {\r\n        // make sure the exception handling is applied in the index.\r\n        Movies_For_Later.set(index , mov);\r\n    }\r\n    /****delete movie from the list of watch later should handle in class system.*****/\r\n    public void Set_record(int id , Movie movi)\r\n    {\r\n        // Handle the part of Date and rate\r\n        // the movi that user watch it.\r\n        Watched_Movies.add(new UserWatchRecord(id , movi));\r\n    }\r\n    /***to set rate and Update it****/\r\n    public void Set_Rate_Racord(int index ,int rate)\r\n    {\r\n        // make sure the exception handling is applied in the index.\r\n        Watched_Movies.get(index).setRating(rate);\r\n    }\r\n    public static User GetUser(String user_name) {\r\n        for (User user : allusers) {\r\n            if (user.User_Name.equals(user_name))\r\n                return user;\r\n        }\r\n        return null;\r\n    }\r\n    @Override\r\n    public String toString(){\r\n        String data =\"\";\r\n//        data = data.concat(\"user\").concat(\",\").concat(this.User_Name).concat(\",\").concat(String.valueOf(getPassword())).concat(\",\").concat(String.valueOf(allusers.size()).concat(\",\").concat(getFirst_Name()).concat(\",\").concat(getLast_Name()).concat(\",\").concat(plan).concat(\",\").concat(getEmail()).concat(\",\").concat(LocalDate.now().toString()).concat(\",\").concat(profilePath));\r\n        String watched=\"\";\r\n        String toWatch=\"\";\r\n   /*     ArrayList<String> watched = new ArrayList<String>();\r\n        ArrayList<String> toWatch = new ArrayList<String>();*/\r\n     //   Admin.getUserMovieLists();\r\n        for(int i=0; i<watchedMovies.size(); i++){\r\n            watched=watched.concat(\"watched\").concat(\",\");\r\n            if(i<watchedMovies.size()-1){\r\n                watched = watched.concat(watchedMovies.get(i).concat(\",\"));\r\n                System.out.println(\"there's watched\");\r\n            }\r\n            else {\r\n                watched = watched.concat(watchedMovies.get(i));\r\n            }\r\n        }\r\n        for(int i=0; i<toWatchMovies.size(); i++){\r\n            watched=watched.concat(\"to be watched\").concat(\",\");\r\n            if(i<toWatchMovies.size()-1){\r\n                toWatch = toWatch.concat(toWatchMovies.get(i).concat(\",\"));\r\n            }\r\n            else\r\n                toWatch = toWatch.concat(toWatchMovies.get(i));\r\n        }\r\n        System.out.println(watched);\r\n        System.out.println(toWatch);\r\n        if(watchedMovies.isEmpty() && toWatchMovies.isEmpty())\r\n            return data;\r\n        if((watchedMovies.isEmpty()))\r\n          data = data.concat(\",\").concat(watched);\r\n        else if((toWatchMovies.isEmpty()))\r\n           data = data.concat(\",\").concat(toWatch);\r\n        return data;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/User.java b/src/main/java/com/example/watch_it/User.java
--- a/src/main/java/com/example/watch_it/User.java	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/src/main/java/com/example/watch_it/User.java	(date 1702766504491)
@@ -16,12 +16,14 @@
     private LocalDate startDate;
     String AllData;
 
+
+
     // This List Access By User
-    ArrayList<Movie> Movies_For_Later = new ArrayList<>();
-    ArrayList<String> toWatchMovies = new ArrayList<>();
+    ArrayList<Movie> Movies_For_Later = new ArrayList<Movie>();
+    ArrayList<String> toWatchMovies = new ArrayList<String>();
     // This List Access By UserWatchRecord
-    ArrayList<UserWatchRecord> Watched_Movies = new ArrayList<>();
-    ArrayList<String> watchedMovies = new ArrayList<>();
+    ArrayList<UserWatchRecord> Watched_Movies = new ArrayList<UserWatchRecord>();
+    ArrayList<String> watchedMovies = new ArrayList<String>();
     public static ArrayList<User> allusers = new ArrayList<User>();
 
     /****use it as ID to be unique(static variable) and display it in message to each user*****/
@@ -56,8 +58,33 @@
         this.Email = email;
         this.Password = password;
         this.startDate = LocalDate.parse(stardDate);
+        this.profilePath = profilePath;
+    }
+    public User(int id, String user_name, String last_Name, String first_Name, String email, String password, String profilePath, Subscription plan, String stardDate)
+    {
+        this.User_ID =id;
+        this.User_Name = user_name;
+        this.Last_Name = last_Name;
+        this.First_Name = first_Name;
+        this.Email = email;
+        this.Password = password;
+        this.startDate = LocalDate.parse(stardDate);
+        this.subscription = plan;
+        this.profilePath = profilePath;
+        if (plan.getPlan().equals(Subscription.Plans.BASIC))
+            setPlan("basic");
+        if (plan.getPlan().equals(Subscription.Plans.STANDARD))
+            setPlan("standard");
+        if (plan.getPlan().equals(Subscription.Plans.PREMIUM))
+            setPlan("premium");
+    }
+    public Subscription getSubscription() {
+        return subscription;
     }
 
+    public void setSubscription(Subscription subscription) {
+        this.subscription = subscription;
+    }
     // handle by GUI Answer the button that user click on it.
     public void UpDate_Data_User(String Answer , String info)
     {
@@ -149,6 +176,14 @@
     public String getPlan(){
         return plan;
     }
+    public ArrayList<UserWatchRecord> getWatched_Movies() {
+        return Watched_Movies;
+    }
+
+    public ArrayList<Movie> getMovies_For_Later() {
+        return Movies_For_Later;
+    }
+
     /****Set the data of Subscription****/
     public void Subscribe(int id , Subscription.Plans plan)
     {
@@ -197,38 +232,18 @@
     @Override
     public String toString(){
         String data ="";
-//        data = data.concat("user").concat(",").concat(this.User_Name).concat(",").concat(String.valueOf(getPassword())).concat(",").concat(String.valueOf(allusers.size()).concat(",").concat(getFirst_Name()).concat(",").concat(getLast_Name()).concat(",").concat(plan).concat(",").concat(getEmail()).concat(",").concat(LocalDate.now().toString()).concat(",").concat(profilePath));
-        String watched="";
-        String toWatch="";
-   /*     ArrayList<String> watched = new ArrayList<String>();
-        ArrayList<String> toWatch = new ArrayList<String>();*/
-     //   Admin.getUserMovieLists();
-        for(int i=0; i<watchedMovies.size(); i++){
-            watched=watched.concat("watched").concat(",");
-            if(i<watchedMovies.size()-1){
-                watched = watched.concat(watchedMovies.get(i).concat(","));
-                System.out.println("there's watched");
-            }
-            else {
-                watched = watched.concat(watchedMovies.get(i));
-            }
+        data = data.concat("user").concat(",").concat(getUser_Name()).concat(",").concat(getPassword()).concat(",").concat(Integer.toString(getUser_ID()));
+        data = data.concat(",").concat(getFirst_Name()).concat(",").concat(getLast_Name()).concat(",").concat(getPlan()).concat(",").concat(getEmail()).concat(",").concat(getSubscription().getStartDate().toString()).concat(",").concat(getProfilePath());
+
+        data = data.concat("to be watched").concat(",");
+        for (String toWatchMovie : toWatchMovies) {
+            data = data.concat(toWatchMovie).concat(",");
         }
-        for(int i=0; i<toWatchMovies.size(); i++){
-            watched=watched.concat("to be watched").concat(",");
-            if(i<toWatchMovies.size()-1){
-                toWatch = toWatch.concat(toWatchMovies.get(i).concat(","));
-            }
-            else
-                toWatch = toWatch.concat(toWatchMovies.get(i));
+        data = data.concat("watched").concat(",");
+        for (UserWatchRecord watchedMovie : Watched_Movies) {
+            data = data.concat(watchedMovie.getMovie().getTitle()).concat(",").concat(String.valueOf(watchedMovie.getRating())).concat(",");
         }
-        System.out.println(watched);
-        System.out.println(toWatch);
-        if(watchedMovies.isEmpty() && toWatchMovies.isEmpty())
-            return data;
-        if((watchedMovies.isEmpty()))
-          data = data.concat(",").concat(watched);
-        else if((toWatchMovies.isEmpty()))
-           data = data.concat(",").concat(toWatch);
+        data = data.concat("done").concat(",");
         return data;
     }
 }
Index: src/main/java/com/example/watch_it/Admin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.io.*;\r\nimport java.time.Month;\r\nimport java.time.Period;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.time.LocalDate;\r\nimport java.util.Map;\r\n\r\npublic class Admin {\r\n    private String username;\r\n    private int password;\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public int getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(int password) {\r\n        this.password = password;\r\n    }\r\n\r\n    //counters gonna be pairs ,key for the enum class value for repentance -- javafx???\r\n    public static int basicPlanCounter;\r\n    public static int standardPlanCounter;\r\n    public static int premiumPlanCounter;\r\n    private  static final int MONTHSNUMBER = 12;\r\n    static final short PLANINDEX = 6;\r\n    static final short USERNAMEINDEX = 1;\r\n    static final short TYPEINDEX = 0;\r\n    static final short PASSWORDINDEX = 2;\r\n    static final short FIRSTNAMEINDEX = 4;\r\n    static final short LASTNAMEINDEX = 5;\r\n    static final short PROFILEPICINDEX = 9;\r\n    static final short EMAILINDEX = 7;\r\n    static final short IDINDEX = 3;\r\n    private static short STARTDATEINDEX = 8;\r\n\r\n    public static ArrayList<String> movies = new ArrayList<String>();\r\n    public static ArrayList<String> directors = new ArrayList<String>();\r\n    public static ArrayList<String> casts = new ArrayList<String>();\r\n    public static ArrayList<String> admins = new ArrayList<String>();\r\n    public static ArrayList<String> users = new ArrayList<String>();\r\n    public static void readFile(File file) {\r\n        ArrayList<String> arrayList = new ArrayList<String>();\r\n        try {\r\n            String line = \"\";\r\n            BufferedReader b = new BufferedReader(new FileReader(file));\r\n            while ((line = b.readLine()) != null) {\r\n                String [] row = line.split(\",\");\r\n                if(row[TYPEINDEX].equals(\"user\"))\r\n                    users.add(line);\r\n                else if (row[TYPEINDEX].equals(\"cast\"))\r\n                    casts.add(line);\r\n                else if(row[TYPEINDEX].equals(\"director\"))\r\n                    directors.add(line);\r\n                else\r\n                    admins.add(line);\r\n            }\r\n            b.close();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    public static void readMovies(File file) {\r\n        ArrayList<String> arrayList = new ArrayList<String>();\r\n        try {\r\n            String line = \"\";\r\n            BufferedReader b = new BufferedReader(new FileReader(file));\r\n            while ((line = b.readLine()) != null) {\r\n                movies.add(line);\r\n            }\r\n            b.close();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    public static void writeOnFile(File file){\r\n        try {\r\n            BufferedWriter b = new BufferedWriter(new FileWriter(file));\r\n            for(String index:users){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            //userwatchrecord wel to watch list tt handle fe l to string func 3nd el user\r\n            /*for (User user : User.allusers){\r\n                b.write(user.toString());\r\n                b.newLine();\r\n            }*/\r\n            for(String index:casts){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:directors){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            for(String index:admins){\r\n                b.write(index);\r\n                b.newLine();\r\n            }\r\n            b.close();\r\n        }\r\n        catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    //if the record exists in database >> gonna return the whole record[don't forget to split it]\r\n    //otherwise gonna return null [make sure to check before dealing with return val].\r\n\r\n    //returned string isn't splitted\r\n    public static String existsInFile(String username){\r\n        boolean exist = false;\r\n        String[] eachLine;\r\n        for (String index: users){\r\n            eachLine = index.split(\",\");\r\n            if(eachLine[USERNAMEINDEX].equals(username)){\r\n                return index;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    //record to be deleted is not splitted\r\n    public static void deleteOneRecord(ArrayList<String> arrayList, String record){\r\n        arrayList.remove(record);\r\n    }\r\n\r\n    //working just fine ^^^\r\n    static Subscription.Plans getMostSubscripedPlan(){\r\n        Subscription.Plans plan = null;\r\n        HashMap<Integer,Subscription.Plans> map = new HashMap<>();\r\n\r\n        map.put(basicPlanCounter,Subscription.Plans.BASIC);\r\n        map.put(standardPlanCounter,Subscription.Plans.STANDARD);\r\n        map.put(premiumPlanCounter,Subscription.Plans.PREMIUM);\r\n\r\n        int max = Math.max(standardPlanCounter,Math.max(basicPlanCounter,premiumPlanCounter));\r\n\r\n        plan = map.get(max);\r\n\r\n        return plan;\r\n    }\r\n    static void getUsersInEachPlan(){\r\n        basicPlanCounter = 0;\r\n        standardPlanCounter = 0;\r\n        premiumPlanCounter = 0;\r\n        for (String index: users){\r\n            String []line = index.split(\",\");\r\n            HashMap<Integer,Subscription.Plans> map = new HashMap<>();\r\n            if(line[PLANINDEX].equals(\"basic\"))\r\n                basicPlanCounter++;\r\n            else if (line[PLANINDEX].equals(\"standard\"))\r\n                standardPlanCounter++;\r\n            else\r\n                premiumPlanCounter++;\r\n        }\r\n    }\r\n\r\n    //assuming all dates are valid and users still subscribed.\r\n    public static int getMonth(Month month){\r\n        return switch (month) {\r\n            case JANUARY -> 1;\r\n            case FEBRUARY -> 2;\r\n            case MARCH -> 3;\r\n            case APRIL -> 4;\r\n            case MAY -> 5;\r\n            case JUNE -> 6;\r\n            case JULY -> 7;\r\n            case AUGUST -> 8;\r\n            case SEPTEMBER -> 9;\r\n            case OCTOBER -> 10;\r\n            case NOVEMBER -> 11;\r\n            case DECEMBER -> 12;\r\n        };\r\n    }\r\n    public static Month getMonth(int monthNumber){\r\n        return switch (monthNumber) {\r\n            case 1 -> Month.JANUARY;\r\n            case 2 -> Month.FEBRUARY;\r\n            case 3 -> Month.MARCH;\r\n            case 4 -> Month.APRIL;\r\n            case 5 -> Month.MAY;\r\n            case 6 -> Month.JUNE;\r\n            case 7 -> Month.JULY;\r\n            case 8 -> Month.AUGUST;\r\n            case 9 -> Month.SEPTEMBER;\r\n            case 10 -> Month.OCTOBER;\r\n            case 11 -> Month.NOVEMBER;\r\n            case 12 -> Month.DECEMBER;\r\n            default -> null;\r\n        };\r\n    }\r\n\r\n    static Month monthWithMostRevenue(){\r\n        Month month = null;\r\n        int [] monthsRevenue = new int[MONTHSNUMBER];\r\n        for(String user: users){\r\n            String[] data = user.split(\",\");\r\n            String plan = data[PLANINDEX];\r\n            LocalDate startDate = LocalDate.parse(data[STARTDATEINDEX]);\r\n            LocalDate todaysDate = LocalDate.now();\r\n            int startMonth = getMonth(startDate.getMonth());\r\n            int todaysmonth = getMonth(todaysDate.getMonth());\r\n            int differenceMonths = todaysmonth - startMonth;\r\n            if(startDate.getYear() != todaysDate.getYear())\r\n                differenceMonths = (MONTHSNUMBER - startMonth) + todaysmonth;\r\n\r\n            while(differenceMonths >= 0){\r\n                if(plan.equals(\"basic\")){\r\n                    monthsRevenue[(startMonth + differenceMonths)] += 10;\r\n                }\r\n                else if (plan.equals(\"standard\")) {\r\n                    monthsRevenue[(startMonth + differenceMonths)] += 20;\r\n                }\r\n                else{\r\n                    monthsRevenue[(startMonth + differenceMonths)] += 30;\r\n                }\r\n                differenceMonths--;\r\n            }\r\n        }\r\n        int []check = new int[MONTHSNUMBER];\r\n        System.arraycopy(monthsRevenue, 0, check, 0, MONTHSNUMBER);\r\n        Arrays.sort(check);\r\n        int recuiredMonth = 0;\r\n        for(int i=0; i<MONTHSNUMBER; i++){\r\n            if(monthsRevenue[i] == check[1])\r\n            {\r\n                recuiredMonth = i + 1;\r\n                break;\r\n            }\r\n        }\r\n        return getMonth(recuiredMonth);\r\n    }\r\n    //******************************************************************\r\n    static void getUserMovieLists(User user){\r\n        ArrayList<String> watched_movies = new ArrayList<String>();\r\n        ArrayList<String> toBeWatched_movies = new ArrayList<String>();\r\n        boolean toBeWatched = false;\r\n        boolean watched = false;\r\n        int watchedCounter = -1;\r\n        int toBeWatchedCounter = 0;\r\n        String allData = existsInFile(user.getUser_Name());\r\n        String[] eachLine = allData.split(\",\");\r\n        for (String data:eachLine) {\r\n            if(data.equals(\"watched\"))\r\n                watched = true;\r\n            if(data.equals(\"to be watched\")) {\r\n                watched = false;\r\n                toBeWatched = true;\r\n            }\r\n            if(watched) {\r\n                if(watchedCounter != -1)\r\n                    watched_movies.add(data);\r\n                watchedCounter++;\r\n            }\r\n            if(toBeWatchedCounter == 1 && !watched)\r\n                toBeWatched_movies.add(data);\r\n            if (toBeWatched)\r\n                toBeWatchedCounter = 1;\r\n            System.out.println(\"watched\" + watched_movies);\r\n            System.out.println(\"to be watched\" + toBeWatched_movies);\r\n            user.watchedMovies.addAll(watched_movies);\r\n            user.toWatchMovies.addAll(toBeWatched_movies);\r\n\r\n        }\r\n    }\r\n\r\n    static void getUserMovieLists(String user, ArrayList<String> watched_movies, ArrayList<String> toBeWatched_movies){\r\n        boolean toBeWatched = false;\r\n        boolean watched = false;\r\n        int watchedCounter = -1;\r\n        int toBeWatchedCounter = 0;\r\n        String[] eachLine = user.split(\",\");\r\n        for (String data:eachLine) {\r\n            if(data.equals(\"watched\"))\r\n                watched = true;\r\n            if(data.equals(\"to be watched\")) {\r\n                watched = false;\r\n                toBeWatched = true;\r\n            }\r\n            if(watched) {\r\n                watchedCounter++;\r\n                if(watchedCounter != 0 && watchedCounter%2!=0)\r\n                    watched_movies.add(data);\r\n            }\r\n            if(toBeWatched && toBeWatchedCounter == 1)\r\n                toBeWatched_movies.add(data);\r\n            if (toBeWatched && toBeWatchedCounter == 0)\r\n                toBeWatchedCounter = 1;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //as objects-------------------\r\n    static void getUserMovieLists_obj(User user){\r\n\r\n/*\r\n        String userData = existsInFile(user.getUser_Name());\r\n        ArrayList<String> watched = new ArrayList<String>();\r\n        ArrayList<String> toWatch = new ArrayList<String>();\r\n*/\r\n\r\n        getUserMovieLists(user);\r\n        ArrayList<Movie> toWatchList = new ArrayList<Movie>();\r\n        for(String movie: user.toWatchMovies){\r\n            toWatchList.add(getOneMovie(movie));\r\n        }\r\n        ArrayList<UserWatchRecord> watched_movies = new ArrayList<UserWatchRecord>();\r\n        Movie movie = new Movie();\r\n        int rate = -1;\r\n        for(int i=0; i<user.watchedMovies.size(); i++){\r\n            if(i%2 == 0){\r\n                movie  = getOneMovie(user.watchedMovies.get(i));\r\n                rate = Integer.parseInt(user.watchedMovies.get(i+1));\r\n                UserWatchRecord u = new UserWatchRecord(movie,rate);\r\n                watched_movies.add(u);\r\n\r\n            }\r\n        }\r\n        user.Movies_For_Later.addAll(toWatchList);\r\n        user.Watched_Movies.addAll(watched_movies);\r\n    }\r\n    static UserWatchRecord getWatchedMovie(String title, int rate){\r\n        UserWatchRecord movie = new UserWatchRecord();\r\n        for (String oneMovie: movies){\r\n            String []arr = oneMovie.split(\",\");\r\n            if(arr[1].equals(title))\r\n            {\r\n                movie.setMovie(getOneMovie_(oneMovie));\r\n                movie.setRating(rate);\r\n            }\r\n        }\r\n        return movie;\r\n    }\r\n    static ArrayList<Movie> getMoviesObjs(){\r\n        ArrayList<Movie> arrayList = new ArrayList<Movie>();\r\n        for(String s: movies){\r\n            arrayList.add(getOneMovie_(s));\r\n        }\r\n        return arrayList;\r\n    }\r\n    static Movie getOneMovie_(String movieString){\r\n        Movie movie = new Movie();\r\n        String[] arr = movieString.split(\",\");\r\n        movie.setTitle(arr[1]);\r\n        movie.setId(Integer.parseInt(arr[0]));\r\n        movie.setRelease_date(LocalDate.parse(arr[3]));\r\n        movie.setDescription(arr[2]);\r\n        movie.setRunning_time(arr[4]);\r\n        movie.setBudget(arr[9]);\r\n        movie.setCountry(arr[8]);\r\n        movie.setLanguage(arr[6]);\r\n        movie.setImdb_score(Integer.parseInt(arr[7]));\r\n        movie.setRevenue(arr[10]);\r\n        movie.setPoster_path(arr[11]);\r\n        movie.setDirector(getDirector(arr[5]));\r\n        movie.setDirectorName(arr[5]);\r\n        ArrayList<String> cast = new ArrayList<String>();\r\n        ArrayList<String> genres = new ArrayList<String>();\r\n        castAndGenres(movieString,cast,genres);\r\n        movie.setCastNames(cast);\r\n        movie.setGenre(genres);\r\n        ArrayList<Cast> movieCast = new ArrayList<Cast>();\r\n        for (String castString: cast){\r\n            movieCast.add(getCast(castString));\r\n        }\r\n        movie.setCast(movieCast);\r\n        return movie;\r\n    }\r\n    static Movie getOneMovie (String title){\r\n        Movie movie = new Movie();\r\n        for (String oneMovie : movies) {\r\n            String[] arr = oneMovie.split(\",\");\r\n            if (arr[1].equals(title)) {\r\n                movie.setTitle(arr[1]);\r\n                movie.setId(Integer.parseInt(arr[0]));\r\n                movie.setRelease_date(LocalDate.parse(arr[3]));\r\n                movie.setDescription(arr[2]);\r\n                movie.setRunning_time(arr[4]);\r\n                movie.setBudget(arr[9]);\r\n                movie.setCountry(arr[8]);\r\n                movie.setLanguage(arr[6]);\r\n                movie.setImdb_score(Integer.parseInt(arr[7]));\r\n                movie.setRevenue(arr[10]);\r\n                movie.setPoster_path(arr[11]);\r\n                movie.setDirector(getDirector(arr[5]));\r\n                ArrayList<String> cast = new ArrayList<String>();\r\n                ArrayList<String> genres = new ArrayList<String>();\r\n                movie.setGenre(genres);\r\n                castAndGenres(oneMovie,cast,genres);\r\n                ArrayList<Cast> cast_obj = new ArrayList<Cast>();\r\n                for(String casts: cast){\r\n                    cast_obj.add(getCast(casts));\r\n                }\r\n                movie.setCast(cast_obj);\r\n            }\r\n        }\r\n        return movie;\r\n    }\r\n    public static void castAndGenres(String Movie, ArrayList<String> cast_, ArrayList<String> genres){\r\n        //cast first then genres\r\n        boolean cast = false;\r\n        boolean genre = false;\r\n        int castCounter = -1;\r\n        int genreCounter = -1;\r\n        String[] eachLine = Movie.split(\",\");\r\n        for (String data:eachLine) {\r\n            if(data.equals(\"cast\"))\r\n                cast = true;\r\n            else if(data.equals(\"genres\")) {\r\n                cast = false;\r\n                genre = true;\r\n            }\r\n            if(cast) {\r\n                castCounter++;\r\n                if(castCounter != 0)\r\n                    cast_.add(data);\r\n            }\r\n            else if(genre) {\r\n                genreCounter ++;\r\n                if(genreCounter != 0)\r\n                    genres.add(data);\r\n            }\r\n        }\r\n    }\r\n    static ArrayList<Director> getAllDirectors(){\r\n        ArrayList<Director> arrayList = new ArrayList<Director>();\r\n        for(String oneDirector: directors){\r\n            String[] arr = oneDirector.split(\",\");\r\n            String name =\"\";\r\n            name = name.concat(arr[1]).concat(\" \").concat(arr[2]);\r\n            arrayList.add(getDirector(name));\r\n        }\r\n        return arrayList;\r\n    }\r\n    static Director getDirector(String directorName){\r\n        Director director = new Director();\r\n        String[] name = directorName.split(\" \");\r\n        for (String oneDirector:directors){\r\n            String[] data = oneDirector.split(\",\");\r\n            if(data[1].equals(name[0]) && data[2].equals(name[1])){\r\n                director.setFirst_Name(data[1]);\r\n                director.setSecond_Name(data[2]);\r\n                director.setAge(Integer.parseInt(data[3]));\r\n                director.setGender(data[4]);\r\n                director.setNationality(data[5]);\r\n                ArrayList<String> arrayList = new ArrayList<String>();\r\n                for(int i=data.length - 1; i>5; i--){\r\n                    arrayList.add(data[i]);\r\n                }\r\n                director.setMovies(arrayList);\r\n            }\r\n        }\r\n        return director;\r\n    }\r\n    static ArrayList<Cast> getAllCast(){\r\n        ArrayList<Cast> allcast = new ArrayList<Cast>();\r\n        for(String oneCast: casts){\r\n            String[] arr = oneCast.split(\",\");\r\n            String name =\"\";\r\n            name = name.concat(arr[1]).concat(\" \").concat(arr[2]);\r\n            allcast.add(getCast(name));\r\n        }\r\n        return allcast;\r\n    }\r\n    static Cast getCast(String name){\r\n        //ArrayList<Cast> cast = new ArrayList<Cast>();\r\n        Cast eachCast = new Cast();\r\n        String[] castName = name.split(\" \");\r\n        for (String oneCast: casts){\r\n            String[] data = oneCast.split(\",\");\r\n            if(data[1].equals(castName[0]) && data[2].equals(castName[1])){\r\n                eachCast.setFirst_Name(data[1]);\r\n                eachCast.setSecond_Name(data[2]);\r\n                eachCast.setGender(data[4]);\r\n                eachCast.setAge(Integer.parseInt(data[3]));\r\n                eachCast.setNationality(data[5]);\r\n                ArrayList<String> arrayList = new ArrayList<String>();\r\n                for(int i=data.length - 1; i>5; i--){\r\n                    arrayList.add(data[i]);\r\n                }\r\n                eachCast.setMovies(arrayList);\r\n            }\r\n        }\r\n        return eachCast;\r\n    }\r\n    //name on getMovies is full name >> first and last combined.\r\n    static ArrayList<User> getAllUsers(){\r\n        ArrayList<User> userArrayList = new ArrayList<User>();\r\n        for(int i=0; i<users.size(); i++){\r\n            String[] data =users.get(i).split(\",\");\r\n            User user = new User(User.allusers.size()+1,data[USERNAMEINDEX], data[LASTNAMEINDEX],data[FIRSTNAMEINDEX],data[EMAILINDEX],data[PASSWORDINDEX],data[PROFILEPICINDEX], data[PLANINDEX] , data[STARTDATEINDEX]);\r\n            userArrayList.add(user);\r\n        }\r\n        getUsersInEachPlan();\r\n        return userArrayList;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Admin.java b/src/main/java/com/example/watch_it/Admin.java
--- a/src/main/java/com/example/watch_it/Admin.java	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/src/main/java/com/example/watch_it/Admin.java	(date 1702765526103)
@@ -10,7 +10,7 @@
 
 public class Admin {
     private String username;
-    private int password;
+    private String password;
 
     public String getUsername() {
         return username;
@@ -20,11 +20,11 @@
         this.username = username;
     }
 
-    public int getPassword() {
+    public String getPassword() {
         return password;
     }
 
-    public void setPassword(int password) {
+    public void setPassword(String password) {
         this.password = password;
     }
 
@@ -48,7 +48,12 @@
     public static ArrayList<String> directors = new ArrayList<String>();
     public static ArrayList<String> casts = new ArrayList<String>();
     public static ArrayList<String> admins = new ArrayList<String>();
+    public static ArrayList<Admin> allAdmins = new ArrayList<Admin>();
     public static ArrayList<String> users = new ArrayList<String>();
+    public Admin(String username, String password ){
+        this.password = password;
+        this.username = username;
+    }
     public static void readFile(File file) {
         ArrayList<String> arrayList = new ArrayList<String>();
         try {
@@ -86,25 +91,20 @@
     public static void writeOnFile(File file){
         try {
             BufferedWriter b = new BufferedWriter(new FileWriter(file));
-            for(String index:users){
-                b.write(index);
-                b.newLine();
-            }
-            //userwatchrecord wel to watch list tt handle fe l to string func 3nd el user
-            /*for (User user : User.allusers){
+            for (User user : User.allusers){
                 b.write(user.toString());
                 b.newLine();
-            }*/
-            for(String index:casts){
-                b.write(index);
+            }
+            for (Cast cast: Cast.allCast){
+                b.write(cast.toString());
                 b.newLine();
             }
-            for(String index:directors){
-                b.write(index);
+            for (Director director: Director.allDirectors){
+                b.write(director.toString());
                 b.newLine();
             }
-            for(String index:admins){
-                b.write(index);
+            for (Admin admin: allAdmins){
+                b.write(admin.toString());
                 b.newLine();
             }
             b.close();
@@ -241,94 +241,55 @@
     }
     //******************************************************************
     static void getUserMovieLists(User user){
-        ArrayList<String> watched_movies = new ArrayList<String>();
-        ArrayList<String> toBeWatched_movies = new ArrayList<String>();
+
         boolean toBeWatched = false;
         boolean watched = false;
-        int watchedCounter = -1;
+        int watchedCounter = 0;
         int toBeWatchedCounter = 0;
         String allData = existsInFile(user.getUser_Name());
         String[] eachLine = allData.split(",");
         for (String data:eachLine) {
-            if(data.equals("watched"))
+            if(data.equals("done"))
+                break;
+            if(data.equals("watched")) {
                 watched = true;
+                toBeWatched = false;
+            }
             if(data.equals("to be watched")) {
-                watched = false;
                 toBeWatched = true;
-            }
-            if(watched) {
-                if(watchedCounter != -1)
-                    watched_movies.add(data);
-                watchedCounter++;
-            }
-            if(toBeWatchedCounter == 1 && !watched)
-                toBeWatched_movies.add(data);
-            if (toBeWatched)
-                toBeWatchedCounter = 1;
-            System.out.println("watched" + watched_movies);
-            System.out.println("to be watched" + toBeWatched_movies);
-            user.watchedMovies.addAll(watched_movies);
-            user.toWatchMovies.addAll(toBeWatched_movies);
-
-        }
-    }
-
-    static void getUserMovieLists(String user, ArrayList<String> watched_movies, ArrayList<String> toBeWatched_movies){
-        boolean toBeWatched = false;
-        boolean watched = false;
-        int watchedCounter = -1;
-        int toBeWatchedCounter = 0;
-        String[] eachLine = user.split(",");
-        for (String data:eachLine) {
-            if(data.equals("watched"))
-                watched = true;
-            if(data.equals("to be watched")) {
                 watched = false;
-                toBeWatched = true;
             }
             if(watched) {
+                if(watchedCounter != 0) {
+                    user.watchedMovies.add(data);
+                }
                 watchedCounter++;
-                if(watchedCounter != 0 && watchedCounter%2!=0)
-                    watched_movies.add(data);
             }
-            if(toBeWatched && toBeWatchedCounter == 1)
-                toBeWatched_movies.add(data);
+            if(toBeWatched && toBeWatchedCounter == 1) {
+                user.toWatchMovies.add(data);
+            }
             if (toBeWatched && toBeWatchedCounter == 0)
                 toBeWatchedCounter = 1;
         }
     }
-
-
-
     //as objects-------------------
     static void getUserMovieLists_obj(User user){
-
-/*
-        String userData = existsInFile(user.getUser_Name());
-        ArrayList<String> watched = new ArrayList<String>();
-        ArrayList<String> toWatch = new ArrayList<String>();
-*/
-
         getUserMovieLists(user);
-        ArrayList<Movie> toWatchList = new ArrayList<Movie>();
         for(String movie: user.toWatchMovies){
-            toWatchList.add(getOneMovie(movie));
+          user.Movies_For_Later.add(getOneMovie(movie));
         }
-        ArrayList<UserWatchRecord> watched_movies = new ArrayList<UserWatchRecord>();
-        Movie movie = new Movie();
-        int rate = -1;
         for(int i=0; i<user.watchedMovies.size(); i++){
             if(i%2 == 0){
+                Movie movie;
                 movie  = getOneMovie(user.watchedMovies.get(i));
-                rate = Integer.parseInt(user.watchedMovies.get(i+1));
+                int rate = Integer.parseInt(user.watchedMovies.get(i+1));
                 UserWatchRecord u = new UserWatchRecord(movie,rate);
-                watched_movies.add(u);
-
+                user.Watched_Movies.add(u);
             }
         }
-        user.Movies_For_Later.addAll(toWatchList);
-        user.Watched_Movies.addAll(watched_movies);
     }
+
+
     static UserWatchRecord getWatchedMovie(String title, int rate){
         UserWatchRecord movie = new UserWatchRecord();
         for (String oneMovie: movies){
@@ -498,10 +459,55 @@
         ArrayList<User> userArrayList = new ArrayList<User>();
         for(int i=0; i<users.size(); i++){
             String[] data =users.get(i).split(",");
-            User user = new User(User.allusers.size()+1,data[USERNAMEINDEX], data[LASTNAMEINDEX],data[FIRSTNAMEINDEX],data[EMAILINDEX],data[PASSWORDINDEX],data[PROFILEPICINDEX], data[PLANINDEX] , data[STARTDATEINDEX]);
+            Subscription.Plans plan = null;
+            double price = 0;
+            if(data[PLANINDEX].equals("basic")) {
+                plan = Subscription.Plans.BASIC;
+                price = 100;
+            }
+            if(data[PLANINDEX].equals("standard")) {
+                plan = Subscription.Plans.STANDARD;
+                price = 200;
+            }
+            if(data[PLANINDEX].equals("premium")) {
+                plan = Subscription.Plans.PREMIUM;
+                price = 300;
+            }
+            Subscription subscription = new Subscription(User.allusers.size()+1,plan);
+            User user = new User(User.allusers.size()+1,data[USERNAMEINDEX], data[LASTNAMEINDEX],data[FIRSTNAMEINDEX],data[EMAILINDEX],data[PASSWORDINDEX],data[PROFILEPICINDEX], subscription, data[STARTDATEINDEX]);
+            getUserMovieLists_obj(user);
+            user.getSubscription().setPlan(plan);
+            user.setPlan(data[PLANINDEX]);
+            user.getSubscription().setPrice(price);
+            System.out.println("----------------------");
+            user.getSubscription().setStartDate(LocalDate.parse(data[STARTDATEINDEX]));
+            System.out.println(user.getSubscription().getPrice());
+            System.out.println(user.getSubscription().getMoviesWatched());
+            System.out.println(user.getSubscription().getPlan());
+            System.out.println(user.getSubscription().getUserID());
+            int moviesCounter = 0;
+            for (UserWatchRecord movie: user.Watched_Movies){
+                moviesCounter++;
+            }
+            user.getSubscription().setMoviesWatched(moviesCounter);
             userArrayList.add(user);
         }
         getUsersInEachPlan();
         return userArrayList;
     }
+    static ArrayList<Admin> getAllAdmins(){
+        ArrayList<Admin> adminArrayList = new ArrayList<Admin>();
+        for(String oneAdmin : admins){
+            String []data = oneAdmin.split(",");
+            Admin admin = new Admin(data[USERNAMEINDEX], data[PASSWORDINDEX]);
+            adminArrayList.add(admin);
+        }
+        return adminArrayList;
+    }
+    @Override
+    public String toString(){
+        String data ="";
+        data = data.concat("admin").concat(",").concat(getUsername()).concat(",").concat(getPassword());
+        return data;
+    }
 }
Index: src/main/java/com/example/watch_it/Artist.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic abstract class Artist {\r\n    private String First_Name;\r\n    private String Second_Name;\r\n    private String Gender;\r\n    private String Nationality;\r\n    private int Age;\r\n    ArrayList<String> Movies = new ArrayList<String>();\r\n\r\n    public String getFirst_Name() {\r\n        return First_Name;\r\n    }\r\n\r\n    public String getSecond_Name() {\r\n        return Second_Name;\r\n    }\r\n\r\n    public String getNationality() {\r\n        return Nationality;\r\n    }\r\n\r\n    public String getGender() {\r\n        return Gender;\r\n    }\r\n\r\n    public int getAge() {\r\n        return Age;\r\n    }\r\n\r\n    public ArrayList<String> getMovies() {\r\n        return Movies;\r\n    }\r\n\r\n\r\n    public void setFirst_Name(String first_Name) {\r\n        First_Name = first_Name;\r\n    }\r\n\r\n    public void setSecond_Name(String second_Name) {\r\n        Second_Name = second_Name;\r\n    }\r\n\r\n    public void setNationality(String nationality) {\r\n        Nationality = nationality;\r\n    }\r\n\r\n    public void setGender(String gender) {\r\n        Gender = gender;\r\n    }\r\n\r\n    public void setAge(int age) {\r\n        Age = age;\r\n    }\r\n\r\n    public void setMovies(ArrayList<String> movies) {\r\n        Movies = movies;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Artist.java b/src/main/java/com/example/watch_it/Artist.java
--- a/src/main/java/com/example/watch_it/Artist.java	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/src/main/java/com/example/watch_it/Artist.java	(date 1702762675024)
@@ -58,4 +58,6 @@
     public void setMovies(ArrayList<String> movies) {
         Movies = movies;
     }
+    @Override
+    public abstract String toString();
 }
\ No newline at end of file
Index: src/main/java/com/example/watch_it/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\npublic class HelloApplication extends Application {\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n        File file = new File(\"data.txt\");\r\n        File movieFile = new File(\"movies-data.txt\");\r\n        Admin.readFile(file);;\r\n        Admin.readMovies(movieFile);\r\n        Director.allDirectors.addAll(Admin.getAllDirectors());\r\n        User.allusers.addAll(Admin.getAllUsers());\r\n        Cast.allCast.addAll(Admin.getAllCast());\r\n        Movie.allmovies.addAll(Admin.getMoviesObjs());\r\n        Movie.getDiffGenres();\r\n        ArrayList<String> n = new ArrayList<String>();\r\n        n.add(\"hi\");\r\n        n.add(\"hi\");\r\n        n.add(\"hi\");\r\n        n.add(\"hi\");\r\n        String test =\"\";\r\n        for(int i=0; i<n.size(); i++){\r\n            if(i<n.size()-1){\r\n                test = test.concat(n.get(i).concat(\",\"));\r\n            }\r\n            else\r\n                test= test.concat(n.get(i));\r\n        }\r\n\r\n        User user = User.GetUser(\"nada\");\r\n\r\n        Admin.getUserMovieLists(Admin.existsInFile(user.getUser_Name()),user.watchedMovies, user.toWatchMovies);\r\n\r\n        for(String movie: user.watchedMovies){\r\n            System.out.println(movie + \"/wa/\");\r\n        }\r\n\r\n        for(String movie: user.toWatchMovies){\r\n            System.out.println(movie + \"/to/\");\r\n        }\r\n       // Admin.getUserMovieLists_obj(user);\r\n      /*  for(Movie movie: user.Movies_For_Later){\r\n            System.out.println(movie.getTitle());\r\n        }\r\n        for(UserWatchRecord movie: user.Watched_Movies){\r\n                    System.out.println(movie.movie.getTitle()+ \"  \" + movie.getRating() );\r\n        }*/\r\n        Admin.getUserMovieLists(user);\r\n\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"first-page.fxml\"));\r\n        Parent root;\r\n        try {\r\n            root = loader.load();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        First controller = loader.getController();\r\n        controller.setStage(stage);\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(\"Movie\");\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        stage.setScene(scene);\r\n        stage.setOnCloseRequest(windowEvent -> {\r\n            Admin.writeOnFile(file);\r\n          //  System.out.println(User.allusers.get(0).toString());\r\n        });\r\n        stage.show();\r\n\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n\r\n        launch();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/HelloApplication.java b/src/main/java/com/example/watch_it/HelloApplication.java
--- a/src/main/java/com/example/watch_it/HelloApplication.java	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/src/main/java/com/example/watch_it/HelloApplication.java	(date 1702763704653)
@@ -17,44 +17,15 @@
         File movieFile = new File("movies-data.txt");
         Admin.readFile(file);;
         Admin.readMovies(movieFile);
-        Director.allDirectors.addAll(Admin.getAllDirectors());
         User.allusers.addAll(Admin.getAllUsers());
+        Director.allDirectors.addAll(Admin.getAllDirectors());
+        for(Director d: Director.allDirectors){
+            System.out.println(d.toString());
+        }
         Cast.allCast.addAll(Admin.getAllCast());
+        Admin.allAdmins.addAll(Admin.getAllAdmins());
         Movie.allmovies.addAll(Admin.getMoviesObjs());
         Movie.getDiffGenres();
-        ArrayList<String> n = new ArrayList<String>();
-        n.add("hi");
-        n.add("hi");
-        n.add("hi");
-        n.add("hi");
-        String test ="";
-        for(int i=0; i<n.size(); i++){
-            if(i<n.size()-1){
-                test = test.concat(n.get(i).concat(","));
-            }
-            else
-                test= test.concat(n.get(i));
-        }
-
-        User user = User.GetUser("nada");
-
-        Admin.getUserMovieLists(Admin.existsInFile(user.getUser_Name()),user.watchedMovies, user.toWatchMovies);
-
-        for(String movie: user.watchedMovies){
-            System.out.println(movie + "/wa/");
-        }
-
-        for(String movie: user.toWatchMovies){
-            System.out.println(movie + "/to/");
-        }
-       // Admin.getUserMovieLists_obj(user);
-      /*  for(Movie movie: user.Movies_For_Later){
-            System.out.println(movie.getTitle());
-        }
-        for(UserWatchRecord movie: user.Watched_Movies){
-                    System.out.println(movie.movie.getTitle()+ "  " + movie.getRating() );
-        }*/
-        Admin.getUserMovieLists(user);
 
         FXMLLoader loader = new FXMLLoader(getClass().getResource("first-page.fxml"));
         Parent root;
Index: src/main/java/com/example/watch_it/Cast.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.time.LocalDate;\r\nimport java.util.Locale;\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\npublic class Cast extends Artist{\r\n    static ArrayList<Cast> allCast = new ArrayList<Cast>();\r\n\r\n    public void Add_Cast(String first_name,String second_name,int age,String gender,String Nationality,ArrayList<String> movie){\r\n        Cast c=new Cast();\r\n        c.setFirst_Name(first_name);\r\n        c.setSecond_Name(second_name);\r\n        c.setAge(age);\r\n        c.setGender(gender);\r\n        c.setNationality(Nationality);\r\n        c.setMovies(movie);\r\n//      Admin.cast.add(c); static array from admin class\r\n    }\r\n    public static void Read_file(ArrayList<String> s){\r\n        for (String i:s) {\r\n            String[]row=i.split(\",\");\r\n            Cast c=new Cast();\r\n            c.setFirst_Name(row[0]);\r\n            c.setSecond_Name(row[1]);\r\n            c.setAge(Integer.parseInt(row[2]));\r\n            c.setGender(row[3]);\r\n            c.setNationality(row[4]);\r\n            for(int j=5;j<row.length;j++){\r\n                c.Movies.add(row[j]);\r\n            }\r\n//          Admin.cast.add(c);\r\n        }\r\n\r\n    }\r\n    public void Update_cast( int index,int num,String movie){\r\n\r\n//        Admin.cast.get(index).Movies.add(movie);\r\n    }\r\n    public static Cast  Search_Cast(String first_name,String second_name) {\r\n        for (Cast m : allCast) {\r\n\r\n            if (m.getFirst_Name().equals(first_name) && m.getSecond_Name().equals(second_name)) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    public int  Check(String first_name,String second_name) {\r\n        for (int i=0;i<allCast.size();i++) {\r\n\r\n            if (allCast.get(i).getFirst_Name().equals(first_name) && allCast.get(i).getSecond_Name().equals(second_name)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    public void Delete(String first_name,String second_name)\r\n    {\r\n        for (Cast c:allCast) {\r\n            if(c.getFirst_Name().equals(first_name)&&c.getSecond_Name().equals(second_name))\r\n                allCast.remove(c);\r\n            break;\r\n        }\r\n    }\r\n    public void change_arraycast(ArrayList<String>movies,ArrayList<String>arrayList)\r\n    {\r\n        String line=null;\r\n        for(Cast c:allCast)\r\n        {\r\n            String []row=new String[5+movies.size()];\r\n            String s=String.valueOf(c.getAge());\r\n            int i=5;\r\n            row[0]=c.getFirst_Name();\r\n            row[1]=c.getSecond_Name();\r\n            row[2]=s;\r\n            row[3]=c.getGender();\r\n            row[4]=c.getNationality();\r\n            for(String m:movies)\r\n            {\r\n                row[i]=m;\r\n                i++;\r\n            }\r\n            line=String.join(\",\",row);\r\n            arrayList.add(line);\r\n            System.out.println(line);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Cast.java b/src/main/java/com/example/watch_it/Cast.java
--- a/src/main/java/com/example/watch_it/Cast.java	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/src/main/java/com/example/watch_it/Cast.java	(date 1702762807036)
@@ -85,4 +85,13 @@
             System.out.println(line);
         }
     }
+    @Override
+    public String toString(){
+        String data = "";
+        data = data.concat("cast").concat(",").concat(getFirst_Name()).concat(",").concat(getSecond_Name()).concat(",").concat(Integer.toString(getAge())).concat(",").concat(getGender()).concat(",").concat(getNationality());
+        for(String movie: getMovies()){
+            data = data.concat(",").concat(movie);
+        }
+        return data;
+    }
 }
\ No newline at end of file
Index: src/main/java/com/example/watch_it/WatchRecord.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.ScrollPane;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\n\r\npublic class WatchRecord {\r\n    private Parent root;\r\n    private Stage stage;\r\n    UserWatchRecord userWatchRecord;\r\n    public boolean aBoolean;\r\n    public static final ArrayList<Movie> watchedMovies = new ArrayList<>();\r\n    @FXML\r\n    private ScrollPane Scroll;\r\n    @FXML\r\n    private HBox WatchedMovies;\r\n    @FXML\r\n    private Button Back;\r\n\r\n\r\n    public void initializeItems() {\r\n        Collections.sort(watchedMovies, Comparator.comparingInt(Movie::getUserRate).reversed());\r\n        for (Movie movie : watchedMovies) {\r\n            addToGUI(movie);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private void addToGUI(Movie movie) {\r\n        VBox movieContainer = new VBox(10);\r\n        movieContainer.setPrefWidth(300);\r\n        movieContainer.setPrefHeight(200);\r\n        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitHeight(237);\r\n        imageView.setFitWidth(220);\r\n        Label label = new Label(movie.getTitle());\r\n        label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        label.setOnMouseEntered(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: #FFC107;\"));\r\n        label.setOnMouseExited(event -> label.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\"));\r\n        Label label1 =new Label(\"Rate: \"+movie.userRate);\r\n        label1.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\");\r\n        label1.setOnMouseEntered(event -> label1.setStyle(\"-fx-text-size: 20; -fx-text-fill: #FFC107;\"));\r\n        label1.setOnMouseExited(event -> label1.setStyle(\"-fx-text-size: 20; -fx-text-fill: white;\"));\r\n        Image image1 = new Image(getClass().getResourceAsStream(\"assets/fullStar.png\"));\r\n        ImageView imageView1 = new ImageView(image1);\r\n        imageView1.setFitHeight(18);\r\n        imageView1.setFitWidth(20);\r\n        HBox box =new HBox(label1,imageView1,label);\r\n        box.setAlignment(Pos.CENTER);\r\n        box.setSpacing(6);\r\n        movieContainer.setAlignment(Pos.CENTER);\r\n        movieContainer.getChildren().addAll(imageView,box);\r\n        movieContainer.setOnMouseClicked(event -> {\r\n            try {\r\n                onMouseClickedVBox(event,movie);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        WatchedMovies.getChildren().addAll(movieContainer);\r\n\r\n    }\r\n    public void onMouseClickedVBox(MouseEvent act, Movie movie) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(getClass().getResource(\"movie-view.fxml\"));\r\n        Parent root = loader.load();\r\n        stage = (Stage)((Node)act.getSource()).getScene().getWindow();\r\n        MovieController controller=loader.getController();\r\n        controller.setStage(stage);\r\n        controller.disableButtons();\r\n        controller.disableWatch();\r\n        controller.setMovie(movie);\r\n        controller.watchMovie(movie);\r\n        controller.page5=1;\r\n        controller.setStars();\r\n        Scene scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n        Image image = new Image(getClass().getResourceAsStream(movie.getPoster_path()));\r\n        controller.refreshScreen(\"Watch Movie \"+ movie.getTitle() + \"(\"+movie.getRelease_date().getYear()+\")\", movie.getTitle(),\r\n                movie.getTitle()+\" Translated\",movie.getGenres(), movie.getDescription(),\r\n                movie.getRunning_time(), image,MainPageController.movie5.getDirectorName(),MainPageController.movie5.getCastNames());\r\n        stage.setScene(scene);\r\n        stage.show();\r\n\r\n    }\r\n    public void setUserWatchRecord(UserWatchRecord userWatchRecord){\r\n        this.userWatchRecord=userWatchRecord;\r\n    }\r\n    public void backScenes(ActionEvent event) throws IOException {\r\n\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"main-page.fxml\"));\r\n        root = loader.load();\r\n        MainPageController controller = loader.getController();\r\n        controller.setStage(stage);\r\n\r\n        stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(\"Movie\");\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    public void onMouseEntered(){\r\n        Back.setOnMouseEntered(event -> Back.setStyle(\"-fx-background-color: #FFC107;\" +\r\n                \" -fx-background-radius: 25; \" +\r\n                \"-fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n    }\r\n    public void onMouseExit(){\r\n        Back.setOnMouseExited(event -> Back.setStyle(\"-fx-background-color: black;\" +\r\n                \" -fx-background-radius: 25;\" +\r\n                \" -fx-border-color: white;\" +\r\n                \" -fx-border-radius: 25;\"));\r\n    }\r\n    /*  public void setMovieDetails(Movie movie){\r\n          if(this.movie!=null) {\r\n              this.movie = movie;\r\n              System.out.println(this.movie.getTitle());\r\n              System.out.println(this.movie.getPoster_path());\r\n          }\r\n      }*/\r\n    public void setStage(Stage stage) {\r\n        this.stage = stage;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/WatchRecord.java b/src/main/java/com/example/watch_it/WatchRecord.java
--- a/src/main/java/com/example/watch_it/WatchRecord.java	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/src/main/java/com/example/watch_it/WatchRecord.java	(date 1702752694825)
@@ -34,14 +34,14 @@
     private HBox WatchedMovies;
     @FXML
     private Button Back;
+    private User user;
 
 
     public void initializeItems() {
-        Collections.sort(watchedMovies, Comparator.comparingInt(Movie::getUserRate).reversed());
-        for (Movie movie : watchedMovies) {
-            addToGUI(movie);
+        Collections.sort(user.Watched_Movies, Comparator.comparingInt(UserWatchRecord::getRating).reversed());
+        for (UserWatchRecord movie : user.Watched_Movies) {
+                addToGUI(movie.getMovie());
         }
-
     }
 
 
@@ -144,4 +144,7 @@
     public void setStage(Stage stage) {
         this.stage = stage;
     }
+    public void setUser(User user){
+        this.user = user;
+    }
 }
Index: src/main/java/com/example/watch_it/MovieController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.Pane;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\n\r\npublic class MovieController {\r\n    private Stage stage;\r\n    private Parent root;\r\n    private Scene scene;\r\n    @FXML\r\n    private Label titleMovie;\r\n    @FXML\r\n    private Label movieName;\r\n    @FXML\r\n    private Label Film;\r\n    @FXML\r\n    private Label Genre;\r\n    @FXML\r\n    private Label duration;\r\n    @FXML\r\n    private Label description;\r\n    @FXML\r\n    private Label Director;\r\n    @FXML\r\n    private Label Cast;\r\n    @FXML\r\n    private ImageView imagePreview;\r\n    @FXML\r\n    private Button Back;\r\n    @FXML\r\n    public Button Watch;\r\n    @FXML\r\n    public Button watchLater;\r\n    @FXML\r\n    private ImageView star1;\r\n\r\n    @FXML\r\n    private ImageView star2;\r\n\r\n    @FXML\r\n    private ImageView star3;\r\n\r\n    @FXML\r\n    private ImageView star4;\r\n\r\n    @FXML\r\n    private ImageView star5;\r\n    @FXML\r\n    public Pane pane;\r\n    @FXML\r\n    private HBox starsRow;\r\n\r\n    private ImageView[] stars;\r\n    private Movie movie;\r\n    private boolean isAdmin = false;\r\n    public int page5 = 0;\r\n\r\n    int Max_Rating;\r\n    // Other fields and methods...\r\n\r\n    // Method to update the text of the first label\r\n\r\n    @FXML\r\n    private void initialize() {\r\n        stars = new ImageView[]{star1, star2, star3, star4, star5};\r\n        // Set empty star images\r\n        for (ImageView star : stars) {\r\n            star.setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/emptyStar.png\"))));\r\n        }\r\n\r\n        watchMovie(movie);\r\n        onMouseEntered();\r\n        onMouseExit();\r\n    }\r\n\r\n    public void disableButtons() {\r\n        watchLater.setDisable(true);\r\n    }\r\n\r\n    @FXML\r\n    private boolean handleStarClick(MouseEvent event) {\r\n        ImageView clickedStar = (ImageView) event.getSource();\r\n        int rating = Integer.parseInt(clickedStar.getId().substring(4)); // Extract the rating from the star's ID\r\n        for (int i = 0; i < rating; i++) {\r\n            int finalI1 = i;\r\n            stars[i].setOnMouseClicked(event1 -> {\r\n                ImageView clickedStar2 = (ImageView) event1.getSource();\r\n                int rating2 = Integer.parseInt(clickedStar2.getId().substring(4)); // Extract the rating from the star's ID\r\n                stars[finalI1].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/fullStar.png\"))));\r\n                for (int j = 0; j < rating2 + (4 - rating2); j++) {\r\n                    int finalJ = j;\r\n                    stars[j].setOnMouseExited(event2 ->\r\n                            stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/fullStar.png\")))));\r\n                }\r\n                for (int h = rating2 + (4 - rating2); h > rating2; h--) {\r\n                    int finalJ = h;\r\n                    stars[h].setOnMouseExited(event2 ->\r\n                            stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/emptyStar.png\")))));\r\n                }\r\n                Max_Rating = rating2;\r\n                movie.userRate = rating2;\r\n                for (int p = movie.userRate + (4 - movie.userRate); p >= movie.userRate; p--) {\r\n                    int finalJ = p;\r\n                    stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/emptyStar.png\"))));\r\n                    stars[p].setOnMouseExited(event2 ->\r\n                            stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/emptyStar.png\")))));\r\n                }\r\n                for (int j = 0; j < movie.userRate; j++) {\r\n                    int finalJ = j;\r\n                    stars[j].setOnMouseExited(event2 ->\r\n                            stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/fullStar.png\")))));\r\n                }\r\n            });\r\n\r\n        }\r\n        // You can perform additional actions here, such as saving the rating to a database.\r\n        return false;\r\n    }\r\n\r\n    @FXML\r\n    private void handleStarHover(MouseEvent event) {\r\n        ImageView hoveredStar = (ImageView) event.getSource();\r\n        int rating = Integer.parseInt(hoveredStar.getId().substring(4)); // Extract the rating from the star's ID\r\n        // Highlight stars\r\n\r\n        for (int i = 0; i < rating; i++) {\r\n            stars[i].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/fullStar.png\"))));\r\n        }\r\n\r\n    }\r\n\r\n    @FXML\r\n    private void resetStars() {\r\n        for (ImageView star : stars) {\r\n            star.setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/emptyStar.png\"))));\r\n        }\r\n\r\n    }\r\n\r\n    public void refreshScreen(String filmTitle, String newMovieName, String newFilm, ArrayList<String> filmGenre,\r\n                              String filmDescription, String filmDuration, Image image, String director, ArrayList<String> cast) {\r\n        String genres = \"\";\r\n        for (String genre : filmGenre) {\r\n            genres = genres.concat(genre + \" \");\r\n        }\r\n        String casts = \"\";\r\n        for (String cast1 : cast) {\r\n            casts = casts.concat(cast1 + \",\");\r\n        }\r\n        titleMovie.setText(filmTitle);\r\n        movieName.setText(newMovieName);\r\n        Film.setText(newFilm);\r\n        Genre.setText(genres);\r\n        description.setText(filmDescription);\r\n        duration.setText(filmDuration);\r\n        imagePreview.setImage(image);\r\n        Director.setText(director);\r\n        Cast.setText(casts);\r\n    }\r\n\r\n    public void disableWatch() {\r\n        Watch.setOnMouseClicked(event -> Watch.setDisable(true));\r\n    }\r\n\r\n    public void watchMovie(Movie movie) {\r\n        if (WatchRecord.watchedMovies.contains(movie)) {\r\n            watchLater.setDisable(true);\r\n        }\r\n        if (RecordedMoviesController.toWatchMovies.contains(movie)) {\r\n            watchLater.setDisable(true);\r\n        }\r\n        Watch.setOnMouseClicked(event -> {\r\n            watchLater.setDisable(true);\r\n            movie.userRate = Max_Rating;\r\n            for (int c = 0; c < Movie.allmovies.size(); c++) {\r\n                if (movie.getTitle() == Movie.allmovies.get(c).getTitle()) {\r\n                    Movie.allmovies.get(c).inc_views();\r\n                }\r\n            }\r\n            if (WatchRecord.watchedMovies.contains(movie)) {\r\n                WatchRecord.watchedMovies.remove(movie);\r\n                WatchRecord.watchedMovies.add(movie);\r\n                if (RecordedMoviesController.toWatchMovies.contains(movie)) {\r\n                    RecordedMoviesController.toWatchMovies.remove(movie);\r\n                }\r\n            } else {\r\n                WatchRecord.watchedMovies.add(movie);\r\n            }\r\n\r\n\r\n            Watch.setDisable(true);\r\n        });\r\n        watchLater.setOnMouseClicked(event -> {\r\n            MainPageController.movie5 = movie;\r\n            if (RecordedMoviesController.toWatchMovies.contains(movie)) {\r\n                System.out.println(\"That Movie here\");\r\n            } else {\r\n                RecordedMoviesController.toWatchMovies.add(movie);\r\n            }\r\n            watchLater.setDisable(true);\r\n        });\r\n\r\n    }\r\n\r\n    public void Admin(Movie movie) {\r\n        isAdmin = true;\r\n        watchLater.setVisible(false);\r\n        Watch.setVisible(false);\r\n        starsRow.setVisible(false);\r\n        Button edit = new Button(\"Edit\");\r\n        edit.setStyle(\"-fx-background-color: black;-fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\");\r\n        edit.setPrefWidth(73.0);\r\n        edit.setPrefHeight(30.0);\r\n        edit.setLayoutX(1443.0);\r\n        edit.setLayoutY(770.0);\r\n        edit.setTextFill(Color.WHITE);\r\n        pane.getChildren().add(edit);\r\n        edit.setOnMouseEntered(event -> edit.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        edit.setOnMouseExited(event -> edit.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        edit.setOnMouseClicked(event -> {\r\n            try {\r\n                ToEditMovie(event, movie);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n    }\r\n    private void ToEditMovie(MouseEvent event, Movie movie) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(getClass().getResource(\"movie-edit.fxml\"));\r\n        root = loader.load();\r\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n        MoveEdit controller=loader.getController();\r\n        controller.setStage(stage);\r\n        controller.setUpPromptText(movie);\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    public void backScenes(ActionEvent event) throws IOException {\r\n        Parent root = null;\r\n        if (isAdmin) {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"all-movies.fxml\"));\r\n            root = loader.load();\r\n            AllMoviesController controller = loader.getController();\r\n            controller.setStage(stage);\r\n        }\r\n        else if(page5==0) {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"main-page.fxml\"));\r\n            root = loader.load();\r\n            MainPageController controller = loader.getController();\r\n            controller.setStage(stage);\r\n        }\r\n        else if(page5==1){\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"watch-record.fxml\"));\r\n            root = loader.load();\r\n            WatchRecord controller = loader.getController();\r\n            controller.setStage(stage);\r\n            controller.initializeItems();\r\n        }\r\n        else {\r\n            FXMLLoader loader=new FXMLLoader(getClass().getResource(\"recorded-movies.fxml\"));\r\n            root = loader.load();\r\n            stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n            RecordedMoviesController controller=loader.getController();\r\n            controller.setStage(stage);\r\n        }\r\n        stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(\"Movie\");\r\n        stage.setResizable(false);\r\n        stage.setX(-7);\r\n        stage.setY(0);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    public void setStars(){\r\n\r\n        if(movie!=null || WatchRecord.watchedMovies.contains(movie)) {\r\n            for (int i = 0; i < movie.userRate; i++) {\r\n                stars[i].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/fullStar.png\"))));\r\n            }\r\n            for (int j = 0; j < movie.userRate; j++){\r\n                int finalJ = j;\r\n                stars[j].setOnMouseExited(event2 ->\r\n                        stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/fullStar.png\")))));\r\n            }\r\n            for (int h = movie.userRate; h > movie.userRate+(5-movie.userRate); h++){\r\n                int finalJ = h;\r\n                stars[h].setOnMouseExited(event2 ->\r\n                        stars[finalJ].setImage(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"assets/emptyStar.png\")))));\r\n            }\r\n\r\n        }\r\n    }\r\n    public void onMouseEntered() {\r\n        Back.setOnMouseEntered(event -> Back.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        Watch.setOnMouseEntered(event -> Watch.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        watchLater.setOnMouseEntered(event -> watchLater.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n\r\n    public void onMouseExit() {\r\n        Back.setOnMouseExited(event -> Back.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        Watch.setOnMouseExited(event -> Watch.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n        watchLater.setOnMouseExited(event -> watchLater.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n    //////////////////////////\r\n\r\n    //////////////////////////\r\n    public void setStage(Stage stage) {\r\n        this.stage = stage;\r\n    }\r\n    public void setMovie(Movie movie){\r\n        this.movie=movie;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/MovieController.java b/src/main/java/com/example/watch_it/MovieController.java
--- a/src/main/java/com/example/watch_it/MovieController.java	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/src/main/java/com/example/watch_it/MovieController.java	(date 1702752785812)
@@ -67,6 +67,7 @@
     public Pane pane;
     @FXML
     private HBox starsRow;
+    private User user;
 
     private ImageView[] stars;
     private Movie movie;
@@ -334,5 +335,8 @@
     public void setMovie(Movie movie){
         this.movie=movie;
     }
+    public void setUser(User user){
+        this.user = user;
+    }
 
 }
\ No newline at end of file
Index: src/main/java/com/example/watch_it/First.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport javafx.application.Platform;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.Objects;\r\n\r\npublic class First {\r\n    private Stage stage;\r\n    private Scene scene;\r\n\r\n    private Parent root;\r\n    @FXML\r\n    private Button exitButton;\r\n\r\n    @FXML\r\n    public void initialize(){\r\n        onMouseEntered();\r\n        onMouseExit();\r\n    }\r\n    @FXML\r\n    public void UserSignIn(ActionEvent event) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(getClass().getResource(\"sign-in.fxml\"));\r\n        root = loader.load();\r\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n        SignIn controller=loader.getController();\r\n        controller.setStage(stage);\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    @FXML\r\n    public void AdminSignIn(ActionEvent event) throws IOException {\r\n        root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(\"admin-page.fxml\")));\r\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\r\n        scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n}\r\n    public void setStage(Stage stage){\r\n        this.stage=stage;\r\n}\r\n    @FXML\r\n    private void onMouseEntered(){\r\n        exitButton.setOnMouseEntered(event -> exitButton.setStyle(\"-fx-background-color: #FFC107; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n    @FXML\r\n    private void onMouseExit(){\r\n        exitButton.setOnMouseExited(event -> exitButton.setStyle(\"-fx-background-color: black; -fx-background-radius: 25; -fx-border-color: white; -fx-border-radius: 25;\"));\r\n    }\r\n    @FXML\r\n    private void Exit(){\r\n        Admin.writeOnFile(new File(\"data.txt\"));\r\n        Platform.exit();\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/First.java b/src/main/java/com/example/watch_it/First.java
--- a/src/main/java/com/example/watch_it/First.java	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/src/main/java/com/example/watch_it/First.java	(date 1702746857360)
@@ -16,7 +16,6 @@
 public class First {
     private Stage stage;
     private Scene scene;
-
     private Parent root;
     @FXML
     private Button exitButton;
@@ -45,7 +44,7 @@
         scene = new Scene(root);
         stage.setScene(scene);
         stage.show();
-}
+    }
     public void setStage(Stage stage){
         this.stage=stage;
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"236de910-bb88-43c2-a220-e8030a7a2c95\" name=\"Changes\" comment=\"view user\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/MoveEdit.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/movies-data.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/movies-data.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AddMovieController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AddMovieController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AllMoviesController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AllMoviesController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AllUsersController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/AllUsersController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/ForgotPassword.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/ForgotPassword.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MoveEdit.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MoveEdit.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Movie.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/Movie.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MovieController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/MovieController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/RecordedMoviesController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/RecordedMoviesController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/SignIn.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/SignIn.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/UpdatePageController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/UpdatePageController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/User.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/User.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/WatchRecord.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/WatchRecord.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/profilePageController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/profilePageController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/searchViewController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/watch_it/searchViewController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/forgot-pass.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/forgot-pass.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/movie-edit.fxml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/movie-view.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/movie-view.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/profile-page.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/profile-page.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/search-view.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/search-view.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-in.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-in.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-up.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-up.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/update-page.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/watch_it/update-page.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"FxmlFile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Nada-Hany&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"cc5d3d54-1728-462d-8317-3b96966b79fa\" />\r\n        <option name=\"url\" value=\"https://github.com/Youssef-Mohsen/Watch_It.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2YeFVvR1cMbdmzoU0JjHSXbxBBy\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/programming/java/Watch_It/src/main/java/com/example/watch_it&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\\java\\com\\example\\watch_it\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Youssef Mohsen\\IdeaProjects\\Watch_It\\src\\main\\resources\\com\\example\\watch_it\\assets\" />\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\\resources\\com\\example\\watch_it\" />\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\\java\\com\\example\\watch_it\" />\r\n      <recent name=\"C:\\programming\\java\\Watch_It\\src\\main\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.watch_it.HelloApplication\" />\r\n      <module name=\"Watch_IT\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.watch_it.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Watch_It\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Watch_It\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.HelloApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"236de910-bb88-43c2-a220-e8030a7a2c95\" name=\"Changes\" comment=\"\" />\r\n      <created>1700878165910</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1700878165910</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"add admin class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700881919077</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700881919077</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"add cast, director and artist classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701195323300</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701195323300</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"integration\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701195620613</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701195620613</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"handling everything in one file\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701306289338</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701306289338</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"getting the month with most revenue\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701479503607</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701479503607</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"main class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701480011804</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701480011804</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"add first page gui\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702240257713</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702240257714</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"reading movies\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702329606254</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702329606254</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Update project finally.....\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702482909178</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702482909178</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Update project finally.....\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702483119306</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702483119306</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Update icons\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702485535182</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702485535182</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"view user\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702601842653</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702601842654</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"add admin class\" />\r\n    <MESSAGE value=\"add cast, director and artist classes\" />\r\n    <MESSAGE value=\"integration\" />\r\n    <MESSAGE value=\"handling everything in one file\" />\r\n    <MESSAGE value=\"getting the month with most revenue\" />\r\n    <MESSAGE value=\"main class\" />\r\n    <MESSAGE value=\"add first page gui\" />\r\n    <MESSAGE value=\"reading movies\" />\r\n    <MESSAGE value=\"Update project finally.....\" />\r\n    <MESSAGE value=\"Update icons\" />\r\n    <MESSAGE value=\"view user\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"view user\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/.idea/workspace.xml	(date 1702766705321)
@@ -4,37 +4,21 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="236de910-bb88-43c2-a220-e8030a7a2c95" name="Changes" comment="view user">
-      <change afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/MoveEdit.fxml" afterDir="false" />
+    <list default="true" id="236de910-bb88-43c2-a220-e8030a7a2c95" name="Changes" comment="integration">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/data.txt" beforeDir="false" afterPath="$PROJECT_DIR$/data.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/movies-data.txt" beforeDir="false" afterPath="$PROJECT_DIR$/movies-data.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AddMovieController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AddMovieController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Admin.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AllMoviesController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AllMoviesController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AllUsersController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/AllUsersController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/ForgotPassword.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/ForgotPassword.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Artist.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Artist.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Cast.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Cast.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Director.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Director.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/First.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/First.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/HelloApplication.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MainPageController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MoveEdit.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MoveEdit.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Movie.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/Movie.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MovieController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/MovieController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/RecordedMoviesController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/RecordedMoviesController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/SignIn.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/SignIn.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/UpdatePageController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/UpdatePageController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/User.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/WatchRecord.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/WatchRecord.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/profilePageController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/profilePageController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/watch_it/searchViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/watch_it/searchViewController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/forgot-pass.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/forgot-pass.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/main-page.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/movie-edit.fxml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/movie-view.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/movie-view.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/profile-page.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/profile-page.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/search-view.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/search-view.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-in.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-in.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-up.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/sign-up.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/update-page.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/watch_it/update-page.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -236,7 +220,15 @@
       <option name="project" value="LOCAL" />
       <updated>1702601842654</updated>
     </task>
-    <option name="localTasksCounter" value="13" />
+    <task id="LOCAL-00013" summary="integration">
+      <option name="closed" value="true" />
+      <created>1702694954941</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1702694954941</updated>
+    </task>
+    <option name="localTasksCounter" value="14" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -253,7 +245,6 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="add admin class" />
     <MESSAGE value="add cast, director and artist classes" />
-    <MESSAGE value="integration" />
     <MESSAGE value="handling everything in one file" />
     <MESSAGE value="getting the month with most revenue" />
     <MESSAGE value="main class" />
@@ -262,7 +253,18 @@
     <MESSAGE value="Update project finally....." />
     <MESSAGE value="Update icons" />
     <MESSAGE value="view user" />
-    <option name="LAST_COMMIT_MESSAGE" value="view user" />
+    <MESSAGE value="integration" />
+    <option name="LAST_COMMIT_MESSAGE" value="integration" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <breakpoint enabled="true" type="java-exception">
+          <properties class="java.lang.NullPointerException" package="java.lang" />
+          <option name="timeStamp" value="5" />
+        </breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: data.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>user,nada,123456,1,nada,ayman,basic,nadaAyman@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Oppenheimer,watched,Avengers: Endgame,null,Joker,3\r\nuser,youssef,456789,2,youssef,mohsen,premium,youssefMohsen@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,null,The Dark Knight,3\r\nuser,Mai,123456,3,Mai,Ezz,basic,MaiEzz@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Oppenheimer,watched,Avengers: Endgame,null,Joker,3\r\nuser,Basmala,456789,4,Basmala,Tarek,premium,Basmala-Tarek@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,null,The Dark Knight,3\r\nuser,Tasneem,123456,5,Tasneem,Mohamed,basic,TasneemMohamed@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Oppenheimer,watched,Avengers: Endgame,null,Joker,3\r\nuser,toka,456789,6,toka,karam,premium,tokaKaram@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,nsidious: The Red Door,watched,Oppenheimer,null,The Dark Knight,3\r\nuser,youssef,456789,7,youssef,ahmad,premium,youssefAhmad@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,null,The Dark Knight,3\r\ncast,Patrick,Wilson,50,male,American,Columbus,Insidious: The Red Door\r\ncast,Rose,Byrne,44,female,Australian,Insidious: The Red Door\r\ncast,Joaquin,Phoenix,49,male,American,Joker\r\ncast,Robert,DeNiro,80,male,American,Joker\r\ncast,Joe,Pesci,80,male,American,Home Alone\r\ncast,Kate,Winslet,48,female,Titanic\r\ncast,Macaulay,Culkin,43,male,American,Home Alone\r\ncast,Daniel,Stern,66,male,American,Home Alone\r\ncast,Robert,DowneyJr,58,male,American,Avengers: Endgame,Sherlock Holmes,Oppenheimer\r\ncast,Benedict,Cumberbatch,40,male,English,Avengers: Endgame\r\ncast,Chris,Hemsworth,40,male,English,Avengers: Endgame\r\ncast,Mark,Strong,60,male,British,Sherlock Holmes\r\ncast,Jude,Law,50,male,English,Sherlock Holmes\r\ncast,Cillian,Murphy,50,male,Irish,Oppenheimer,The Dark Knight\r\ncast,Matt,Damon,53,male,American,The Dark Knight\r\ncast,Christian,Bale,49,male,American,The Dark Knight\r\ncast,Morgan,Freeman,86,male,American,The Dark Knight\r\ndirector,Christopher,Nolan,53,male,british,The Dark Knight,Oppenheimer\r\ndirector,Guy,Ritchie,55,male,british,Sherlock Holmes\r\ndirector,Anthony,Russo,53,male,American,Avengers: Endgame\r\ndirector,Chris,Columbus,65,male,Italian,Home Alone\r\ndirector,Todd,Phillips,52,male,American,Joker\r\ndirector,Patrick,Wilson,50,male,American,Insidious: The Red Door\r\ndirector,James,Cameron,69,male,Canadian,Titanic\r\n2cast,Leonardo,DiCaprio,49,male,Inception,Titanic\r\nadmin,nada,123456\r\nadmin,mai,123456\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data.txt b/data.txt
--- a/data.txt	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/data.txt	(date 1702766722275)
@@ -1,11 +1,11 @@
-user,nada,123456,1,nada,ayman,basic,nadaAyman@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Oppenheimer,watched,Avengers: Endgame,null,Joker,3
-user,youssef,456789,2,youssef,mohsen,premium,youssefMohsen@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,null,The Dark Knight,3
-user,Mai,123456,3,Mai,Ezz,basic,MaiEzz@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Oppenheimer,watched,Avengers: Endgame,null,Joker,3
-user,Basmala,456789,4,Basmala,Tarek,premium,Basmala-Tarek@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,null,The Dark Knight,3
-user,Tasneem,123456,5,Tasneem,Mohamed,basic,TasneemMohamed@gmail.com,2023-12-06,assets/batbot-01.png,to be watched,Oppenheimer,watched,Avengers: Endgame,null,Joker,3
-user,toka,456789,6,toka,karam,premium,tokaKaram@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,nsidious: The Red Door,watched,Oppenheimer,null,The Dark Knight,3
-user,youssef,456789,7,youssef,ahmad,premium,youssefAhmad@gmail.com,2023-10-09,assets/batbot-02.png,to be watched,Insidious: The Red Door,watched,Oppenheimer,null,The Dark Knight,3
-cast,Patrick,Wilson,50,male,American,Columbus,Insidious: The Red Door
+user,nada,123456,1,nada,ayman,basic,nadaAyman@gmail.com,2023-12-06,assets/batbot-01.pngto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watched,watched,Joker,3,Avengers: Endgame,-1,done,
+user,youssef,456789,1,youssef,mohsen,premium,youssefMohsen@gmail.com,2023-10-09,assets/batbot-02.pngto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watched,watched,Oppenheimer,-1,The Dark Knight,3,done,
+user,Mai,123456,1,Mai,Ezz,basic,MaiEzz@gmail.com,2023-12-06,assets/batbot-01.pngto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watched,watched,Avengers: Endgame,-1,Joker,3,done,
+user,Basmala,456789,1,Basmala,Tarek,premium,Basmala-Tarek@gmail.com,2023-10-09,assets/batbot-02.pngto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watched,watched,Oppenheimer,-1,The Dark Knight,3,done,
+user,Tasneem,123456,1,Tasneem,Mohamed,basic,TasneemMohamed@gmail.com,2023-12-06,assets/batbot-01.pngto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watched,watched,Avengers: Endgame,-1,Joker,3,done,
+user,toka,456789,1,toka,karam,premium,tokaKaram@gmail.com,2023-10-09,assets/batbot-02.pngto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watched,watched,Oppenheimer,-1,The Dark Knight,3,done,
+user,youssef,456789,1,youssef,ahmad,premium,youssefAhmad@gmail.com,2023-10-09,assets/batbot-02.pngto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watchedto be watched,watched,Oppenheimer,-1,The Dark Knight,3,done,
+cast,Patrick,Wilson,50,male,American,Insidious: The Red Door,Columbus
 cast,Rose,Byrne,44,female,Australian,Insidious: The Red Door
 cast,Joaquin,Phoenix,49,male,American,Joker
 cast,Robert,DeNiro,80,male,American,Joker
@@ -13,22 +13,22 @@
 cast,Kate,Winslet,48,female,Titanic
 cast,Macaulay,Culkin,43,male,American,Home Alone
 cast,Daniel,Stern,66,male,American,Home Alone
-cast,Robert,DowneyJr,58,male,American,Avengers: Endgame,Sherlock Holmes,Oppenheimer
+cast,Robert,DowneyJr,58,male,American,Oppenheimer,Sherlock Holmes,Avengers: Endgame
 cast,Benedict,Cumberbatch,40,male,English,Avengers: Endgame
 cast,Chris,Hemsworth,40,male,English,Avengers: Endgame
 cast,Mark,Strong,60,male,British,Sherlock Holmes
 cast,Jude,Law,50,male,English,Sherlock Holmes
-cast,Cillian,Murphy,50,male,Irish,Oppenheimer,The Dark Knight
+cast,Cillian,Murphy,50,male,Irish,The Dark Knight,Oppenheimer
 cast,Matt,Damon,53,male,American,The Dark Knight
 cast,Christian,Bale,49,male,American,The Dark Knight
+cast,Leonardo,DiCaprio,49,male,Inception,Titanic
 cast,Morgan,Freeman,86,male,American,The Dark Knight
-director,Christopher,Nolan,53,male,british,The Dark Knight,Oppenheimer
+director,Christopher,Nolan,53,male,british,Oppenheimer,The Dark Knight
 director,Guy,Ritchie,55,male,british,Sherlock Holmes
 director,Anthony,Russo,53,male,American,Avengers: Endgame
 director,Chris,Columbus,65,male,Italian,Home Alone
 director,Todd,Phillips,52,male,American,Joker
 director,Patrick,Wilson,50,male,American,Insidious: The Red Door
 director,James,Cameron,69,male,Canadian,Titanic
-2cast,Leonardo,DiCaprio,49,male,Inception,Titanic
 admin,nada,123456
 admin,mai,123456
Index: src/main/java/com/example/watch_it/Director.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.watch_it;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\n\r\npublic class Director extends Artist {\r\n    static ArrayList<Director> allDirectors = new ArrayList<Director>();\r\n    public void Read_File(ArrayList<String>s,ArrayList<Director> directors){\r\n        for (String i:s) {\r\n            String[]row=i.split(\",\");\r\n            Director d=new Director();\r\n            d.setFirst_Name(row[0]);\r\n            d.setSecond_Name(row[1]);\r\n            d.setAge(Integer.parseInt(row[2]));\r\n            d.setGender(row[3]);\r\n            d.setNationality(row[4]);\r\n            for(int j=5;j<row.length;j++){\r\n                d.Movies.add(row[j]);\r\n            }\r\n            directors.add(d);\r\n        }\r\n    }\r\n\r\n    public void Add_Director( String first_name,String second_name,int age,String gender,String Nationality,int num,ArrayList<String> movie){\r\n        Director d=new Director();\r\n        d.setFirst_Name(first_name);\r\n        d.setSecond_Name(second_name);\r\n        d.setAge(age);\r\n        d.setGender(gender);\r\n        d.setNationality(Nationality);\r\n        d.setMovies(movie);\r\n        // Admin.directors.add(d);\r\n    }\r\n    public void Update_Director(int index,String movie){\r\n\r\n        allDirectors.get(index).Movies.add(movie);\r\n    }\r\n\r\n    public static Director  Search_director(String first_name,String second_name) {\r\n        for (Director m : allDirectors) {\r\n\r\n            if (m.getFirst_Name().equals(first_name) && m.getSecond_Name().equals(second_name)) {\r\n\r\n                return m;\r\n            }\r\n\r\n        }\r\n        return null;\r\n    }\r\n    public int  Check(String first_name,String second_name) {\r\n        for (int i=0;i<allDirectors.size();i++) {\r\n\r\n            if (allDirectors.get(i).getFirst_Name().equals(first_name) && allDirectors.get(i).getSecond_Name().equals(second_name)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    public void Delete(String first_name,String second_name)\r\n    {\r\n        for (Director d:allDirectors) {\r\n            if(d.getFirst_Name().equals(first_name)&&d.getSecond_Name().equals(second_name))\r\n                allDirectors.remove(d);\r\n            break;\r\n        }\r\n    }\r\n    public void change_arraydirectr(ArrayList<String>movies,ArrayList<String>arrayList)\r\n    {\r\n        String line=null;\r\n        for(Director d:allDirectors)\r\n        {\r\n            String []row=new String[5+movies.size()];\r\n            String s=String.valueOf(d.getAge());\r\n            int i=5;\r\n            row[0]=d.getFirst_Name();\r\n            row[1]=d.getSecond_Name();\r\n            row[2]=s;\r\n            row[3]=d.getGender();\r\n            row[4]=d.getNationality();\r\n            for(String m:movies)\r\n            {\r\n                row[i]=m;\r\n                i++;\r\n            }\r\n            line=String.join(\",\",row);\r\n            arrayList.add(line);\r\n\r\n        }\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/watch_it/Director.java b/src/main/java/com/example/watch_it/Director.java
--- a/src/main/java/com/example/watch_it/Director.java	(revision d2fe3c4f6c777882df69f8652f6ad3788d2a71ef)
+++ b/src/main/java/com/example/watch_it/Director.java	(date 1702763730672)
@@ -88,4 +88,13 @@
         }
 
     }
+    @Override
+    public String toString(){
+        String data = "";
+        data = data.concat("director").concat(",").concat(getFirst_Name()).concat(",").concat(getSecond_Name()).concat(",").concat(Integer.toString(getAge())).concat(",").concat(getGender()).concat(",").concat(getNationality());
+        for(String movie: getMovies()){
+            data = data.concat(",").concat(movie);
+        }
+        return data;
+    }
 }
\ No newline at end of file
